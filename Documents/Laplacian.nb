(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    446341,       9722]
NotebookOptionsPosition[    440094,       9530]
NotebookOutlinePosition[    440483,       9547]
CellTagsIndexPosition[    440440,       9544]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"], "+", "1"}], ",", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}], "\[LessEqual]", 
         FractionBox["1", "4"]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"b", ",", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}], ">", 
         FractionBox["1", "4"]}]}], "}"}]}], "}"}], "]"}], "//", 
   "PiecewiseExpand"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}], ",", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}], "\[LessEqual]", 
         FractionBox["1", "4"]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          FractionBox["1", "4"], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             RowBox[{"8", "b"}]], "-", 
            FractionBox["1", "b"]}], ")"}]}], "+", 
         RowBox[{
          FractionBox["1", "b"], 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             SuperscriptBox[
              RowBox[{"(", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox["x", "2"], "+", 
                 SuperscriptBox["y", "2"]}]], ")"}], "4"], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], ")"}], "2"]}], ")"}]}], "+", 
         RowBox[{"C", " ", 
          RowBox[{"Log", "[", 
           RowBox[{"2", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["x", "2"], "+", 
              SuperscriptBox["y", "2"]}]]}], "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}], ">", 
         FractionBox["1", "4"]}]}], "}"}]}], "}"}], "]"}], "//", 
   "PiecewiseExpand"}]}]}], "Input",
 CellChangeTimes->{{3.5971233906462*^9, 3.5971234383782*^9}, {
  3.5971237402432003`*^9, 3.5971237703691998`*^9}, {3.5971238011442003`*^9, 
  3.5971240932762003`*^9}, {3.5971241529802*^9, 3.5971241533241997`*^9}, {
  3.5971242139322*^9, 3.5971242635262003`*^9}, {3.5971243647222*^9, 
  3.5971243764242*^9}, {3.5971244897302*^9, 3.5971244916071997`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]", "[", "r_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SuperscriptBox["r", "2"], "+", "1"}], ",", 
        RowBox[{"r", "\[LessEqual]", 
         FractionBox["1", "2"]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"b", ",", 
        RowBox[{"r", ">", 
         FractionBox["1", "2"]}]}], "}"}]}], "}"}], "]"}], "//", 
   "PiecewiseExpand"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u", "[", "r_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["r", "2"], ",", 
        RowBox[{"r", "\[LessEqual]", 
         FractionBox["1", "2"]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          FractionBox["1", "4"], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             RowBox[{"8", "b"}]], "-", 
            FractionBox["1", "b"]}], ")"}]}], "+", 
         RowBox[{
          FractionBox["1", "b"], 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             SuperscriptBox["r", "4"], "2"], "+", 
            SuperscriptBox["r", "2"]}], ")"}]}], "+", 
         RowBox[{"C", " ", 
          RowBox[{"Log", "[", 
           RowBox[{"2", "r"}], "]"}]}]}], ",", 
        RowBox[{"r", ">", 
         FractionBox["1", "2"]}]}], "}"}]}], "}"}], "]"}], "//", 
   "PiecewiseExpand"}]}]}], "Input",
 CellChangeTimes->{{3.6012965784166*^9, 3.6012966694356003`*^9}, {
  3.6012967002236*^9, 3.6012967289456*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FL", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Beta]", "[", "r", "]"}], 
      RowBox[{"u", "[", "r", "]"}]}], ",", "r"}], "]"}], "//", 
   "PiecewiseExpand"}]}], "\[IndentingNewLine]", 
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FL", "/.", 
     RowBox[{"b", "\[Rule]", 
      SuperscriptBox["10", 
       RowBox[{"-", "3"}]]}]}], "/.", 
    RowBox[{"C", "\[Rule]", 
     FractionBox["1", "10"]}]}], ",", 
   RowBox[{"r", "\[Rule]", 
    FractionBox["1", "2"]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FL", "/.", 
     RowBox[{"b", "\[Rule]", 
      SuperscriptBox["10", "3"]}]}], "/.", 
    RowBox[{"C", "\[Rule]", 
     FractionBox["1", "10"]}]}], ",", 
   RowBox[{"r", "\[Rule]", 
    FractionBox["1", "2"]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{"r", "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["r", "3"]}]}], ")"}]}], "/.", 
  RowBox[{"r", "\[Rule]", 
   RowBox[{"1", "/", "2"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"b", " ", "C"}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["r", "2"]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["r", "4"]}]}], "r"], "/.", 
    RowBox[{"r", "\[Rule]", 
     RowBox[{"1", "/", "2"}]}]}], "/.", 
   RowBox[{"b", "\[Rule]", 
    SuperscriptBox["10", 
     RowBox[{"-", "3"}]]}]}], "/.", 
  RowBox[{"C", "\[Rule]", 
   FractionBox["1", "10"]}]}]}], "Input",
 CellChangeTimes->{{3.6012965072506*^9, 3.6012965130576*^9}, {
   3.6012967445986*^9, 3.6012967462446003`*^9}, {3.6012970097176*^9, 
   3.6012970165425997`*^9}, {3.6012970605416*^9, 3.6012971118806*^9}, {
   3.6012972961306*^9, 3.6012974101736*^9}, {3.6012975400856*^9, 
   3.6012975407396*^9}, {3.6012976309476*^9, 3.6012976358185997`*^9}, 
   3.6012976703796*^9, {3.6012982660346003`*^9, 3.6012982776516*^9}, {
   3.6012983534856*^9, 3.6012983564835997`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"Indeterminate", 
        RowBox[{"r", "\[Equal]", 
         FractionBox["1", "2"]}]},
       {
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"r", "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["r", "3"]}]}], ")"}]}], 
        RowBox[{"r", "<", 
         FractionBox["1", "2"]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"b", " ", "C"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["r", "2"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["r", "4"]}]}], "r"], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.6012965147136*^9, 3.6012967532665997`*^9, 3.6012970172426*^9, {
   3.6012970692136*^9, 3.6012971125626*^9}, {3.6012973094756002`*^9, 
   3.6012973284066*^9}, {3.6012974005056*^9, 3.6012974127496*^9}, 
   3.6012975412176*^9, 3.6012976369906*^9, 3.6012976707536*^9, 
   3.6012983274356003`*^9}],

Cell[BoxData[
 FractionBox["6251", "5000"]], "Output",
 CellChangeTimes->{
  3.6012965147136*^9, 3.6012967532665997`*^9, 3.6012970172426*^9, {
   3.6012970692136*^9, 3.6012971125626*^9}, {3.6012973094756002`*^9, 
   3.6012973284066*^9}, {3.6012974005056*^9, 3.6012974127496*^9}, 
   3.6012975412176*^9, 3.6012976369906*^9, 3.6012976707536*^9, 
   3.6012983274466*^9}],

Cell[BoxData[
 FractionBox["805", "4"]], "Output",
 CellChangeTimes->{
  3.6012965147136*^9, 3.6012967532665997`*^9, 3.6012970172426*^9, {
   3.6012970692136*^9, 3.6012971125626*^9}, {3.6012973094756002`*^9, 
   3.6012973284066*^9}, {3.6012974005056*^9, 3.6012974127496*^9}, 
   3.6012975412176*^9, 3.6012976369906*^9, 3.6012976707536*^9, 
   3.6012983275966*^9}],

Cell[BoxData[
 FractionBox["3", "2"]], "Output",
 CellChangeTimes->{
  3.6012965147136*^9, 3.6012967532665997`*^9, 3.6012970172426*^9, {
   3.6012970692136*^9, 3.6012971125626*^9}, {3.6012973094756002`*^9, 
   3.6012973284066*^9}, {3.6012974005056*^9, 3.6012974127496*^9}, 
   3.6012975412176*^9, 3.6012976369906*^9, 3.6012976707536*^9, 
   3.6012983276026*^9}],

Cell[BoxData[
 FractionBox["6251", "5000"]], "Output",
 CellChangeTimes->{
  3.6012965147136*^9, 3.6012967532665997`*^9, 3.6012970172426*^9, {
   3.6012970692136*^9, 3.6012971125626*^9}, {3.6012973094756002`*^9, 
   3.6012973284066*^9}, {3.6012974005056*^9, 3.6012974127496*^9}, 
   3.6012975412176*^9, 3.6012976369906*^9, 3.6012976707536*^9, 
   3.6012983276106*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FL", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"u", "[", "r", "]"}], ",", "r"}], "]"}], "//", 
   "PiecewiseExpand"}]}], "\[IndentingNewLine]", 
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FL", "/.", 
     RowBox[{"b", "\[Rule]", 
      SuperscriptBox["10", 
       RowBox[{"-", "3"}]]}]}], "/.", 
    RowBox[{"C", "\[Rule]", 
     FractionBox["1", "10"]}]}], ",", 
   RowBox[{"r", "\[Rule]", 
    FractionBox["1", "2"]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FL", "/.", 
     RowBox[{"b", "\[Rule]", 
      SuperscriptBox["10", "3"]}]}], "/.", 
    RowBox[{"C", "\[Rule]", 
     FractionBox["1", "10"]}]}], ",", 
   RowBox[{"r", "\[Rule]", 
    FractionBox["1", "2"]}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.6012974573546*^9, {3.6012975300076*^9, 3.6012975307416*^9}, 
   3.6012976895376*^9, {3.6012982844446*^9, 3.6012982886446*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"Indeterminate", 
        RowBox[{"r", "\[Equal]", 
         FractionBox["1", "2"]}]},
       {
        RowBox[{"2", " ", "r"}], 
        RowBox[{"r", "<", 
         FractionBox["1", "2"]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"b", " ", "C"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["r", "2"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["r", "4"]}]}], 
         RowBox[{"b", " ", "r"}]], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6012974578866*^9, 3.6012975316646*^9, 3.6012976905746*^9,
   3.6012982897506*^9}],

Cell[BoxData[
 FractionBox["6251", "5"]], "Output",
 CellChangeTimes->{3.6012974578866*^9, 3.6012975316646*^9, 3.6012976905746*^9,
   3.6012982898036003`*^9}],

Cell[BoxData[
 FractionBox["161", "800"]], "Output",
 CellChangeTimes->{3.6012974578866*^9, 3.6012975316646*^9, 3.6012976905746*^9,
   3.6012982898106003`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"LogPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"u", "[", "r", "]"}], "/.", 
     RowBox[{"b", "\[Rule]", 
      SuperscriptBox["10", 
       RowBox[{"-", "3"}]]}]}], "/.", 
    RowBox[{"C", "\[Rule]", "0.1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"u", "[", "r", "]"}], "/.", 
     RowBox[{"b", "\[Rule]", 
      SuperscriptBox["10", "3"]}]}], "/.", 
    RowBox[{"C", "\[Rule]", "0.1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6012977320425997`*^9, 3.6012978702086*^9}, {
  3.6012981333496*^9, 3.6012981377956*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
1e0wDqaim0oic79/s6E1117WJ4SK/gdZIfwN
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, -18.00980943938883},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  FrameTicks->{{{{-18.420680743952367`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-13.815510557964274`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-9.210340371976182, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm]}, {0., 
       FormBox["1", TraditionalForm]}, {4.605170185988092, 
       FormBox["100", TraditionalForm]}, {-15.935774094164366`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-15.285186528023216`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.894320219336205`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.614018254182046`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.395329053217216`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.215988124561399`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.063971917262773`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.932044374220226`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.330603908176274`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.680016342035124`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.289150033348113`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.008848068193954`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.790158867229126, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.610817938573309, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.458801731274683, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.326874188232134, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.725433722188183, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.074846156047033, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.683979847360021, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.403677882205863, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.184988681241033, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.005647752585217, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.853631545286591, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.721704002244043, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.120263536200091, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.4696759700589417`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.07880966137193, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.7985076962177716, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.579818495252942, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.40047756659712525`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2484613592984996, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.11653381625595151`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.4849066497880004`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.1354942159291497`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.5263605246161616`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.8066624897703196`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.02535169073515, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.204692619390966, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.356708826689592, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.48863636973214, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-18.420680743952367`, 
       FormBox["\"\"", TraditionalForm]}, {-13.815510557964274`, 
       FormBox["\"\"", TraditionalForm]}, {-9.210340371976182, 
       FormBox["\"\"", TraditionalForm]}, {-4.605170185988091, 
       FormBox["\"\"", TraditionalForm]}, {0., 
       FormBox["\"\"", TraditionalForm]}, {4.605170185988092, 
       FormBox["\"\"", TraditionalForm]}, {-15.935774094164366`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-15.285186528023216`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.894320219336205`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.614018254182046`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.395329053217216`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.215988124561399`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.063971917262773`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.932044374220226`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.330603908176274`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.680016342035124`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.289150033348113`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.008848068193954`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.790158867229126, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.610817938573309, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.458801731274683, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.326874188232134, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.725433722188183, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.074846156047033, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.683979847360021, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.403677882205863, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.184988681241033, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.005647752585217, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.853631545286591, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.721704002244043, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.120263536200091, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.4696759700589417`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.07880966137193, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.7985076962177716, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.579818495252942, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.40047756659712525`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2484613592984996, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.11653381625595151`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.4849066497880004`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.1354942159291497`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.5263605246161616`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.8066624897703196`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.02535169073515, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.204692619390966, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.356708826689592, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.48863636973214, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}, {Automatic, Automatic}},
  GridLines->{None, None},
  Method->{},
  PlotRange->{{0, 1}, {-18.00980943938883, 7.105842922850749}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, {{-18.420680743952367`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-13.815510557964274`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-9.210340371976182, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-4.605170185988091, 
      FormBox["0.01`", TraditionalForm]}, {0., 
      FormBox["1", TraditionalForm]}, {4.605170185988092, 
      FormBox["100", TraditionalForm]}, {-15.935774094164366`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-15.285186528023216`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.894320219336205`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.614018254182046`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.395329053217216`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.215988124561399`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.063971917262773`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-13.932044374220226`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-11.330603908176274`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-10.680016342035124`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-10.289150033348113`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-10.008848068193954`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.790158867229126, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.610817938573309, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.458801731274683, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.326874188232134, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-6.725433722188183, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-6.074846156047033, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.683979847360021, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.403677882205863, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.184988681241033, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.005647752585217, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.853631545286591, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.721704002244043, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.120263536200091, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.4696759700589417`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.07880966137193, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.7985076962177716, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.579818495252942, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.40047756659712525`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.2484613592984996, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.11653381625595151`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.4849066497880004`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {3.1354942159291497`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {3.5263605246161616`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {3.8066624897703196`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.02535169073515, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.204692619390966, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.356708826689592, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.48863636973214, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}}]], "Output",
 CellChangeTimes->{{3.6012977450236*^9, 3.6012978706986*^9}, 
   3.6012981394066*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
UOjoycj54/8BMhQqJA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 1}, {0., 0.32053346593354554`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.6012977450236*^9, 3.6012978706986*^9}, 
   3.6012981394955997`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Beta]", "[", 
        RowBox[{"x", ",", "y"}], "]"}], 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"u", "[", 
          RowBox[{"x", ",", "y"}], "]"}], ",", "x"}], "]"}]}], ",", "x"}], 
     "]"}], "+", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Beta]", "[", 
        RowBox[{"x", ",", "y"}], "]"}], 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"u", "[", 
          RowBox[{"x", ",", "y"}], "]"}], ",", "y"}], "]"}]}], ",", "y"}], 
     "]"}]}], "//", "PiecewiseExpand"}]}]], "Input",
 CellChangeTimes->{{3.5971240965372*^9, 3.5971241111822*^9}, 
   3.5971242678942003`*^9}],

Cell[BoxData[
 RowBox[{"4", " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["y", "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.5971240544412003`*^9, 3.5971241668512*^9, 
  3.5971242320411997`*^9, 3.5971242699012003`*^9, 3.5971243811872*^9, 
  3.5971244964462*^9, 3.5978577215629997`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"u", "[", 
  RowBox[{"1", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.5971246134932003`*^9, 3.5971246179722*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     FractionBox["9", 
      RowBox[{"8", " ", "b"}]]}], ")"}]}], "+", 
  FractionBox["3", 
   RowBox[{"2", " ", "b"}]], "+", 
  RowBox[{"C", " ", 
   RowBox[{"Log", "[", "2", "]"}]}]}]], "Output",
 CellChangeTimes->{3.5971246186312*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Luxy", "=", 
  RowBox[{"Div", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"x", ",", "y"}], "]"}], " ", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"b", "[", 
          RowBox[{"x", ",", "y"}], "]"}]}], "}"}]}], "}"}], ".", 
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{"u", "[", 
        RowBox[{"x", ",", "y"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], ",", " ", "\"\<Cartesian\>\""}], 
      "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", " ", "\"\<Cartesian\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Lurt", "=", 
  RowBox[{"Div", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"b", "[", 
          RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "}"}]}], "}"}], ".", 
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{"u", "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "\[Theta]"}], "}"}], ",", " ", "\"\<Polar\>\""}], 
      "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "\[Theta]"}], "}"}], ",", " ", "\"\<Polar\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Luxf", "=", 
  RowBox[{
   RowBox[{"Div", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"a", "[", 
           RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", ",", "0"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"b", "[", 
           RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "}"}]}], "}"}], 
      ".", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"u", "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "}"}], ",", " ", 
        "\"\<Elliptic\>\""}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "}"}], ",", " ", 
     "\"\<Elliptic\>\""}], "]"}], "//", "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "==", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["b", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"b", "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "2"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{
       SuperscriptBox["a", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"2", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}]}], 
    RowBox[{
     SuperscriptBox["\[FormalA]", "2"], 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Sinh", "[", "\[Xi]", "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], ")"}]}]]}], "//", 
  "Simplify"}]}], "Input",
 CellChangeTimes->{{3.5973549785889997`*^9, 3.5973549790550003`*^9}, {
  3.601898365979*^9, 3.601898437017*^9}, {3.6018985035620003`*^9, 
  3.601898558373*^9}, {3.601933734366*^9, 3.6019337346940002`*^9}, {
  3.601933769052*^9, 3.601933769717*^9}, {3.601938965795*^9, 
  3.601939009672*^9}, {3.601942426795*^9, 3.601942473592*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["b", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"x", ",", "y"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["u", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"b", "[", 
    RowBox[{"x", ",", "y"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["u", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "2"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{
    SuperscriptBox["a", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"x", ",", "y"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["u", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"a", "[", 
    RowBox[{"x", ",", "y"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["u", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"x", ",", "y"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.597355009373*^9, {3.60189853331*^9, 3.6018985594189997`*^9}, 
   3.601933736219*^9, 3.601933771328*^9, {3.6019390005959997`*^9, 
   3.601939011825*^9}, {3.601942449992*^9, 3.601942475678*^9}, 
   3.602701582906*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["a", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["u", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "+", 
  FractionBox[
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{
       SuperscriptBox["b", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "r"], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"b", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "2"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "r"], "+", 
    RowBox[{
     RowBox[{"a", "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["u", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}]}]}], "r"], "+", 
  RowBox[{
   RowBox[{"a", "[", 
    RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["u", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"r", ",", "\[Theta]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.597355009373*^9, {3.60189853331*^9, 3.6018985594189997`*^9}, 
   3.601933736219*^9, 3.601933771328*^9, {3.6019390005959997`*^9, 
   3.601939011825*^9}, {3.601942449992*^9, 3.601942475678*^9}, 
   3.602701582922*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["b", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"b", "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{
        SuperscriptBox["a", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"a", "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}]}], ")"}]}], 
   RowBox[{
    SuperscriptBox["\[FormalA]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[CurlyPhi]"}], "]"}], "-", 
      RowBox[{"Cosh", "[", 
       RowBox[{"2", " ", "\[Xi]"}], "]"}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{
  3.597355009373*^9, {3.60189853331*^9, 3.6018985594189997`*^9}, 
   3.601933736219*^9, 3.601933771328*^9, {3.6019390005959997`*^9, 
   3.601939011825*^9}, {3.601942449992*^9, 3.601942475678*^9}, 
   3.6027015831029997`*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.597355009373*^9, {3.60189853331*^9, 3.6018985594189997`*^9}, 
   3.601933736219*^9, 3.601933771328*^9, {3.6019390005959997`*^9, 
   3.601939011825*^9}, {3.601942449992*^9, 3.601942475678*^9}, 
   3.60270158333*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"a", "[", 
     RowBox[{"x", ",", "y"}], "]"}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6244779379528637`*^9, 3.6244779466552258`*^9}, {
  3.6244780318241873`*^9, 3.624478036189695*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["a", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y"}], "]"}], "2"]}], 
   SuperscriptBox[
    RowBox[{"a", "[", 
     RowBox[{"x", ",", "y"}], "]"}], "3"]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["a", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"x", ",", "y"}], "]"}], 
   SuperscriptBox[
    RowBox[{"a", "[", 
     RowBox[{"x", ",", "y"}], "]"}], "2"]]}]], "Output",
 CellChangeTimes->{3.6244779479240093`*^9, 3.624478036855274*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"a", " ", 
        RowBox[{
         SuperscriptBox["u", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "2"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "+", 
       RowBox[{"a", " ", 
        RowBox[{
         SuperscriptBox["u", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"2", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}]}], 
      SuperscriptBox[
       RowBox[{"h", "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "2"]], "\[Equal]", 
     RowBox[{"f", "[", 
      RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], ",", 
    RowBox[{
     SuperscriptBox["u", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"2", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "]"}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"h", "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "2"]}], "a"], "-", 
     RowBox[{
      SuperscriptBox["u", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "2"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], ",", "\[Xi]"}], "]"}], "//",
   "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"h", "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "2"]}], "a"], "-", 
     RowBox[{
      SuperscriptBox["u", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "2"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Xi]", ",", "2"}], "}"}]}], "]"}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"h", "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "2"]}], "a"], "-", 
     RowBox[{
      SuperscriptBox["u", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "2"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], ",", "\[CurlyPhi]"}], 
   "]"}], "//", "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"h", "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "2"]}], "a"], "-", 
     RowBox[{
      SuperscriptBox["u", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "2"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[CurlyPhi]", ",", "2"}], "}"}]}], "]"}], "//", 
  "Simplify"}]}], "Input",
 CellChangeTimes->{{3.624488503134458*^9, 3.6244885363243923`*^9}, {
  3.6244885806138067`*^9, 3.6244885957271967`*^9}, {3.624488637680092*^9, 
  3.6244886413216343`*^9}, {3.624488738605071*^9, 3.624488739578742*^9}, {
  3.6244889652626*^9, 3.624488977855842*^9}, {3.624489397438945*^9, 
  3.6244894074552298`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["u", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"2", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"h", "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "2"]}], "a"], "-", 
     RowBox[{
      SuperscriptBox["u", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "2"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.624488570600729*^9, 3.624488597319886*^9}, 
   3.624488641868886*^9, 3.624488740432694*^9, {3.624488966035963*^9, 
   3.624488978604538*^9}, 3.624489408056061*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"h", "[", 
      RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "+", 
   RowBox[{"2", " ", 
    RowBox[{"f", "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
    RowBox[{"h", "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["h", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "-", 
   RowBox[{"a", " ", 
    RowBox[{
     SuperscriptBox["u", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "2"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}]}], "a"]], "Output",
 CellChangeTimes->{{3.624488570600729*^9, 3.624488597319886*^9}, 
   3.624488641868886*^9, 3.624488740432694*^9, {3.624488966035963*^9, 
   3.624488978604538*^9}, 3.62448940806728*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"2", " ", 
    RowBox[{"f", "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["h", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "2"]}], "+", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"h", "[", 
      RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"2", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "+", 
   RowBox[{"2", " ", 
    RowBox[{"h", "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{
        SuperscriptBox["f", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["h", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["h", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}]}], ")"}]}], "-", 
   RowBox[{"a", " ", 
    RowBox[{
     SuperscriptBox["u", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"2", ",", "2"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}]}], "a"]], "Output",
 CellChangeTimes->{{3.624488570600729*^9, 3.624488597319886*^9}, 
   3.624488641868886*^9, 3.624488740432694*^9, {3.624488966035963*^9, 
   3.624488978604538*^9}, 3.6244894080751867`*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"h", "[", 
      RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "+", 
   RowBox[{"2", " ", 
    RowBox[{"f", "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
    RowBox[{"h", "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["h", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "-", 
   RowBox[{"a", " ", 
    RowBox[{
     SuperscriptBox["u", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "3"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}]}], "a"]], "Output",
 CellChangeTimes->{{3.624488570600729*^9, 3.624488597319886*^9}, 
   3.624488641868886*^9, 3.624488740432694*^9, {3.624488966035963*^9, 
   3.624488978604538*^9}, 3.6244894080822897`*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"2", " ", 
    RowBox[{"f", "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["h", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "2"]}], "+", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"h", "[", 
      RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["f", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "2"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "+", 
   RowBox[{"2", " ", 
    RowBox[{"h", "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{
        SuperscriptBox["f", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["h", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["h", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}]}], ")"}]}], "-", 
   RowBox[{"a", " ", 
    RowBox[{
     SuperscriptBox["u", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "4"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}]}], "a"]], "Output",
 CellChangeTimes->{{3.624488570600729*^9, 3.624488597319886*^9}, 
   3.624488641868886*^9, 3.624488740432694*^9, {3.624488966035963*^9, 
   3.624488978604538*^9}, 3.6244894080899477`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["b", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["u", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"b", "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["u", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "2"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SuperscriptBox["a", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["u", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"a", "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["u", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"2", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}]}], 
      SuperscriptBox[
       RowBox[{"h", "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "2"]], "-", 
     RowBox[{"\[Sigma]", " ", 
      RowBox[{"u", "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}]}], "\[Equal]", 
    RowBox[{"f", "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], ",", 
   RowBox[{
    SuperscriptBox["u", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"D", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"h", "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "2"]}], "+", 
     RowBox[{"\[Sigma]", " ", 
      SuperscriptBox[
       RowBox[{"h", "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "2"], " ", 
      RowBox[{"u", "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{
       SuperscriptBox["b", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"b", "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "2"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{
       SuperscriptBox["a", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}]}], 
    RowBox[{"a", "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]], ",", "\[Xi]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Collect", "[", 
   RowBox[{"%", ",", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"a", "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]], ",", 
      FractionBox["1", 
       SuperscriptBox[
        RowBox[{"a", "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "2"]]}], "}"}], ",", 
    "FullSimplify"}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Collect", "[", 
    RowBox[{
     RowBox[{"%", "//", "FullSimplify"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"u", "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], ",", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], ",", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], ",", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], ",", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], ",", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], ",", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], ",", 
       RowBox[{"f", "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], ",", 
       RowBox[{
        SuperscriptBox["f", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], " ", "}"}], ",", 
     "FullSimplify"}], "]"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"D", "[", 
    RowBox[{",", "\[Xi]"}], "]"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.602701835058*^9, 3.602701908113*^9}, {
  3.6027028097650003`*^9, 3.602702817744*^9}, {3.602702858479*^9, 
  3.6027028685959997`*^9}, {3.624475163971805*^9, 3.6244752066687183`*^9}, {
  3.624475241748612*^9, 3.624475241829111*^9}, {3.624475515173976*^9, 
  3.624475516765521*^9}, {3.6244756303486032`*^9, 3.6244757220168467`*^9}, {
  3.624475834316042*^9, 3.6244759622379303`*^9}, {3.624476540217589*^9, 
  3.62447654765483*^9}, {3.624476634595914*^9, 3.624476651669428*^9}, {
  3.624476695539852*^9, 3.624476695923732*^9}, {3.624476871606348*^9, 
  3.624476882685025*^9}, {3.624476943835021*^9, 3.624477012479207*^9}, {
  3.624477091806314*^9, 3.624477092364797*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["u", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"2", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"h", "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "2"]}], "+", 
      RowBox[{"\[Sigma]", " ", 
       SuperscriptBox[
        RowBox[{"h", "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "2"], " ", 
       RowBox[{"u", "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{
        SuperscriptBox["b", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"b", "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{
        SuperscriptBox["a", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}]}], 
     RowBox[{"a", "[", 
      RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.602702869432*^9, {3.62447520834522*^9, 3.6244752534875174`*^9}, 
   3.6244755174309387`*^9, 3.6244759652691517`*^9, 3.624476549219239*^9, 
   3.624476652608664*^9, 3.624476696730143*^9, 3.624476883474586*^9, {
   3.6244769461678534`*^9, 3.6244769515679398`*^9}, 3.624477013114135*^9, 
   3.624477093165319*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{
      SuperscriptBox["a", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{"h", "[", 
          RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "2"]}], "+", 
       RowBox[{"\[Sigma]", " ", 
        SuperscriptBox[
         RowBox[{"h", "[", 
          RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "2"], " ", 
        RowBox[{"u", "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SuperscriptBox["b", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["u", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"b", "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["u", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "2"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SuperscriptBox["a", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["u", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}]}], ")"}]}], 
    SuperscriptBox[
     RowBox[{"a", "[", 
      RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "2"]]}], "+", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"a", "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], " ", 
      RowBox[{
       SuperscriptBox["b", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"h", "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["f", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"f", "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
      RowBox[{"h", "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["h", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "+", 
     RowBox[{"2", " ", "\[Sigma]", " ", 
      RowBox[{"h", "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
      RowBox[{"u", "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["h", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "+", 
     RowBox[{"\[Sigma]", " ", 
      SuperscriptBox[
       RowBox[{"h", "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["b", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{
       SuperscriptBox["b", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"b", "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "2"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["a", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"2", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{
       SuperscriptBox["a", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"2", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.602702869432*^9, {3.62447520834522*^9, 3.6244752534875174`*^9}, 
   3.6244755174309387`*^9, 3.6244759652691517`*^9, 3.624476549219239*^9, 
   3.624476652608664*^9, 3.624476696730143*^9, 3.624476883474586*^9, {
   3.6244769461678534`*^9, 3.6244769515679398`*^9}, 3.624477013114135*^9, 
   3.624477093181179*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["a", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"h", "[", 
          RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "2"]}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "+", 
         RowBox[{"\[Sigma]", " ", 
          RowBox[{"u", "[", 
           RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{
        SuperscriptBox["b", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"b", "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{
        SuperscriptBox["a", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}]}], ")"}]}], 
   SuperscriptBox[
    RowBox[{"a", "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "2"]], "+", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"a", "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], " ", 
      RowBox[{
       SuperscriptBox["b", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"h", "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "+", 
        RowBox[{"\[Sigma]", " ", 
         RowBox[{"u", "[", 
          RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}]}], ")"}], " ", 
      RowBox[{
       SuperscriptBox["h", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"h", "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["f", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "+", 
        RowBox[{"\[Sigma]", " ", 
         RowBox[{
          SuperscriptBox["u", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}]}], ")"}]}], "-", 
     RowBox[{
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["b", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{
       SuperscriptBox["b", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"b", "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "2"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["a", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"2", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{
       SuperscriptBox["a", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"2", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.602702869432*^9, {3.62447520834522*^9, 3.6244752534875174`*^9}, 
   3.6244755174309387`*^9, 3.6244759652691517`*^9, 3.624476549219239*^9, 
   3.624476652608664*^9, 3.624476696730143*^9, 3.624476883474586*^9, {
   3.6244769461678534`*^9, 3.6244769515679398`*^9}, 3.624477013114135*^9, 
   3.6244770933098383`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CoordinateChartData", "[", 
  RowBox[{"\"\<Elliptic\>\"", ",", " ", "\"\<ScaleFactors\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.60194236874*^9, 3.601942414707*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"CoordinateChartData", "::", "csysdim"}], "MessageName"], ":", 
  " ", "\<\"Coordinate system \[NoBreak]\\!\\(\\\"Elliptic\\\"\\)\[NoBreak] \
of metric \[NoBreak]\\!\\(\\\"Euclidean\\\"\\)\[NoBreak] is not known in \
dimension \[NoBreak]\\!\\(3\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/CoordinateChartData\\\", ButtonNote -> \
\\\"CoordinateChartData::csysdim\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6019424085039997`*^9}],

Cell[BoxData[
 RowBox[{"CoordinateChartData", "[", 
  RowBox[{"\<\"Elliptic\"\>", ",", "\<\"ScaleFactors\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"f", ",", "\[Xi]", ",", "\[CurlyPhi]"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.601942382394*^9, 3.6019424085109997`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Grad", "[", 
  RowBox[{
   RowBox[{"u", "[", 
    RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "}"}], ",", " ", 
   "\"\<Elliptic\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Sinh", "[", "\[Xi]", "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], ")"}]}], "==", 
   RowBox[{
    RowBox[{"Cosh", "[", 
     RowBox[{"2", " ", "\[Xi]"}], "]"}], "-", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[CurlyPhi]"}], "]"}]}]}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.601933806865*^9, 3.6019338884519997`*^9}, {
   3.601933927615*^9, 3.6019339281689997`*^9}, 3.6019339684449997`*^9, {
   3.6019340763310003`*^9, 3.6019340777799997`*^9}, {3.601934237533*^9, 
   3.601934299792*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     SqrtBox["2"], " ", 
     RowBox[{
      SuperscriptBox["u", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], 
    RowBox[{"\[FormalA]", " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[CurlyPhi]"}], "]"}]}], "+", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", " ", "\[Xi]"}], "]"}]}]]}]], ",", 
   FractionBox[
    RowBox[{
     SqrtBox["2"], " ", 
     RowBox[{
      SuperscriptBox["u", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], 
    RowBox[{"\[FormalA]", " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[CurlyPhi]"}], "]"}]}], "+", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", " ", "\[Xi]"}], "]"}]}]]}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.601933889375*^9, 3.6019339298970003`*^9, 3.601933970987*^9, 
   3.6019340784890003`*^9, {3.601934246488*^9, 3.601934301047*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.601933889375*^9, 3.6019339298970003`*^9, 3.601933970987*^9, 
   3.6019340784890003`*^9, {3.601934246488*^9, 3.6019343010629997`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Div", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SuperscriptBox["r", "2"], "+", "1"}], " ", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          SuperscriptBox["r", "2"], "+", "1"}]}], "}"}]}], "}"}], ".", 
     RowBox[{"Grad", "[", 
      RowBox[{
       SuperscriptBox["r", "2"], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "\[Theta]"}], "}"}], ",", " ", "\"\<Polar\>\""}], 
      "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "\[Theta]"}], "}"}], ",", " ", "\"\<Polar\>\""}], 
   "]"}], "//", "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Div", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"], "+", "1"}], " ", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"], "+", "1"}]}], "}"}]}], "}"}], ".", 
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["y", "2"]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], ",", " ", "\"\<Cartesian\>\""}], 
      "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", " ", "\"\<Cartesian\>\""}], "]"}], "//",
   "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Div", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"b", " ", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "b"}], "}"}]}], "}"}], ".", 
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         FractionBox["1", "4"], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            RowBox[{"8", "b"}]], "-", 
           FractionBox["1", "b"]}], ")"}]}], "+", 
        RowBox[{
         FractionBox["1", "b"], 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            SuperscriptBox["r", "4"], "2"], "+", 
           SuperscriptBox["r", "2"]}], ")"}]}], "+", 
        RowBox[{"C", " ", 
         RowBox[{"Log", "[", 
          RowBox[{"2", "r"}], "]"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "\[Theta]"}], "}"}], ",", " ", "\"\<Polar\>\""}], 
      "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "\[Theta]"}], "}"}], ",", " ", "\"\<Polar\>\""}], 
   "]"}], "//", "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Div", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"b", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "b"}], "}"}]}], "}"}], ".", 
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         FractionBox["1", "4"], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            RowBox[{"8", "b"}]], "-", 
           FractionBox["1", "b"]}], ")"}]}], "+", 
        RowBox[{
         FractionBox["1", "b"], 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], ")"}], "4"], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["x", "2"], "+", 
               SuperscriptBox["y", "2"]}]], ")"}], "2"]}], ")"}]}], "+", 
        RowBox[{"C", " ", 
         RowBox[{"Log", "[", 
          RowBox[{"2", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["x", "2"], "+", 
             SuperscriptBox["y", "2"]}]]}], "]"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], ",", " ", "\"\<Cartesian\>\""}], 
      "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", " ", "\"\<Cartesian\>\""}], "]"}], "//",
   "Simplify"}]}], "Input"],

Cell[BoxData[
 RowBox[{"4", "+", 
  RowBox[{"8", " ", 
   SuperscriptBox["r", "2"]}]}]], "Output",
 CellChangeTimes->{3.597355013054*^9}],

Cell[BoxData[
 RowBox[{"4", "+", 
  RowBox[{"8", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"8", " ", 
   SuperscriptBox["y", "2"]}]}]], "Output",
 CellChangeTimes->{3.597355013057*^9}],

Cell[BoxData[
 RowBox[{"4", "+", 
  RowBox[{"8", " ", 
   SuperscriptBox["r", "2"]}]}]], "Output",
 CellChangeTimes->{3.597355013064*^9}],

Cell[BoxData[
 RowBox[{"4", "+", 
  RowBox[{"8", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"8", " ", 
   SuperscriptBox["y", "2"]}]}]], "Output",
 CellChangeTimes->{3.59735501323*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "4"], 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox["1", 
        RowBox[{"8", "b"}]], "-", 
       FractionBox["1", "b"]}], ")"}]}], "+", 
    RowBox[{
     FractionBox["1", "b"], 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        SuperscriptBox["r", "4"], "2"], "+", 
       SuperscriptBox["r", "2"]}], ")"}]}], "+", 
    RowBox[{"C", " ", 
     RowBox[{"Log", "[", 
      RowBox[{"2", "r"}], "]"}]}]}], ",", "r"}], "]"}]], "Input",
 CellChangeTimes->{{3.5973585835699997`*^9, 3.597358607347*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["C", "r"], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"2", " ", "r"}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["r", "3"]}]}], "b"]}]], "Output",
 CellChangeTimes->{{3.59735858963*^9, 3.597358609099*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "4"], 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox["1", 
        RowBox[{"8", "b"}]], "-", 
       FractionBox["1", "b"]}], ")"}]}], "+", 
    RowBox[{
     FractionBox["1", "b"], 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        SuperscriptBox["r", "4"], "2"], "+", 
       SuperscriptBox["r", "2"]}], ")"}]}], "+", 
    RowBox[{"C", " ", 
     RowBox[{"Log", "[", 
      RowBox[{"2", "r"}], "]"}]}]}], ",", 
   RowBox[{"r", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.597443655988*^9, 3.59744370148*^9}}],

Cell[BoxData[
 RowBox[{"C", " ", 
  RowBox[{"(", 
   RowBox[{"-", "\[Infinity]"}], ")"}]}]], "Output",
 CellChangeTimes->{3.597443704657*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.597443657863*^9, 3.597443658727*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"8", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}], ")"}]}], "+", "4"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.597857266416*^9, 3.5978572824189997`*^9}, {
  3.597857331212*^9, 3.597857366609*^9}, {3.597857398189*^9, 
  3.5978574040290003`*^9}, {3.597857529703*^9, 3.5978575382130003`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx9nXucVdWR77kORMUHiCCIIq/DSxRR8YEi1U4nXgkRE4mK12AQfKCxJxGN
T3CUuYboyGhaDahEIyr4ICIdByF03HhUfKCCraKCD2wFFRTxAXG4o0zSp761
7/51L/nnfPrHOmvX+q3atWrVqlqn5/hfnnT2Dq1atbptx1at/unvnz3fPuHP
27d/lvE5penz0KpzLn7ktoU1GwPve+e/fjJn7cFVD+6y59U1a9YH/h8T/zpn
XcfBVZtm//qc0ojGwM+9fPenLh16YNXZTf2sCfzgw/4ybPTm/b19Q+CXtb7q
sbGjBjheDnzYh6cNmTG6f1Ur/1eUsx/tTdt7/6b9uzzWsjyNpvL7eE3H6/yY
8uN/m/LJ3/BKe/7m886/jh85a+pBwTN4zUnvZHtvHBg8gy/eduHhy7b1D57B
py7sNv/uBX2DZ/Dnr31vwLx2fYJn8Mq4SsEz+IozFvQZ9UTv4Fnbw7P2D88t
y9NoKj8863jhWfmBZ+UTnuFP5itw+udvPov60xj4b2/89MHqCTGuwE8aeVvv
7l17B8/gM7uOvXPAZT2DZ/CffXPkPhOm9Aiewe/88oDblw/oETxre3jW/uG5
ZXkaTeWHZx0vPCs/8Kx8wjM88b7AM7jMb+DIw998vnrENT03T+oVPIMX+WkI
/LkmfesWPIP/pImHfYLnYv9dg2dtD8/aPzy3LE+jqfzwrOOFZ+UHnpVPeIYP
7BU8g/N+wTO46EPgyM/ffL7U9L4HD4FX9LBL8Az+QXlzx1XT9gqewc+d/0aH
uWs7Bc/aHp61f3huWZ5GU/nhWccLz8oPPCufRX1uiPWiqM8NYd+K+twg73tj
4KI/gRf5bAh8wx1L2182tJPoc0M26czL2m6s3lP0uSHbcsK4nepndRB9ztsX
9Tnvv6jPKk+jqfxFfc7HW9TnnJ+iPud8Fnkuq/0JnPWlyHNZ7GFj4Ly/RZ7L
qm+BF/kpB76t7+DWZ4zaQ3guZ1P27LLDQXPbC895+yLPef9FnlWeRlP5izzn
4y3ynPNT5DnnE54ZB/4SPIOzvsMzuNi3wLGf8AxefN8bAhf9zOVxPlu1+C/n
WdvDs/YPzy3L0xg48sOzjheelR94Vj5Fny2hz5bQZ0vosyX02RL6bAl9toQ+
W0KfLaHPltBnS+izJfTZEvpsCX021WfkSthnS9hnS9hnS9hnS9hnS9hnS9hn
S9hnS9hnS9hnS9hnS9hnS9hnS9hnU/vM8xP+hiX8DUv4G5bwNyzhb1jC37CE
v2EJf0PfF9P+xd+whL9hCX/DEv6GJfwNa9nfaLSE/2wJ/9kS/rMl/GdL+M+W
8J8t4T9bwn+2hP+s75e1LE/4z5bwny3hP1vCfzb1n+kvsR+0xH7QEvtBS+wH
LbEftMR+0BL7QUvsBy2xH7TEflDfR1P5ZT+o65cpP7IfNN0P8r1EfMMS8Q1L
xDcsEd+wRHzDEvENS8Q3LBHfsER8wxLxDUvEN/T9NR2vxDcsEd8wjW/w/4l4
nSXidZaI11kiXmeJeJ0l4nWWiNdZIl5niXidJeJ1lojXWSJep++7KT8Srws+
n+r/r33XLPw04/OxO4bt+sTynH/w24c9/fO16w5xOZcHfu+CGZtem4Y+1AVe
eS76WWeKez+m/fjflpDHVB6e26Pp/9/1/XKXeK7iyF/hb1X2wH0v/K7d9E7R
D/jDV82avmB4x+hHceTXfpCP5zAu2oHTHpznS//R/tFTL7hu9OYOISf44sHD
rt1y9x7Rnv8HR35tTzs+s513vWbG6PYxrsRzLdVen+vjssR4TcfLvCtv8El7
9Id5BWd+BTdw4dmK81uOfsZ2ubO8bWV75dMYV9FPqMvebf2bpcsHtFc+DX6K
/kPev/BpCT5N+VT5fbyW4MGUB3hWPoVnAxe9teL7EryZ8kZ79Ed4M+WN9kX9
DN5MedP2orfxXNFDk/fUdLzy/lrRvpUDP9VeWjamez4u8NUDFz414LJcfm0v
eh79i12yhF2yhF2yhF1q1g96kbCTqifYc0usC5ZYFyyxLlhiXbDEumCJdSHk
4W/WB+RBfuRVOcHP//L+WzvW9w85wT9996ab13UM3BRHTu1H5InnoifYp8c3
zXlz+/bO4ievyn40fdCKjvUdxU9ela24fK8X13UMe2XavrifXR7yFO1eOdqL
PmfoZ9HulbOEnmdFPa+L9sX3NPQ/+inavbLaW9PnFu1eWcdrOt7ifrMu5gve
GQf8w0/EwZxn+gXX8YKLHTPFGZf2w7j0ubyHKmdx35ePS8Zr4DLvBm8yvybz
EnjL61RZ7bxpPzJfpvOlcoremsyjKS7viyXeF0u8L83awzc8i91oZt/AE3bD
EnbDEnaj2XjVrn4xdf0FNWs2ZXx+e+WjH85ZG7gpXhnnMp/H2dm87udOmNdu
D8UNnHYVuZZkg3Y98cwpE5n32ZbAo/9f7VC9dl3HZriB+/eN/6cfwU2fq/3w
fR+Hym+KC2+W4C1w9mXMj9iBiB+Co7c8568HXHPC6F8dKu9Xg9jthrC3gpvi
8tzAmUfm5fwBF31QPUHnty4bfc/yQ9schF+0JEvwH/182un0xo71zfhPzG9d
1vk3cx8ZPkTb5zjzq/0X570uW3Xjnw9eNa098ltCby01XvoDl3GZPDdrWd9i
XnTeM513eV+a6W0CD/uc4M0SvIX8woMJD/G+iP6HH4J+ynuUJd6jwOENnOcW
/fYlMY/Il2gfOPpZ9Oeb9RPr7NbrD7yw7Rm6z5otehh4M57p58h/hF3b6rrW
rB/TfuCZfi6+8wcXDW3TjAdT+fme8gae4EH7Me0Hu8O6wfzyN/MPLu1FH8oR
t7nkvuOnj+neN+Tne5cdO7LHvHb9Yt0sxmf6BM+0r6xffVUeeW5d2MlXT1r/
7LRl6h8qPtv3KSuyD4f9+/pJbQPPFC+u7yuyR5act3X79j1ifef/kR/56A/5
0Ved96I/vCQr6ufsaI++MY8t63ND2EPG63KHfhbHG+0t0d5oD85zhYfwq5l3
9IZxMe/F+EDZpH3ov+oJ8sADz03wH/LDf9GvW2bwL+tv6Lnop4l+Rnv6B0dP
977zjIFD24SfGf6YvBfxfjFecPr5evYHG1sf1F/tcMjJvPD580tf+WT79j3B
Q58FN8WL61q+ngr/GfwX14vcTxD/wVr2H+rCLomcIb+8F4aey7pvLa/7dWoP
Y/1N2AfBww6Y2AdL4JnaK9GHLKEPaidN7aToQ4Y+iD5nuo7o+ijvnb6nmb6n
xf3Ukngu9jRhZ7KEnckSdiZTOyPvbzP7Dw6fYm9N2gde5D/8BxN+Yr+ZsGPx
nsp6p+91lnivM32vZb1Te2It25O60Leaq/72zA1bIj5mLeOzY7/Q4U+vPzpr
6h7CW120L/LfDI95TLQPXNZNY70o+rfLDXmKfvLswIv79yXBG3yiR3OOm3Fu
2zPy+AP4jUs/W7h8QP6e/ujU7395fO2r1jhhyYaVY8LuxXst/QROP/TL92hf
1Oe6aA8/6NuRI0+9u3pCv5AH+3Pgimu+HjRX9b9s9dcunTh8SL8Y105L39u1
tvRxdviAz969YUvPwDnPHH7mV22GrOod8ifam7anHf3RvphfURftb32p89rj
az+J9736m60zpy0r0Y8l+rFEP+En9NphymmjN5dUHkvIYyoP8yL9WKIfS/QT
/gPjYpw8B5zngfNckacZrv3zvjDuZ/rO2z5nbc947hFdR4wujdiQLS8/XLtt
Za/gh+/Rnnb0T3veN7736LAdG5fM6hXrEfhvBi+6eviQXjEu+nvwmSGjl23L
nxvnet5Pcb7K0Q/fj32M94M8zGf9xbvuNGFKKdZxvnfey1Wvjh3Vu2pKzw/q
t2/P6z7+0vffhw9tM7jqzbOvWLZ9+4exzn615cCvX5uW47QfWpON37bygKrD
Hmy/cvv296P9yK4zOs8YPShw2v/hjm3Xreu4f1Uvj/fS/kennnX1uo4HBB51
Fm8888Whq/pVrW567uvR/pPZT+4/Y/T+gdP+mFK/P6zr2Leq5HaD9p9feXPf
oW0GBE77K6/qct22laWqfk14Fu0n3tfvhQ3V+AMz67UOZZ9KeyvyVqraz+0a
OHr4ekXO8Dc2uvzgKn93j3sqP+DBp/MzpMKzKf/gtJ/l/L9RmUfT+QWn/ZE+
v5MrehLty21+MmJLz0MCjzoa1x/0iryPf2783eefTTog9Ad8px2Ofv3SoQNC
T8AvGHzJt+On9A19iHqQmupzFwwvxbyD77Z49h4TpvSK+QUfsect31w6tGfM
L3hpcueBmyf1iPnV+hfmV9szv9o/8wi+q8vDfKn8zAv4L3y88A++o/MDz8on
PFfsQ2P2H9f3mThr6oDgGfynD750QmlE3+AZfNEbO/+63fTewTP44k6vvz12
VM/gGXxB+YL23bt2D57BB1564kfH1+4bPIO/d/wp1UPb7BM8g5O/B8/aHp61
f3gGf8TlgWeVH57BH/PxwjP4aOcHnsGnO5/wTF7SmONeXnvp0H7BM/h+5/zj
797BM/jUW/7z0w3VPYNn8O/d0+ZPk9ruFzyDf/+op/7Xqmldg2dwzkHgGfzi
pX8asnnSXsEzOPmo8Kzt4Vn7h2fwapcHnsFbu/zwDH6Njxeewbs5P/AMfqrz
WdTnhuyuTreePnVGH9Hnhuysw4Yf2/aMXqLPDdlNz3yxckN1d9HnhuzmY6fP
nrasq+hzQ9bwxsi/bajuLPqZ17MU9bMhe/7tPY+qLe0p+tmQvXX9xk2D5nYU
/WzIXvb+i/rZkNW6PEX9bMhudPmL+pmPt6ifDdmdzk+Rt3L27BHjxk2dURLe
ytnnv//6xZVjegpv5azL9AefHzuqm/BWzvbZ8Qeztq3sIvzkdShFfsqxLy7y
U87O+vE9H929oIPwU84WdL2rR5uDOgk/5ayrP7fITznr7HIW+Sln/bt0fbx6
Qs/gAf9t50E/fXdDdc4D+CHTP/nR0DY5D+CzLq99dtDcfWO8rQr/8vGCDF0x
e/Gsqe1jXOBDdpy236ppHUN+8Nu9f+QHP2/33Y+Z166nzqMl5tEYr8yjJebR
EvNoiXm0xDxaYh4tMY+WmEdLzKPpPLKPS9gBS9gBS9gBS9gBS9gBS9gBS9gB
S9gBS9gBS9gBS9gBS9gBUzvgdtUS65Ql1ilLrFOWWKcssU5ZYp2yxDpliXXK
EuuUJdYpS6xTllinLLFOWWKdspbXqUZL+F2W8Lss4XdZwu+yhN9lCb/LEn6X
JfwuS/hdlvC7LOF3WcLvsoTfZQm/y9TvIp86sY+wxD7CEvsIS+wjLLGPsMQ+
whL7CEvsIyyxj7DEPsIS+whL7CMssY+wxD7CdB9B/EbjAOC63wfXfX3UEcj+
HVz36eC6Hwc/5cM7Fk5qWwqetW5C9uPRXvbj0b/su0333TEu2V+D6z4aXPfL
UX8h+2Lir0/6PlriLcZ+XOIqxr5e4idGfEDiJEacBN60DgLewLv+oHv7Ucf2
D97AiZ9IHMOIY0i8IuSRuETIL/GHGC/88Fnx33I9JM637oa+y+asPTD4+dOV
I/+ptvRp1n1kp+4T5w0Mfjif2dr594tv2DIg+HnrtboRpRGbsl94fhf8nOtx
jJWiV1e5PKcd1u3qWVNzvfq9y8M5JvwgT/bKsYdMnNcv+EGeLS4P/KxxeZ47
f/LUjvUHBD9f+vnAMS98dcP27QcFP08sOu6ehTUfZvf/8h8JQLk95PPVffe9
Ykz3/YOfzzs8/PHxtR9ld7k+w8/OHl+srO99g58eNZ0Gr1n4cbbL5Nfu71hf
ivf0SI8fzp9wxPq9N/YO3h7yuMRdYvfKLufo355zQ82a3O6tdjnnDDxk6aS2
vYI35DSPG8MbcrZxOeENOcnTgzfkpL6J9/HHz0y+pGbNhmz3pfcNnDoj57PN
jx+4rmZNY3Ztp9Fvzlmbr+Pdvnlr3sKa97Njlw4YPLRNv+CTz8p+oRR8ntB0
DvJBdkuTX9cr+Dyr9WV71ZbWZfu7fwufkxc8NHTNwnXZWK+nw+7dfMa7PyuN
WJ8N+vzjxes65uvLZx6XeE3W8e+5/Cu8bhSe93P527j/A8/IP2yHbM2guT2C
Z+S/2eWHZ+SnXg+ekX+fT979avyU/sHzLS4/dgCeb256X97K3nlpyYWzpuZ+
6ZNN78Xb2QFN/kYpeK7o/zvZXoN+/ccx3XsFz3yyzsLz/Xes/u/ja9dm1zXJ
2S14Xnr87j1qS+9le5x8370La/aRdWRNNlH8z1tdzj1X2CWjN+f+51Mu5+r2
P+lWW9o7+ETOC5rW5X2DT5UTPpGzt/2wfPeCXsEnch53238NXLOwT/D5xpZj
q9csfC/igfC5b9P8vpItdPsDn34e53GGfH9Uma/Xst23/vKKBcN7BJ8PeT7y
CZOe6zdl4r7BJ59/afLr9g7eNnv8Yavsj/ZzeZ6YeOxDs6bm+6MTXJ7n/3jc
y9UTOgVvyEMdNLwhz0iXB97edHnQW3ir2Ic3s82nDTx76ozcbx/aZAdWZ1X+
/sLbD5vkeSp7ZdufF929oCT+5LJsp25/vKrd9Hx/3bap/+ciXgdvE/28Zkzp
vO5PLM/5+TwRJznRn3vI/T/5auWYfH89z59788++GNG9657Bzy7+3L/Nu/WQ
J5bn+2uee4o/F36ebtLPF7PZTXUZ+wU/vAed/D2Ch3ea5KzNNE7C+dj5HpeA
h39peu5D2YarTz9v7TqNk/CZj7f1PZX+X/N8EsZ1kffDfhn5H27iYWHc94Kc
Je9vjK+/xf3skvCfkfO+Sj9eJ9st5NyYiHvweZHnezAv47z/TiNW/+/Nk/K4
x2zvf8mNF87ftjKXf2xlXPax84P8lff6ZVvavt0dC2vy95RzcOwb8i+tzKPd
4/OIvo33871TRd8+ScQrHvfn7vLqjou3rczlz7z/W5f0u7g0Yq/QK/o/WfSq
TUUPYx+NXs3xc8VLur9/xpa787hN5ZxxtfHeMd4dK++p8Z4yXuTivWa891MX
IHbp8ordiPsT4OEs36efI/b8MJdn1YJ9vrxhS6eY3++5PFNfnnrK0DZ5PIHP
RW734Ad51C5d4fLs5nYVfn7oeRG/czuMXepasZP2n2634e31ip2P/Sy8ZZV1
wVgX4G1uZR0x1hF4Q15dHzdX1iljncIuPFFZ1+xNX9fg81Pfj78i/sYql3NC
Uzyqa/D5uMvZztdZeETOab4uIx+ff5D18XOXE3sFn8i5v/sJ8Pm7ynptb7tf
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
l2pmvf4uFfpP3ixxQnDyZtk/gpM3Cz88l37IS9b9PnnJ4JcV+zHlmfih+p/k
hTNfkk8e8z5Ofi9J7Q955No/LZFzaOGcvS7ak+dPnYD6t+u/G2/mD7NO6fsC
z4n5yhLzlel84UeFn+N5ztgr1auJ3+mfNGSqb0/LPKL/rONht/19Yd5Vf6gr
UD3ZlOCN/mnPuMgzRh/Ilx4rOPnSZ/p7R//g5yVw7BI4v2tD3TvykL9NvAj8
9vev/f6Wnv08/rkk4ufFc/+6sJ/kJ8MD7c8vnHPVmbYnHxf+iU+eIzj3cD4p
doz9OOcL6A/55JzLaD/ET2hPnrbfqxj4i563HHm9zs9jxf4DJz+EvGdw8p+R
R9uTjw4/5DOT5w1OXjT3P6qc2Af45x7y4u/OzKwnL5r1MfJO/V4y3ndw7nXn
3kP0s0p+hwh5yIsmvx+8m+dFezww8M6eF40fyHi3Vs9/Yvv2UtVq93t1Xea+
TuTk3s5P3L6pHp7l74vqM3zG/TEex+O+SHDyFS/w+QLnvjLuBQPnfrCyx53A
iStiP+NeBI9Dko9ezLfsW8X9ieDcA4mfCc79XdRvxD1DHkdlvSMOxj2l5KmD
cz8n9zOCc8/kA37PIDj3InJ/FjjxZO6HAueeKOKn4Nx3xP2PUUficW/uMQTn
3kXubwLnvinuGwInD4R7MNFD7sPkHiXwl/y8g3taw39wu8E9dOoPc38rdhj/
gftJwTnvQw/ZD3KehR6Cc/51sesh+Br357k/Dpx7P7j3TeNC6CFxmC2ih+Bt
RA/BOdeb4Hqo8Xn0UOP53EvL/HPOiB6Ccy6AHoJzjsl9l+CcexJnBn/W38ef
+T4F/CN/f7/n+w5w9AR9BuceNu4RA+eeKOLJxP8558V+Rl0O98e6noNzjoye
g3Pu3NbvuwHnnPqXvl6DL/K8JvYj4JX3omfEmcE5HyfODM79crxf4NyTxvsF
zr1e3IdL3Gw3P/fn/lZw8gS4hxScfBXu2QSnf+65A+e+O+5rA3/L8yW4Xwyc
e8a4Dwt8judjcH+Q5kVw/xH2hHs/uOco7tvw80ruOWL95TyXOj3ac78K960o
zj0jieeaPpd7oDSuzj1QyMM5Mvc96bkq9y7pOSz3j+i5APeP0D/n5twzoufF
54qfxnk99zrpOSn3Xum9H9xnBJ75fB3k8oF/4fH5gS4HOPeTcP+L9sP9DrFf
8DgP9wLo/QMTE/Ef6nt1n/hJYr/D/VDwtqvXdZJHxHOpl+R+OsUfkjwB8h/8
3D8/H/H26D39kC/k73m+T/H8Gfwqvtfum0m3rByT36MOPmngw0uWzMrv8we/
eOKVpbZn9I/7QMA7PLr6pSWz8vv8wSv1Qfm96Nqe9Qb8Iu8few1+ocuD/Yo8
JZGf8fF7oMgf9Vm/LbWtLeX3jMW96a/826PVE/J7BcFZL9Bv8Pvk3nLwN7wf
xqXPLd5j/GF2hMsZdt9xvQ8QnPEyrqiHWvjzg6dMzO+lBD9G7qUE/2LRuBun
LcvvpQS///pzN1w6NL+fM+q/vH/kB79D7o0EZ1zID848IifjmNyUH57fRxr+
9iH/b1xpRP77OODIw3PBj3SeeS74JNcr2sf8+3zRHhz9LP4+1Mx66uCK9+3M
rG/5vp2Z9dQZFe/Vyc9Nir8PNbO+5d+Hmlmvdc3gO8m9zdgH/ArkB3/A5zfq
yhyv+PP5PW/gbWcc9eN57fJ7p8GP9vbIDz7X+w8/KSFP3Kfoeog84Ft83pEH
/OSnD92yZFZ+bx74Tx1HTvAvRX/iPMifi5xxHi33zPOcK1w/kQd8sdwPDH65
t+e54EfLveVx37DoITh6yHN5zhXyvkSejIwXXN8XcH1fwHlf6D/u5RW7Aa7z
Dq52ABw7QD/hJ3scI+69d3w3t3vYffS9neDoF+sX7cBZF3h/tL417rF0nPcF
/Yjf03AeeC76wvrFc8GPcp75Pjh2u3g/ybsZ+o8egDPvPBe92NP1hOeCsx7F
fbCOHyP3bINf6f3Hfa2Oq57HPdyi5xofQB71Q5An7qUTOwC+VewA+CliB8BP
FjsAru9F5AP4c5Ez4mAnLzu7NCK3V+D3i/0Ex34yj+B/fWF4lxG1+X2Vcb+I
2FVwtav6XN4HcOxq1LFLvCLuFRd7Qntw9IT2yKX6rHYj4nFiZ5BD7VLcn+z4
5aLPah94rtoTngt+h/wOS+QBujy878X2+fuudgz5wVmnIj/A8aPl91OiLsaf
y7iYN/y38Bcd19/rAT9C/Fhw9WPjPmmfR8ar9SyMV+0t49X7tEM/WK/Ev436
FPFvwQ93+eEBu66/6wSu/jy47kfAL5L9CLjuR8DZj/D+6H4TfnS/CT/gnWVf
o8+FH/ALZV8D/ivZ10QcxnmIe12o45B7pOED+4P8isMDPGE/414j4slul4q/
0/R62NXi/TArsr2dB+QEV56jHtb33fTDc7Q9OPaT/rU9z2Me8APRf83nQY7I
c5bxaj/Iw3weLTyDH+U4z9X7HCK+wP5M5FH++Tvu4XOc8YI/7vxE/bD/P7wV
74vLz/GLv1f7d7vo8tCe/upl/dJ9QcSz/P/B6VfrQ4v3EM6spw6dfvn/i+Q+
sZbP2WfW6zk7uN5LUPxd4Jn1O8t9d1oXT7/8v/avdW3Il8griOeSH8Lfmkca
de/+vd+M7NZ/1bT/7/eVvP21jtOO/6c9/WNfD/VzRvoHp66W78fvnrn/A671
aIxfz2dpx/e0PbjeM6znhqm4VvF3nGfWc34KL7HOvHDbSaURfar+BxpzuS8=

   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNmwf8l9P//t/3+z73fTJSRhJCaaAkFCEVLSpKJERoSSqSVUqKhkI0NGwJ
ZZNdkb33JjN7b7J+19N1vo////H4nM+53uc+9zrjNa+7wYATe4+sViqVj0Kl
kquepnpD1V+rsSq8dVaprNaBI1UuVvuVaj9KeJbwVcID1aeP+mSqN9HvjVVO
17H+6jNb9dX6fbTwHOFrhAcJLxS+Xniw8KXCNwgPEb5MeInwIbpefZUL9fsY
tc9VvUjttxeVSm/hl3Wvp0s9h/Bq4ZYqe6j/r+p7h/rcoXpMrFQ2Uvvv6nOn
fu+pcpjw6brOfepztPCHOn6v8BHCbwuXKkHXeUh9b1P7MWr/WG376/epwtN1
7qk6fopKVWW8jq2nthNUL9PzHKo+rwsfpv7nC1+qY4cKTxdeILxQx7YT7qtr
Z2qvJ7wb4yy8uXAb4SmMuepzVd+qfgep/SXhSSqbq/1s1X+rrqP2lqrX1bnb
CncUXk+4kXAn4SC8pXBb4Vx4C+E9hfsKzxBeKHyw8GThS4R7C58rPFf4AOFx
wjOFJ+k9N1A5S7/rqa6tMkG4h/qcqfpC9TlI+BzhOcIb8Jzq85raagnXEX5R
OOd+wluq/KayQuUglb+C19JUvev2wluo7XX134z5EF4lvKvwWvVZJnyXxnmw
8OdqO06/bxa+X9d+Wec3VP+XVA9V+y1qf0Dt/YSvEr5Z+AjhK4VvEh6pvtuo
XKTfh+iaNwlvrXq66o1VTlb7F6qHqRyosjJh3u19XedyHV+q66zS/SYKd1Hb
q5n3y0z9fif3+u2m56xZetymqO9c1RNVOql00bFBqiNrTOVczld9uM69Qufe
qOs/oLahKhuqvKX2C9S+VRpXxop7v6H2KaqPYF8UHuMZqp8p0j5S3VrPsJHw
bqovU32pygEqFd3j38zP/pPOH6+mseq/QmWI8Jdq66TrDxeeor7Pqd+xKrVU
+uhaQ9X+rfr8Erx+Jui83YRr6PjDOu9jZIPKiTq2TvB7PKf29YPH+QXhn4PX
z1k69xe13auyP+uM/rrnaNU/BK+3M9Snl45tqjJJv/8sPBb76HjPzJgxeaLw
+DPm3XSP84Tn6Vq765m7q+8MyYf71HczlTE6dm/pNf+jjq2j/g2F90VWlB4T
xqaOfi9X/7rMn9q/VN1RdQ31b6A+++h4IVxfuJ3wXyqbCLdQ/TXrVfiZ0muX
NXy/8InC6+s6T+q8UmUntR+o/j+r7WaVDip75D53ktp3THLsNOFdhPsLn8m8
6DoHCA/SNZurva/wqWpvrfO/F+6nsmtuuTdO7b+q/X6Vbip3a4xGq72xzm2W
W46doj6tdOw79gfnCn+r+mCVQ3WvD/X7ENaqzhnL2istT7n+bcK9VU6gv+pn
kZWZ9/NYlTMyy9lNguXog7rn+8Hvcrf6vyjcS/hW4Ta51+FEPc/J6vsn76hy
gtqvpo/ahwtfw32FRwgvEr6ddSO8VPge9rvwtcJ3IMOFbxK+T/h3lW2E26vu
pfs1QeeoHqDSVHig6j+qnt8Oqk/RuTeyXoTPFL5d+EHhcege4YeExwvfKbxK
eFu9y+567p/VtldmfTSwYn3E3jlHfTZUn594fvZ3lnSZfl9c9Vrejv2hY/ez
rtU2Q3iV8AvC3wt/gw5F56g8LPwi+kP4AeEnhR/UOzwmvIfm+VZde2Aa/zrq
007tR6lPbeE2wocJ/6ZSU3gv1b+gV4R3Z82orM91Un902f7od13rC2SyynW6
R0fVj+qZbxC+Ht2pvbaT6m7Mm/q/oOc5UPh59VmqPkt07DT1aap6H7Ufqz4t
hPcXHsY9hRsLd2ZfoPOEW6u+RvddI6xTK2v1eyPVO6j+EztEuDnjw54U3rHq
ecS22U71d+hI4Waqv6n+JwYrTfXvwmC9fAC6V/gt3aMne0vlWuEdVX9bta20
veoX1e8D/Zigh2jIHKv9SNaU8B7sC+HGwj2FMbSa5F7bJ1b9vuj3k4Qb5R6T
EayZ3Ht5uPBmaUyOqVrO7CzcS7iW8O7CfdG5wruxL4WjcEvhnsJ1hTsIHy28
s579K+FOKvXV3kX1ELVvJdxV+DjGT3gH4e6Mn3Az4R7IMOHmjAnjJ7w9ei09
G89zkHA94V2EewtvndbS4QnvJzxUeFPh9sL9hTdHryMf2FvYZ8go5lTjebV+
n6Lx3KC0jvpKbc/mtkH+YV0X1s+jGHuVv4TvUn2Pjh2OjtB1Hte5XXTup2rf
Pbe8PZs1oN+d1f6J6hrqszf6XHi16vNV9sy8JpF1S7BJcsu/k3XuTYXl4Y2q
f2Kdq+/HqrfLLRdHqc+WuuYN2AmqL8a+UGmr8ojKdirvsN+0hr4W7qf6O+xN
laYq5+k6L+j4u+zBwue9hz5Xe2e1D1b7brnl3wThrPTzrlaf3wvbFGtU/10k
u1f1SWr7umK7+brce3Ogzt1BuI/waOFbCuuIm1U/WtjOX8uYq7zLuGsunits
k/yg+pHCdtNTqp8vbFP9yLjqeV7X/dqoXl5YPzcR3jzYXnhG15qqenKyZ17m
nZO9tby0DYAtcGSS7bdUbT/jL1wnfIjwfOFrhdtklpnHquync6/X73qqW6rP
kWoboz7XCu8rPEC4Zemx+Av7RPUPFdv3H+n3j+xH1X3Uf4HwYvWfK7wamSY8
RfhZ4beEpwk/L/yO8FTh54TfRv+WtqV/RU4U3muLVM9Dtwl/qT7NS+vcHVU/
XHisGLNtSuv6Bqq3L23/7KC6KK03N8VOiLYLpwufHG2DvlDYbxuJbBE+IdrW
maI+o6Jt3/N572jbd4bwV8G+zCnqXy2ti+sw9urTWX0ml/azGFvGakj0urle
eHD0mC5mzavfPek5/ynsE/2rek/9fk/46NI+FGP7jupapee9NnZomeZd9fHR
+/Ye1lrheeU67NMhwo1Kr23s5G1L77tjhBsKX6jzXtP1P9TYzhf+QPgr4c7q
8xJjrrYTuAbnqvRXaabyUcU6lD7vqf9M4ddZC8J769yn0OPsX7W/KbxG7RcJ
vyH8sfB04ReFVwvvpOt9JryOyhVq30D13mq/srA+7K36B/VZxLyrHKXrRh3v
qfqKYLnaT30WYv8J76RjJ6Zn/Zh9pXqxSovMPjn6q4nqq3TOVun6l+jc94S/
oF24lfAhwv11wXVUH6R6i9yyf5B+X6FzNkOPYxcIv6xjczUPD7GfhYcL31na
32oVbXO1yyx3blM9OLOsQcYgP7Fn6qS1lHNNlbp6t4nR/trduk5r5pn1L/yT
6g+Qu8m+/Vvnt1d9fMX2D3JvgPAm6neaMANzu+rjMsvup/ABdf0Ldc3dg+V8
G9XnYZ+p+yPoCJ5D9S+qP0XeZ/YpsOdXqv2v0vvqP7u0tI/bPbOOwVfrkdnP
/Td3XU/Xv0jXP1u4pvDnzHuyn2/J7BOhD57Utfro+HQ92+3Ct+r8n1WvyL1P
16r+orBPdKbq+Zn9O97rAR0boT5/qN6wtN/5tfp8qPJv2uNrgmVeHdWfBo99
ZJ5LP/OX6rMWPZCe5350ADZGYd+WscI326e0L9NCdb/SvlAz1a+iA9T/lfSM
+2b23Sqck/kdLtDzvar6A/Rs7jH/S/XnOmfdzLKlq+p1MvsVT+X2of5WvZ7a
9sssg1YWHttxqg9L8gS5wrjij9dUeVzHpqnP73rXV4N1MXoNu695ZttvdLKN
H6/6Gqwn1tJEtT+p+lW1jxK+V/hR4QnCjwu/XHU8Ch/hbuEBwjcILxMeJnyb
8Arh44VvFV4u3DdznIG4w0C1L8H2UPtJyDDWHmtE+AnGsGq7/Wnh14W7544F
zRdeWTpG9Kfeab/gOEt95hZZyzuqz6Tcsug14bHCDwk/J3yG8ErhZ4TPym3b
v5T8kVXCzwufLrxC+GnhMcIPCj+LbBG+W/hh4ZOF7xN+rGp/Cl9mZdVyE9n4
vvAc4XeFPxM+XM/YWOUt/R6O7FfZXmWVyhEqTVS+zW2fX676t9xrtSH2zv/k
s+pvctvbC5CvOueNJBvfUXk7ybpHVfpltotmZPYxWqrcrWu1Trr18WC7CHus
bdI76J8hwXGHvqofC5Z72HJvq/RIdg420S6Z7aKfcvutNyMvctsF+GLjq5ZD
ha5xcLB92CD5avh0vNuNqpdk9tl20LFP1HaZzn2ktG2wj+7VPvg9Ps8dy8Pm
76j6tWAbbFmyK0dnXt/oU67NXidOgtxbL1jHEn/8RcfmZZa3fzDHqk9X+a1i
u2ZU5ndAv4/iPUvrTM7F356TWa7Sf1xmPct1iIcdmtm2Iy7SO3Ns5Dt0TMUx
pe8Lx76IKf2p419ljuNtnOxD4m+zq7blXtL7fqtj36T1cWVmfXxY5jgYeqRQ
CcF69pPc8TPiycTQiA/wnBsHyzvGhDVFXO4KlU0yr8OrVD6s+Nrc4xX0qN55
RGY7Fl16dWbdf1Q6h3V7YO77XKbnvbzq9ybW/Xtm24xjQe3/cM3U9mpqJ470
WuZ42uPpmjwDcSnui+1bO831Yl2zrfDxmXUH8Tcw8TieDX2vv/9sY3RBVLkk
YeYPHXFcakcnEIdED11Rta3+nq7/fWZfol8aX8YCm+eP1J+xejC1Mz7EJYmP
oe/xS47M7Jv8XHi9T4l+Rp4VH2yayuXpGdBJPAe23KWpD+9C/JZ5IV7RJPw/
/Tk4zTc2A37WhSo/V7xmZ6Z1iA+DL/NL4ffm/dGJxE/ojwzBD+RZ1isdK12Y
1g/12QmjBydk1inrltbbw6JjHsSeQlrv89Kab5V7j7PX0Y8LMuvIT5KfiD3D
88xP735cwhzDv8NeIVbTOrcuPqtqn+/i1H5Bwm3TGuyf5hp/CJsB3YydRzt2
6drUnqtcl1nu1ap4nAaksWqXe11MTX4i7/Zr4fcbmN5rTGabmf57Bs9BjWAZ
yjWxTZEHyAXkScMkI7AT1iRfErtrYpq7Il17Vrr+u+ndGTvuMyfd69HS+/Xs
aN+V9w6ln31M6nNV2i/sRXItzAkxcO41O62TM9J8ca8tgsepcbDfxFruXto2
Rl98WrGNTHymhnBdbDvV3dW3WbCNsHPVemVx6lNffXYiZh193uJ0HeT4kjR3
+PzIY/JJrVIOglwEPj59tig9lswT8S/8f+IAXPdvtS1N65x5Yr4Y/45JJiAb
di4t/9EDs6qWGeRK8AeHMcbok+AxZn7PrTqmepbaXgm+F88wrep4CDqCGC42
18nq/1mwzU5shDV1S1pvLYL1HjFD4hzEK7hWU517Z+ZzsavvyhzDJ5bSWr/H
RrfdnfkeyzL/Bu8RHM+8N7cPi/31XfDeIYfB+59fdaz4ldy+MLrl+2D9QT7o
DP1eUToW/nvptuWpfXnqQ+wd2+CxzLKuvZ71GR1/o7C9uSw9D3EHxnN8YZmH
7MMPRBaSy0F+ztJ93kbvVG3DPJxZT83OLQs/VXuH0j4BtjprFlmP3dOhcEzg
zcK5B/IO5Lvw9bBnsAMOC7ad/8Teqdomz5Osej7tKWQVOZX/yYPnUh/kzEtJ
5pyVOYZO/Bwf+sXM8RPiKZy3ZbJNVqf1xr5kf7KWHyzsz5CD6h3sp/ZSXVSd
kyOHgY59Ou3NXZLNgIzBP8RP7FHYxyUWyvnERdl3XOfA4P3UIziOj32xaYqX
Mg604+sT66mR9vUzmff8+PRe7CvyQMSBtgmWw/TnNzmtKRX7qOgWdP//dCAY
WfC8nnOc+s2LtgPxK/cqnUMB/1NxfAv7kDwIvg/+4OmFdQvjhu5pV3q+iAWR
h6IPuRnyHR9l9uvIB2Nb3UHssPT1uBf+Cn4L+7az+jyVOe/cP9hePpIxKW0v
TSqcA/0qrWfO+zydi31NbJBz2hX2HVaV1u3oeNYr657f2JTEErGvuP6+pfcK
78U6ph2b/Nd0D/yph9K5XGdgdLzgauI9mdcQ62f90nnGyYXHGRuCvCfrd21a
n+zF39LzYwdhJ72S7sP9uqX3ow/7GxsLu2mAnrM+cVKV2lXjDZNcYz2yLqcK
P1n4nsQS980tN5Af96fr8y7I15/SM2Ob4VRgn2VV7zees2/yBQ5n3pLcQ/4x
t8wxMYEupe/JvNyb2pl3+ATsIWx+4nM/p7X0fsId0p5lTPC1T8Ve1fEZuvcP
KnXZT/iGSTYiIxsX9isX6p5NCvtc+G13BMfSiak3KuxvLii9z9Bz6K5tC+e1
56u9mfBdwpcSV8stA98kxh6d+7lK7c0L+6SXCzcs7LPOE34nOEY6pHR+jrE/
QccPLc3dOI3nCs4jnMKaCm7fi/NK78eJhWNLNf6/96SeiJ0brH/xg/6pOqfW
RfVxPIfqwaW5AHma612rljOT8XXSuVzj36pzcF2JsxX28fGnv0znkufGDkAG
7K/6ssI2FHGyW7BNiVOUfg7kMTG3nXPzRsZWzbNorLJV1e+yTXofyubpfYjV
baFSVp2Prle1/mW/g1mHcDPow7tPrjpXfrJwg6rfl7GGrzKMOdb8vEXMjTFR
/Vra4+z115Gzer5p0c8Px+MCndMoPSdjdHnh59pMx6/UsR2RLYXHdtuq5xRO
CnhdlVZV57POCR6f2sLnBe+/+mnfwTnh3Rn/xmlcuBf5UMZiOLGo0mNwQuk8
XGMdHxrMgdmsavlLzpvc95V6h26leQXMCxwhfCj2fs/cfhb+1l+Z7ST2L7F7
YvhblZYj9N9KZU7wMw9T++zg+Cd5vKuFtxYeQXyvdI7wxNKypH6SLbxLozS/
NXPHDfoIXx+8Jk9S/2uCc7vk1m4IXm+j1H5VcF54ZIonIFOIOS4JznuS/7w1
OF8/Wn1uE27BvJfW7diy6PcWhWMsV6p9h8Kxl8sYy8K+G7mOLMW4pqm9JjkD
5r005wnu05u58yz458TzyZU8oba/S+cdTmOvqP4tWE5OLR03w4cnF0CMFzkN
VwGew3Kd+2fpeC9+G9wQ8jv43uQI4LXg45P7WRWcQxxbmgsyhLUk/HBwXpIc
5srgPPIZpXNGzBt5igfVvjf6iHaVkfr9m2oSsvAxzhOuFo6JkeeB+wUH7G1i
XcG5wjGlY2VPY1tE2+nIQ2x17AvsLWJH5EqwgckNwo9Bf3UN5r+ck9nXhUuE
DbVusG2FT4t9dWbmOAi+BrwjfhO/xhabkPQddgp2GLYKeUMwcddZ6XzOJa8x
sWJOEH4kdgzP9HLC2D/4YVPS2oAHgx0H52dRehfkFH725PRs5E3OVlur0vkZ
MHFojk9NffBBiJHhJ94XnHsl7wonieeBR8A9z033HZrO5d47Fo6LXlE6L9hR
+BpipcH55dPUflEwf6wnazaYV9ZLeFbwfj9IeGYwh+1A4VaF443X6ty5aX+x
Z+cH89P66PilwXnkw4QvC847H05sKTjvfAQxp2AezsGMZ7DMOVR4l8KxzWt0
/S2FrxOehR4onIu8iD2hd1gu/JTuu3E05+OS0pwPuB8f6vcWhWOts5G1hXli
FwtvXTgmTFy5fuGY8Bx0R+FrXi28VeHY71x8zcL5SmKo84L5eIcUlt3I8G7C
5wdzgfYvzHsg13+Wzn0hmBswARlWOL95ofBTwXnz8cIbFM5LzizNL4Sfc3Zp
7iO6bBLyIDinfyb+U3BOf5zwG8FcoInCbwZzh+Ce1CqcVyX+3alwPutmbK3C
+c0bS/NFiC1fJ7xn4Zj59cIzgvkV+6ltt8IxZ/JprQvHqBerz16FY+A3CLct
HIdfItyxcI77JuF7gnkLpwrvWjimvah0zJTY6VLh6cG8jq5q6xlt62DbLBD+
qWqeBrIFu+sb3i86V8d9Nyo813OQCdF8F+Rz3+icH+9yaHQekXdsHx3rZ/10
iM4BsB42LMz5ma26XXTcn7mAn0fME/5H/WhOBrpjm2juBbYT/JAGmXO1DaK5
F7zvltG8DXTQ5tG8jZHJVsH+IYZBDovcyhfBuTNyQx8E/6Z9dGEuI2v+I523
UTQ/aX7h3BO5GvLD+0TH/dkj+0bnKljze0fnPFhvvaNz24z/ZoW5THNVHxSd
52avHRzNUWBff1ea7zJUfQ6Jzoky712icw/YmQdE52CQLd+W5nkcp/69onPq
7KPvS3N9jlf7gdE5D3Rl7bQHWZ97Ruf+0Y97Refp0R1to/Ml6Mqto/kl6OJd
4fbl5pLtJvxobq5dG+ERwRy8TtH5D/Zvx+j8EHt8j+g8DTp0d+F9cuu7HtF5
HWzpetFcPWyPOtF8r4WFucTknshlHxOd+2ed/1r6Oqeq/ejofC37C67AZPay
2v/gOXLzG2tH89guESZ4Bdf2HOG1pbmYY4SzaJ7uucL/lOYoc51c7b1y82mP
jc6Ls69rRfPkmFN4rtiv8A3gxxDv/C8HGs3DZr/UjOZns+bXj+Zhz8Lmj+Z/
zxReL5rbfXHh3CE5RLgNzwTzcJjTH0pzv4YJbxjNw5snvF00TxEZdYTwmtw5
d3gjxHG+VX14dA4eudEomiOFjbFtNEcKu6JhNIcJPdVP+NPc/nLdaD7cpdhB
0Tw/bMj+0dwOZAtcTzifjGfzaH4kcpgcKrnUHsLbR3MukcNNovlb2EJNo7mS
yNvG0RwvbJVNormACwrzZIgLwVFtFs3XRObvKHxTbn7jTtEcR+R5y2iuJ7L6
m8J8VjgS60bz6S9SW9fo/B8+4P7ReUF8ya9Kc7AGqc97pfnl6Nbx6rNfbm4t
uUZyjqyZL0pzvAYIf16a+3Ws8J3JrsMP/bI092sgay+YN846/Lo0f2uw8Gph
yHBw2r8pzXsbIvxJaT760cIflebF4qdsz7hUvF+2K8xXZKxaFvaD8O8+LM1f
hxfxQWn+OvbAmtJ89/7C75fmzWMzNCjMdUTufVaao3aM8Di9e9fcMcB3S/Pm
sR9eLs3/Qxc/EhyPxY59qzSPEHvjzdI8SGybF0tzBNFBb5fmF6Lf3ynN8cWe
WR7Mb0S+vVaap4gt9HppDiW20xulOZTYTivUv3vF8vOBYK4j47aLnnnv3Dod
LtyXFcdn4PahKxex5tSnQ275jz+DXwNnrmnSxcQTTseHzM3FPQMuQu6Y1V3B
Nh5zd3+yMbAVlwVzpVg/L5XmOKLf94vOHxOL+Lg0N/ootS8O5u8xF6Hwdxzn
I3+SXYE9f150LOwJ5r+wbX8BcoPzK5Yn6xbm5SJD1inM3WWdT9W57XNz/CYL
75U7RvF38Hcl04RjYbsLH+qf4G9MzlPbv8F+03Th7tH5fnyuOdGxpHOFu0Xn
zomfbK5+yyqWS/UKc3eRvXULx2ew69C76N8Rhe0M7A3k+ezo+E5fXeeS6LjP
8cKzhH+sOnZaozA/GZkJh69zxZxXuLLkoeFTEbshhoP/f4uu17bifTcpmh+w
q655cXRMBH98abLz8UOvDeZeMi+LUhwJf3ZmdPwFn/2mYI4le/zh0rnoI6Pz
1F8wp8I3BnNW2TvziaWqfbjwNoVjL9jDcHrhG8MHg1f8sdr6qO91wbwj9vv5
0bG2rujQwlwC7MObg/mxyBx4SJ0q5ge/Fxwz4V5tCsdGkNsh+tsS5vrH0vuC
8YeDS85mbDB3ZaOq55ScztIUQyAXDz+4eTC3ak3F8SBiQ8SI4B7AJyN3Rawb
DiHxCJ6ZHM2Twp2COZ9LsVuieZI3YvNE5w7IGbQL5pfCkbordy7gCbXvGxx7
fyHz3MHbhC/FN0lwXWpVvWbg+eCH4quhE8jfw0MgRkSOGi4G/GNi72cG87IG
VZzbgUu2aVpvxGeIx1wUzSMiyYifD+8IHg+cJ3Jz5H/gBDG3xIeISWEvkLcm
X3968HdcY4JlDNxa+FtwGpE9g5JtBR8JLhd5MXJG5Iewx8kTwP2A/0YcaEB0
LGgQPnk0Dw2Z9l1u3ixr6QfVnaN9Nnw0OLfkpX7MncdnPBlX1i05F3IvxPyJ
qxHLhBtALpm8AzFYvkEjJoJNQTwdXgF5bXKQ5JeJZ9ZJ78jcswb4Fgf7i7gR
sTvywsTD4X2g34ghEUMjz0t+t1FwXpI4D/kXcs3kdchNE2Mk9jc1eF6ZX/Ia
8O4Yn6GlZUPdqueUXDl59KbB8b1PK+bs7R0cr2eNYdcQy4czDJ8EPnGH4O8K
/uOiBH9HMCqtW7jT+PvwOdED8DDhovGtGvHB4cE6gdwv33EgX9dP7djINauO
15ALezTd6/fc3zDw7nCPGXPGHjk9JMVV4AvBJ0CmkMsjbkxcmXXMeob/AxeX
/cU+g0sGTwE5Ap9hZNo7fNPHXt45mKdBjuFo4VdKc/rxqflOjG+gWFvwsInB
ty/Nm4c/z17lmyNiLuTA4SUOrJg392ru79kYc77VImbFBwHYC8Rp+IYpRn8v
h17jWyriUiOjvzEkPwzHu0b0937oNb5rYM53iP6uZwM9xyjWSXT8kfgkXDi4
hsSz4M7BhyOWxzdOxC5PCf6WEFnSIprLDS8IHcr3iazhXZAHwTkFfPlng79h
xMYm370oyT2+icMvHJ1sQOxquJF8N4dPmqtPEf3tH3qTfCU5HnIlfL9H/oVv
pfimjBjkiOjvnsjrkMvCr4LvB8+S7/7gi8BzgatPzhE+G98YdKlYhsLbJJdK
TrWM/v4QHc23QsiiY0vzJ8nBkYvjuyTkz2eq/w8yhiMm
         "]], Polygon3DBox[CompressedData["
1:eJw1m3f8j9X/xu917k+kIqJCMloaRihNSSIhMyqFSMiOUlbIToUS2oOmSkZp
IVK00KKib0N77yG/6+m6f3+cx/tc9zn3PON1va7X612956D2A5MoihanUZTp
d1EeRS/rd4sOnl8SRZcKHyG8W/hm4dH6PSmOohkqDXTOXLU/pvZndby52l/S
sVJqO1tlqo4t0kUbqn0fHa+s9hnCQfhHtW3RuTOFSwv/KvyO8AvCrYVrqn9N
9X9T+GLh+sJHC89RnweFl6n/mcIPqf0E4f3UXlX4QeFGwvsKVxGep/6PCz+v
/i2EFwqvE94s3Fn4cfU/TfgA9T9E+Da1LxZ+Tu1nC3+hh/1XuInarxWer/Yn
hF9Qe0vhc4Vj1VO979fqe4vwQ2pfrmPN1P6krn+6cEWdX014jX73Ut/mKieo
bZdwK9X3VXlV9dk6f5H6L9X5TdW/h/r8q7Zf+UZqf0Dtq1R/Q+0d1T5LeKHw
U8JnCN8l/Izwy8JthD/UM/0m/KTOvVr4TrU/LbxO7a2F7xBeIbxW+FzhDbpf
F+Fj1f8o4dvVvlz4JbW3Er5A1ztauJXwx2qrof49hE/QM9ZUfZ3K8ar/pPOH
q/9F6n+s2lur/yfq/6razxc+Ru1Hqv274O9xtvAo4Q+Efy7m41XCy9W/ntp/
EL5SeIGusUzta3S9c4R75Z4vA4RrC0/PPI9/EN6sth4qVVTvr2PtVb9X5XnV
N+pYO/V/X537CDfW9esKLxFuIlxJ+FDh+9X/ReHX1b+D8LVqr6T6Th1rq3od
1Y/R830mPF/n3KP+z6m+QcfPU//7mNPCrwm3Fz5Vv3XV/0sdu1P9p+ka+om+
1/FN6ltPv8eq/T6Vo9XWVN/jI7Xfok4XM9+EDxQ+Xv1mMT7qU1k4TT0e84UP
Eo6Ftws/rPK68AeJz39b7Sfr2n+qfaTwP/o9k+dX6aK2y9W/VuJ73Kl7jVH9
FLXdpNJQfY9gPqh+ovpeo/P/0u805oPaGgv/q98Wat9b5WXVL9Q1jlH7ubrO
/3TuI+pfW3h/tX0pfJ9wDeFSwp8Kn6n+24VvFb6E9Sn8k/CjwscKb9Hvgbr2
M+xBuuYrOr+z2o/m2dT+lvAlfB/hY4THqs+pvK+ONdKxR3SPN1T/MPH1v9f1
z1P7eNa86n+rT1PhWOV51c/SsY/VdpvqPdT/HOEDhI8r9q9OKvuoPkD3PVHt
Z6t9f7UfqWNvsTdmfv8KOv9r4ZZqr8D8L+bn/WqvKVxa7Z8J/6XfM2IGUHsq
31L9ywvWLuZHeZW2aruOb6j6oypvqv6R2rvr/kN1vbKJ5/z1Ko+p/S21b0/8
/OP0e5rO/4c1q+s/rP5HqV5O9S/Ut5nut0N4burrPahj64Xf1nldhDur/TDh
ZsIfstcI7xZ+Rv2PZz/R9aoIZ6nH+3y1HyncQv0/Eu4QPN5nCG8VvkTlQNX/
07GTVO8Y/D2a6tg23jV4fp8o/K7wecHXP0n4Pd4/835UXvf7Svgm4TLCvxft
D6m8IvyOcFc933/qd67ev6zKa6rflnk8dxXv01PlEAxi6udtp/tVFTxFx94X
XqD+Bwsnat8hPEt432It99T1O6l/LeEz1f8DtXcNnu/nJO7fJfh7t0y8Pqfr
9yqeX7/Dda3e7KmqX6NST9e7Wcf2Ufsfxf136z6t9ewLVA5X262Z58c/xfe6
M/PzhtT77TzhisJ99HuTrvdA5ufbW+2fq32KMK/7XTFfdwSvF9ZNA/Wfm3m+
/lu8z43Cewv/VozHLZnn+9/FeD6v80vr/LW6fiOd/3HwfGPeNRR+T/0vYzzV
Xke4TfD3bFTY/+4qhwv/J3yj2oep3wrVH9GxQ9V3tc5vq/phOn6Y2l/RsT91
/Ut0fDrrL7e9xG7OKOwz4824zxSOdfwQsMqlqp+jsiX2sQ/U502VTar3USmj
tp6Z+2Z6httVqgmXE35LpSW2jO+XmANcpnp/3S9XfVzm579Iv9+p7/cqF6v+
j553IPspNjX4mlz7HR1ro3v3VZ+SxNdgzH7XsV/U9rBKXbhQbvvzc7H/XyG8
l+oTM/Mz7rdV1/5W/bsx1mq/TPXTdZ3JfB8de1N4Au+MLVB5TvUDdI2rVe+g
8qFwz8j87vjc/TlvvM6vhw0XPkt4qnAJ9lZ4I5xG9Y065w3GW+Vg4ReFN6g+
QqVCZv6zTPWlKo2EG+h643Svs3R8AvuXnuNBvpeOHZXazmBvlhV86XOVx1Wv
r99J6r+XfofAP3XsJNU76npldI2Tde71jL+O7aX2+9Xemr5wUtW/Y49Wny06
9ohwPf1OVP+nUr/fUJX9dew8lVLqu1W4nerH8gzC7xXX26fE8/NhHSur8dxX
+OlivpYT3k/4ReEn4RTC/VNzRzhkRWybyp2qd9XxQer7s/BdwhcIDy6J9pCZ
jrrXzMjzc4LKuzr/VeE66ltWfVYJLxE+ENsjvF54ZbFeDhI+XfhQ4bv5Fqn3
XvZgbG85ta8Wfkr4INaicBPh6sL3qr1Xai4Lp90veD3CLeGY1YSnp7Yt2JhG
wd+bb/M+8xluwxqJ7SP0gUOn5q5w2MPh1iqD1d4ejqr6SPZF4R+F66rvBTr/
a+EqKu8JVxduHHuOMlfhYHCxbcX43KHz31Z9t0rb1ONH2wfcg/HXPYaq/5TE
6+FCHTs89hplvZyemw/Bi6bxLYWHCQ9LPN8r4JOovlrXOELX6piZX3+iPp2x
JXAQta9hfmEbVa6M3Qcu/p2u1xdfRHhl5jnGXOtV8JO/EnMH9lT21n0yr48X
1OcUnk/XWKX6qapP0b1Oy4y3qc8snT8mM9ctp2uM5dvrfvupPkT12eo/UXh/
4SuF5whfB39MvOfUx+cQXq/r3YxNE24i/BLfT3h2aj5dGk6I7Szuvzr2N+SZ
+qq9IvYL26T2/pltOzZ+dGZ7z/gyznPZr4QrYAPVdkuJn/8g4UfVZ2Li56uk
8w9WfXzmfZW9sXKBsRnYDjgvvuQwvlnsa/D+fDO+3cH4WJnfZ63qR7Ansp5z
c8mRcLLc+yj76aEqk1Svjb+ELVA5UvXrM7eVSszBsdPY6+rY69T8+Qtd6xfh
eSXek9ibsBmlMnO42sX4wv2/Vf1wlbLCtwdfH+5drbg/HBOuiQ3Gd26m8oqu
9QtjXDzfCuG+7Jeqv61SNzGnWZybY8I14Qj4Rth45le5yLa/be6xx+7cruff
qfq62N+I8cbGw72w0dh+OGJX4RMjc0ds/hnFfsF8hYM0LfYXuAnzuUmx/8zO
zCHgRnA8uAWcvx3frtiPWH+fFOvl0+D96jy11y32o66co/ZBkf0VOBtctFZk
LgenglvBOfGFPmctxp6jswpOii8CZ4SrwvHgpmgccD84GlwNjgbXg0Phu8Lh
4VZwSrgnnBSuic+FLwzHwxeDo8EV4ahwNzh9e9ZWZK5fQ3hx7D3ml2Af6AK1
N47sG9Ur7FHjwt5jv5/E3qr8he+Xez38lHh9ldU7dUmsgaCFHKNyr/piOo4u
ML4kNqt2Zh/kIuxjZN8EDtiBuRyZG9YUfkL9m+Ez6X7V8WFir+FqcHX8gsQ+
Mr4ynPtC4ZMic3H6s3b7YX9U/xZOzb4ivDSz3cZ+wxly1b9Rew+1n6H2p3jf
zL7m75F91ANLvD7KFfPnAPW/NbbNT3Lb2NtVvyy17d2k34qxfbrZzMNgf3wE
vlyJbfC9wlekts3b8fNjczL2O2watm1oav0Gm3qf8IDUthYbeb/wwNS2E90L
21ZD51+e2gZiC6el1mdOFX6fuZDa/zhZ+F3WUmp9DRsNV7gyte1+MLUtrI8N
VP0ktb/D3pZar2oY7O9NTa1HNAj2Z6ek1hfeDd6Ld+J7l5iTLFB779RchW/I
Wvwz8bc9IdhWzVB7pRJzErhJP+EmwocE60VDUuttBwTraX2FT0dfw89grmFD
Vf8G3Uj12irf4mPA01Xvypiz3oSrxbbR2OqqwfrT4NR6FxwDrnGp8Gn4k6n3
0zpwQoQStd+mn458G7VXDtanBqXWvxLhecKdhE8W3jdYL+wpfKrwhMz+HRpH
A5UywXpbD7WfwvfTbwXmgspRmW043Gh0att+ivB7rP3U/vBbHI/tk8/CXql9
Enuf6rtz21nsLTYJ23RcsD96XWr97ZhgvXVsan1tZGYuXim2TcSOYk9Zv3BP
2vfYy8h8HbuOfcc+DVL9At3zGrU1TW3f18Bh4VrChwufhcYQ+x3X6N5Xq1yr
9ht0jb9y+1H4UzdG9keeFm6uelW4l85/Rvhs4UOEawi31jkhMUdrpvo7weP9
GdxN7ccG6wfjUuuL3+v8yxnvgo9cofYrImsV8Ak4IdzwmtT66mHB+tvI1Ppt
feHXhCel1tfgYHDfUam52fHBetfk1Poeew5728Gp9yI4M9x5fGp99IrM/gL7
G1ylfzB/gnvgP4wI/tb46X/o/HrCG3lend9W7bWC9b2rU+vFtYP15TGp9cma
wXrjVan18Y259cYJifWidrm5BHv6HWglmedeGzgYe0tq/asR9kL1jWo/h/XA
cXxd4QnC7YQzXW9tKPY/4bTEY8rYMie6qv6f+l+vege152r/W3iUcGvhuNDz
mA/nstZKfI+rdX7XyPf+UfiqxBoxWvHfwjMTn/NT5sJ4Nkvdxp6O7Tso9V4f
dM171H+2ju1S2z9oComf4encxyaq3j51X57xXrXPifzsXwXr5ejm/6r/bzo2
XG0thf/DFw6+9sXCpZkf+FGJ1wBr4Qf16Z/4Gz4n/LPwpMTPvF34F+GVqTWt
/xGoyO27zmFOC/8q/HhqjfqT4D1zh87fFHkvPSKzNrM/exy2CA0mts8RVP9e
pZ/6txR+Vn1Tvq/a52Kj0TLQq1Kv5+Ny631TY2vkaOUnpZ47zCG061zto9X2
t/BOtf8mvC61BvOl8O/C0xJ/o28yz2Hm8gjh11SvqmPj1XdMZD2MOXS32mdF
nlslwfVuaiultlLBY3GJ8N4l/ua3JB4zxmKX8JzEc/K53HsgeyFz7vXc9g3f
Gx/8OPXvrbZmPJtKFa6ZWzuYr/JN8Bi/kFqPZezxmeBKh6b2pZ7W767IHLhx
5jFDP0VHZSyZo3zr41LP3SdSc+cT4ZiqJ3qHBXqGGTr2Qu45Py+xps1a4Bui
Z6Nr820Zc/RhdGLmAmtmvvpPj7yWGFO4UPXUY80cg2vVSD33HmAfiuzzls38
DZ9MzDH4tmWElyTmGKWD1/Bdif0x1vZecITENj0L7nOL6t1Tn9tZvwsT20Bs
YYmOLRKeL5wGr4knEnMg1grHePbzU/flmnyLLqnvVRafB1uNPVfbPrm1IzSh
F4Wr4fMktgnYBubI48L3RJ47zGH0JXQm5vYq/bZRWy2dVwv/T7+L1f9ullrw
HoV+fWbqvetl9W+g838WHqH+vdXnzMickv38x2B9BJ1kjNo/028S2+f+j7mA
fVQZIFxH/a8Nnkv4EE2EnxXOY68h1uc1rHn4oH5+0XmrhcvHXoPo7VfoHm+k
1mPWo4eUmPfB/zbD9djDY/vMTVTvpfb7UsckV+A/BPue+Oz48puCz0UjKa/6
FpWaqtdi/1D9Uva/1O+8TOdPCtauD4p9/35wUh0fy/wV/hH7oLaVsf1Z3pe1
3apYP8TY4Clti/3kT/VvHzum8rLw6BLzZvgzsRFibvekjuESixsVfC801VK5
x+QhuHXksRobHPsZXuwHzVPbMexZOeZScKyTPadM7hjhotR7ALHDtZm5L2tk
YfCYfqj2OyKP9WUl5sX0oS+a+12pNW+0ePQk1jc+cl18zczrbHCB0XzQfvCp
8K3QEENmvRNt8TRda3JiHwhfaLCuNziyz4bvhibUKbOPiq+KJoQ21CmyNkoM
Ay6xQ+2nqP4pe1Jse/GErnVy7raPVU7FlurY5/B1laa51wt7P8fOwPdWeTc2
J0PrPkx4SeyY9HK4fm4tlZg78auZKlVjrwm+10A939bUxzYKDyixjoaetgEu
pFI5NodFj54e3NZB5QfVh8J/Y9+Te/8dvJbgGOxH6Bf4APrZoyfQf1hkzZZY
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
58rcsQN8dnz3/wOeNhzO
         "]], Polygon3DBox[CompressedData["
1:eJwt13e8FcUVAODLfbxHpCVSVFBIkJIoxQSkt0gJTUDpASlSA1KEAKIUBQHp
9VEEFJDeVFqASA09gNhALGgAgwY0iYSgP6Mh38nyx+HO+ebM3Hd3Z2eWEt0H
tRqYTqVSO0WmqJyVSr2bI5VqmjOVejMjldoP+4kHtJ9Q2EzNSX3z1Q1ju9gf
RcNcqdRsdV3ZK/J56nLLZ4kubDnLZrfJ/2X8QO09fG/MYa6NYoH2FXWf6Kuv
bhNbyK6yT1kD9nt2B+vC6rDXzDWRNWUL2CR2RN0qsZJ1Z/XZavkQdYVZZ1ab
vW7sNTFA+w2+W+xU84Jopr1Q3WR936ipz664Lh2139F32HwzRWftZermqvuR
fLRoxKqo26a+jHFDxZ2sq7q66jbrW8NmsovsDKth3BjRmB0UQ9l1dX1YCXkn
dTXZbtaLFWWt2YNsO+vJirBWrBLbFvdPdNb+FX9B+7Tv7K3uZ/KO6mrE7+br
+Tz2BfuYPaRmHZvNPmPvs1psAXuK/ZntZveyDWw++xs7z+qxtWwWu8TOsprs
cVGANWNl2Ubf250VZA+zcmwT62fst3GdxE9ZNvudunvVPcZqxbphVdQVcH3P
xJzyqvImohA7y3qypvL+4qZxjUQZYx+J+2u+R9S8LZ5n38ca4FnyFuoqsOWx
Rlku1pI9wJaxHsYWYs1ZefYq68sqsH6sKTvBFho7gp1ge1hJNYPZj1l7VoWt
Vfcky8/ascpsDVugdiDbwlaxovJ5oj97na1gd8lHiPpsiDH92dfxXLIBbLO6
layIfI7oxlaw+SyPfLpaX51axBeLVyUfsTxqRvscFeuHPaG2pv7+t/pas0+0
z4tx2rX1XfPZXjzJqosd7kEH+XhRT/8043axTvK55uvF1rIlvv92efvYeOJe
GFsk/iafN8Rw7WHxKU4ZO108rm6rsav15TPu36KGuUezTHXXM5P9KPalC2pL
6Ovj8zL/zpgH1VQWR8yVzXrrW6f2JX0F5Ff1XRHP639I3w2fM0R37W3q1qjL
G88+68G2s7UsP2shrsd9FHnYTPOcjedVu2rUxhzGva3u5XgG1F1k78gP8Mvx
nKv/0t9ch+1nn7G/inPqa7MtbLO8jboL6i75fC32T7Yp9hh1b7FGar8y/8/T
/7+0qSmskz36ffk58Tk8q2ZR7FnaB9g2dffJB5kvH2vL2ojL8sb879r3CVOl
pvrnUfZN7EsiP5vDWsY9kVcVedmseA7ZP+N5SSdrLtZeE/aP2AvSybkzjS3W
mOZ732IHWTX5f/ho7eOx78R5YYLq/L2YJ/YYsS8r2StjzzwiPxp7OXtE3Q1z
VRf59M1WsyzWpf5j7Lho6ZoUZWtdyyHyLfHcGfdrdon1jvsnjmcl+2Lsj9mx
38U+zdrF82vcIDXH2B75JNFGeyVfoD6HcXWykvvVTl3bqJVPFm3VrVK3MJUc
wA+La/KRaj5QX13NHDFI3Z/4dmX3xBoXaf2F1BUUh2L9xDPN7vJ5pziclZzT
wzOS3xq/uaDfO5KVjTNG3tZ8R+PamS+3sXsyk/V/9da1mpCRrJdYN3cYO4wV
Y73jzDd2h7oZmcnzE8/Rh7HnyZerm6j9ATsRZxA7yhqq38q/ZT+wFZnJvhf7
34q4ZnF+quumrkKck/6mxvJVYor+8+pOx3uKumdZJTaKdWGnY8/mN7V3+bwg
vyiKZyXzDI59XF5Mnkc0ZzeNL8Jyx1yxzqNf/ETfPnPMZv3ivhr7mnkLs77s
a3lFkUt0lr8S54q6D+Un1VWMa8KeY++yI6xcPPdsLHuPHWXl4xlkz7BTbB8r
fesZzMsast+Iu1370aw8Gy5vH8+EvzObDWaH2A5WzNjm8Y4VexrPzWaoG6Ou
onxkOnkniHeD4aw46xPfEe+A7DlWjY1NJ/tW7F+jWDk2jLVjx9imWKva/dmG
OD/iXSAzWROxNtazjfIlxj4bexw7rO/+eLcQDbR7sXX61sd7orq+8dyyV/UV
YovZmDin2SFWNt7p4rlhH7M3Yz9nUzOTcy3Ot3OxT8gnxFrTnpVO7nN++bQ4
a9giNk19TnnrOBfk98ezweb7bU+pLZmR/Lb4jfviPUrdbaweK8lWsmGZyRlR
1b35Uv6VGGFsKTYgvlfdXvaiulFsP9vKfhHvxPG8sfqsFFulbjrrEOcxmx7b
gfxp85Vm8ZLegu1XNyX+bjafTWQ3476xJmxKOjk34/wcG3slG8d6s/fjXIv7
xmawUey7OK/ZDjaCdYx1EN8b94hNTCfvx/GePD7WFpuZTvbk2Jt7avcQr/Ar
7G6fk9W18jmPT2D/VTeJPcqy2fh49tlgVjfW6K196w15V5GHNVBXOt7b9X0u
tuivFO/Ucf77XUvFOO0zsa+pqxB7tjiorq66L2K/VLM6zm/tC+nkzIizo6PI
YDXYPewl9VPVdcxIzuQ4m0/FOxcbwg6nk/8fFWfPsDJsUJwd7ICx3fjtrGms
I7aBzY33oTgj2B/iusQ1EcW167Cl+pbKfxv7uHa1eMb1LYl3RzaU7WQbWYk4
F83XKc74GBvPb7znZSbvXxWtv0+N+4t4jGVmJN8R37WUdWA5WBVWlC2ONWm+
p9lJtpeVUtNJ5GS1WDH2sro2cQbLy4lCbAFrx36Q/zLOBPZinGnse3kFUZgt
ZCviLDTfR+wUq6Tmf5AJ0+Y=
         "]], 
        Polygon3DBox[{{1674, 857, 683, 682, 988, 1484}, {1388, 828, 1130, 
         1738, 1245, 1246}, {1248, 1247, 1718, 953, 954, 1719}, {1447, 934, 
         611, 612, 935, 1448}, {1395, 832, 950, 1717, 1256, 1257}, {1643, 766,
          582, 581, 1128, 1614}, {1250, 1249, 1712, 942, 943, 1713}, {1487, 
         991, 682, 683, 992, 1488}, {1261, 1260, 1739, 1133, 1134, 1740}, {
         1257, 1256, 1722, 964, 965, 1723}, {1441, 928, 596, 597, 929, 
         1442}}]}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0rtPU2EYB+CvWFAoVWdjJCQkBmq5DI0abTQOTVBiYl0AhYFNB7vCX4DG
1cCoDjIaBxgNibeJCS9gi1LkWpW2o4mLzxeTvn1+73e+c/qec9o9VSo+SIQQ
nqrnQswlX9t8lAzhJJ+wKx5nP18xz2WOsNwaQs45d+R8WwhV+aracPy+tQP5
umrqZ/RF+Y/8UE44d55pLvA0l5jhO35ij/3L6mOck6Oq2uKYfouf+YNfuM01
7nCdSb8zZv9XeVKuy+Pqjdq1p2y9GWdX79WetYq1u/K+vBHn5zfW+J0/uclf
rPL3kRD67P+gtvTPOKEKZl/VX+Bb9nKRp/iCKc6xwdv2z8oFz++vfEtN66/p
9+Rh1TD/PWtX5LI8Lq/wBl/zMl8yG58Tz8RZXLvGBeec4GMOqrzZj+svMc2L
7OR5pphjB+vubcD+9vjeXLMi96tj+pv6dTmrhuw/au2cPCAbO2TZGt8lk/H+
6XLhLH3CoSaT+P+/+wdnxVJX
       "]]}, {
      Line3DBox[{1161, 1436, 748, 1160, 1744, 1351, 1162, 1745, 1352, 1163, 
       1746, 1353, 1164, 1747, 1354, 1165, 1710, 1748, 1355, 1559, 924, 1615, 
       1629, 1641, 1942, 1560, 1437, 1617, 1630, 1938, 1356, 1593, 1438, 1640,
        1945, 1357, 1166, 1749, 1358, 1167, 1750, 1359, 1168, 1751, 1360, 
       1169, 1752, 1361, 1170, 1890, 1439, 1362, 1440}], 
      Line3DBox[{1172, 1642, 1816, 1171, 761, 1173, 1753, 1363, 1174, 1754, 
       1364, 1175, 1755, 1365, 1176, 1756, 1366, 1177, 1936, 1614, 1643, 1935,
        1632, 1616, 1644, 1937, 1635, 1634, 1757, 1367, 1178, 1758, 1368, 
       1179, 1759, 1369, 1180, 1760, 1370, 1181, 1761, 1371, 1182, 1762, 1372,
        1183}], 
      Line3DBox[{1185, 1645, 1817, 1184, 1646, 1818, 1186, 776, 1187, 1763, 
       1373, 1188, 1764, 1374, 1189, 1765, 1375, 1190, 1766, 1647, 1819, 1191,
        1648, 1820, 1192, 1649, 1821, 1193, 784, 1194, 1767, 1376, 1195, 1768,
        1377, 1196, 1769, 1378, 1197, 1770, 1379, 1198}], 
      Line3DBox[{1200, 1650, 1822, 1199, 1651, 1823, 1201, 1652, 1824, 1202, 
       792, 1203, 1771, 1380, 1204, 1772, 1381, 1205, 1891, 1441, 1442, 1908, 
       1206, 1443, 1444, 1892, 1207, 1653, 1825, 1208, 1654, 1826, 1209, 799, 
       1210, 1773, 1382, 1211, 1774, 1383, 1212, 1775, 1384, 1213}], 
      Line3DBox[{1215, 1655, 1827, 1214, 1656, 1828, 1216, 1657, 1829, 1217, 
       1658, 1830, 1218, 807, 1219, 1893, 1445, 1446, 1220, 1894, 1447, 1448, 
       1909, 1221, 1449, 1450, 1910, 1222, 1451, 1452, 1895, 1223, 1659, 1831,
        1224, 1660, 1832, 1225, 1661, 1833, 1226, 1776, 1385, 1227, 1777, 
       1386, 1228}], 
      Line3DBox[{1242, 1464, 1463, 1897, 1241, 826, 1240, 1840, 1665, 1239, 
       1839, 1664, 1238, 1716, 1838, 1460, 1237, 1585, 1929, 1735, 1533, 1459,
        1236, 1913, 1458, 1562, 1564, 1563, 1235, 1924, 1565, 1566, 1561, 
       1608, 1607, 1932, 1234, 1457, 1532, 1584, 1091, 1233, 1455, 1837, 1711,
        1232, 1836, 1663, 1231, 1835, 1662, 1230, 1743, 1834, 1636, 1229, 
       1896, 1454, 1453, 1498}], Line3DBox[CompressedData["
1:eJwNzrtKAmAYBuCvTL2BbC070ObgBRh1CSbttWrawQPY0hJBV9BtuBgkbREN
XkJE2VGiJStt6xke3vf9fhWzO7VidSoiStzNRCykIrLMU+IkHVFORmzqRbY5
d6u43fv8l72rP+gX+ohHu8rArWN/M7BrFPRbzvzGmnxyG7Go78lLrvVj77My
eHabsKQXEhF5OU2GBC/e/ljWT31vX++RtOdI8WrfyLb3VXlgr8iufOPI/VAO
/eee+w/vdp0Pt1+7oX/qfX1M096SV0zIsU7LfUP+A0s9MQ4=
       "]], 
      Line3DBox[{1263, 1577, 1578, 1576, 1624, 1623, 1939, 1262, 1621, 1848, 
       1739, 1260, 1847, 1667, 1258, 1469, 1846, 1722, 1256, 1717, 1845, 1504,
        1461, 1255, 1715, 1844, 1503, 1544, 1543, 1254, 1733, 1921, 1540, 
       1502, 1527, 1526, 1253, 1926, 1524, 1525, 1501, 1537, 1045, 1252, 1534,
        1535, 1500, 1912, 1714, 1251, 1456, 1499, 1911, 1712, 1249, 1465, 
       1843, 1718, 1247, 1842, 1666, 1245, 1738, 1841, 1637, 1639, 1638, 1243,
        1742, 1943, 1631, 1594, 1596, 1595, 1597}], 
      Line3DBox[{1264, 1580, 1581, 1579, 1627, 1668, 1940, 1626, 1625, 1785, 
       1400, 1265, 1786, 1401, 1266, 1720, 1787, 1402, 1267, 1721, 1788, 1513,
        1403, 1600, 1737, 1934, 1612, 1514, 1545, 1404, 1470, 1898, 1546, 
       1547, 1515, 1550, 1669, 1923, 1588, 1551, 1552, 1516, 1553, 838, 1473, 
       1554, 1555, 1517, 1916, 1405, 1574, 1468, 1518, 1917, 1406, 1268, 1724,
        1789, 1407, 1269, 1790, 1408, 1270, 1741, 1791, 1409, 1628, 1941, 
       1477, 1603, 1604, 1613, 1410, 1606}], 
      Line3DBox[{1272, 1478, 1670, 1899, 1271, 1671, 1849, 1273, 1792, 1411, 
       1274, 1793, 1412, 1275, 1726, 1794, 1413, 1548, 1922, 1587, 1471, 1549,
        1414, 1479, 1900, 1472, 1589, 1590, 1591, 1931, 1480, 1592, 1605, 
       1474, 1611, 1609, 1610, 1933, 1481, 1475, 1531, 1089, 1583, 1530, 1476,
        1795, 1415, 1276, 1796, 1416, 1277, 1797, 1417, 1278, 1798, 1418, 
       1279, 1901, 1482, 1419, 1519}], 
      Line3DBox[{1281, 1672, 1850, 1280, 1673, 1851, 1282, 854, 1283, 1799, 
       1420, 1284, 1800, 1421, 1285, 1902, 1483, 1422, 1520, 1918, 1484, 1674,
        1903, 1521, 1485, 1675, 1904, 1522, 1486, 1676, 1905, 1286, 860, 1287,
        1801, 1423, 1288, 1802, 1424, 1289, 1803, 1425, 1290, 1804, 1426, 
       1291}], 
      Line3DBox[{1293, 1677, 1852, 1292, 1678, 1853, 1294, 1679, 1854, 1295, 
       868, 1296, 1805, 1427, 1297, 1806, 1428, 1298, 1906, 1487, 1488, 1919, 
       1299, 1489, 1490, 1907, 1300, 1680, 1855, 1301, 1681, 1856, 1302, 875, 
       1303, 1807, 1429, 1304, 1808, 1430, 1305, 1809, 1431, 1306}], 
      Line3DBox[{1308, 1682, 1857, 1307, 1683, 1858, 1309, 1684, 1859, 1310, 
       1685, 1860, 1311, 883, 1312, 1810, 1432, 1313, 1811, 1686, 1861, 1314, 
       1687, 1862, 1315, 1688, 1863, 1316, 1689, 1864, 1317, 1690, 1865, 1318,
        891, 1319, 1812, 1433, 1320, 1813, 1434, 1321}], 
      Line3DBox[{1323, 1691, 1866, 1322, 1692, 1867, 1324, 1693, 1868, 1325, 
       1694, 1869, 1326, 1695, 1870, 1327, 899, 1328, 1814, 1696, 1871, 1329, 
       1697, 1872, 1330, 1698, 1873, 1331, 1699, 1874, 1332, 1700, 1875, 1333,
        1701, 1876, 1334, 907, 1335, 1815, 1435, 1336}], 
      Line3DBox[{1350, 1497, 1002, 1349, 1889, 1709, 1348, 1888, 1708, 1347, 
       1887, 1707, 1346, 1886, 1706, 1345, 1731, 1885, 1496, 1344, 1730, 1884,
        1495, 1343, 1928, 1494, 1883, 1729, 1342, 1493, 1882, 1728, 1341, 
       1881, 1705, 1340, 1880, 1704, 1339, 1879, 1703, 1338, 1878, 1702, 1337,
        1727, 1877, 1491, 1492}]}, {
      Line3DBox[{551, 749, 1744, 552, 761, 576, 1818, 775, 591, 1823, 790, 
       606, 1828, 804, 621, 1834, 1159, 817, 634, 1841, 1130, 828, 1944, 645, 
       1138, 835, 1785, 653, 1849, 843, 664, 1851, 853, 677, 1853, 866, 692, 
       1858, 880, 707, 1867, 895, 722, 1878, 910, 737}], 
      Line3DBox[{553, 750, 1745, 554, 762, 1753, 577, 776, 592, 1824, 791, 
       607, 1829, 805, 622, 1835, 818, 635, 1842, 829, 1778, 646, 836, 1786, 
       654, 844, 1792, 665, 854, 678, 1854, 867, 693, 1859, 881, 708, 1868, 
       896, 723, 1879, 911, 738}], 
      Line3DBox[{555, 751, 1746, 556, 763, 1754, 578, 777, 1763, 593, 792, 
       608, 1830, 806, 623, 1836, 819, 636, 1843, 953, 954, 1779, 1017, 955, 
       956, 1787, 655, 845, 1793, 666, 855, 1799, 679, 868, 694, 1860, 882, 
       709, 1869, 897, 724, 1880, 912, 739}], 
      Line3DBox[{557, 752, 1747, 558, 764, 1755, 579, 778, 1764, 594, 793, 
       1771, 609, 807, 624, 1837, 940, 941, 1011, 1911, 942, 943, 1780, 1018, 
       957, 958, 1788, 1021, 969, 970, 1794, 667, 856, 1800, 680, 869, 1805, 
       695, 883, 710, 1870, 898, 725, 1881, 913, 740}], 
      Line3DBox[{559, 922, 923, 1748, 560, 765, 1756, 580, 779, 1765, 595, 
       794, 1772, 610, 932, 1893, 933, 1040, 1091, 1092, 1041, 944, 1013, 
       1912, 945, 1108, 1110, 1109, 1930, 1019, 1112, 1113, 1111, 1126, 1125, 
       1934, 1022, 972, 1053, 1096, 1922, 1095, 1054, 985, 1902, 986, 681, 
       870, 1806, 696, 884, 1810, 711, 899, 726, 1882, 996, 997, 1028}], 
      Line3DBox[{561, 1067, 1068, 1066, 924, 1129, 1127, 1936, 1128, 581, 780,
        1766, 596, 928, 1891, 930, 611, 934, 1894, 1008, 936, 1070, 1120, 
       1932, 1121, 1012, 1059, 1058, 1015, 1045, 1046, 959, 1044, 1043, 1920, 
       1061, 1051, 1052, 971, 1050, 1898, 1049, 1023, 1062, 1063, 980, 1900, 
       974, 1098, 987, 1024, 1918, 988, 682, 991, 1906, 993, 697, 885, 1811, 
       712, 900, 1814, 727, 1883, 998, 1115, 1117, 1116, 1118}], 
      Line3DBox[{565, 756, 1749, 566, 769, 1758, 585, 784, 600, 1826, 798, 
       615, 1831, 811, 628, 1838, 949, 823, 640, 1845, 950, 832, 1915, 649, 
       963, 840, 1917, 659, 977, 848, 1795, 671, 860, 686, 1856, 874, 701, 
       1864, 889, 716, 1874, 904, 731, 1886, 917, 744}], 
      Line3DBox[{567, 757, 1750, 568, 770, 1759, 586, 785, 1767, 601, 799, 
       616, 1832, 812, 629, 1839, 824, 641, 1846, 964, 965, 1781, 1020, 966, 
       967, 1789, 660, 849, 1796, 672, 861, 1801, 687, 875, 702, 1865, 890, 
       717, 1875, 905, 732, 1887, 918, 745}], 
      Line3DBox[{569, 758, 1751, 570, 771, 1760, 587, 786, 1768, 602, 800, 
       1773, 617, 1833, 813, 630, 1840, 825, 642, 1847, 833, 1782, 650, 841, 
       1790, 661, 850, 1797, 673, 862, 1802, 688, 876, 1807, 703, 891, 718, 
       1876, 906, 733, 1888, 919, 746}], 
      Line3DBox[{571, 759, 1752, 572, 772, 1761, 588, 787, 1769, 603, 801, 
       1774, 618, 814, 1776, 631, 826, 643, 1848, 1133, 1134, 1783, 651, 1141,
        1142, 1791, 662, 851, 1798, 674, 863, 1803, 689, 877, 1808, 704, 892, 
       1812, 719, 907, 734, 1889, 920, 747}], 
      Line3DBox[{573, 926, 1890, 927, 574, 773, 1762, 589, 788, 1770, 604, 
       802, 1775, 619, 815, 1777, 632, 951, 1897, 952, 1081, 1136, 1939, 1137,
        1135, 968, 1784, 1083, 1144, 1145, 1143, 1941, 978, 1114, 983, 1901, 
       984, 675, 864, 1804, 690, 878, 1809, 705, 893, 1813, 720, 908, 1815, 
       735, 1002, 1003, 1004}], 
      Line3DBox[{736, 909, 995, 1877, 721, 894, 1866, 706, 879, 1857, 691, 
       865, 1852, 676, 852, 1850, 663, 842, 1899, 979, 652, 834, 1940, 1140, 
       1139, 1151, 1150, 644, 1925, 827, 1132, 1131, 1149, 1148, 1943, 633, 
       816, 1896, 939, 620, 803, 1827, 605, 789, 1822, 590, 774, 1817, 575, 
       760, 1816, 550, 748, 921, 1005}], Line3DBox[CompressedData["
1:eJwVzT9LQgEYhfFXrczBvoBDuLVEJU5RbgpRGRgFTYEFbkpQDUH0vwQHo6Gp
panBb9DU2tAYNLZEY7g0ij+Hh3POc997b77eqjUTEbGNn2TEQyqiNBaxjHY6
4tf+4m/khv2uH+tl/VVv6Cm3Z/a33uN2ZMtO8Huo44mv8rt6x7NV+WlPySVk
ce+mzF15vmJP48POyEVM4s5NiavoabzpE7KAW++Ny1M3RX5Tz+Nfn5cLuHYz
Jw/czPB9HHEvcp/LyT8ccs9yi8vKnF3RB+jq575xiYvRv7k+HvkTexbrWEMV
Q4c1Js0=
       "]], 
      Line3DBox[{742, 915, 1088, 1087, 1000, 1884, 729, 902, 1872, 714, 887, 
       1862, 699, 872, 1907, 994, 684, 858, 1904, 1026, 989, 669, 847, 1933, 
       1124, 982, 1065, 1064, 657, 838, 1056, 975, 1036, 1035, 648, 1927, 831,
        1034, 961, 1048, 1047, 1921, 638, 821, 1060, 1016, 1913, 946, 626, 
       809, 1010, 1910, 937, 613, 796, 1892, 931, 598, 782, 1820, 583, 767, 
       1937, 1156, 1158, 1157, 563, 1938, 754, 1147, 1103, 1105, 1104, 1106}],
       Line3DBox[{743, 916, 1001, 1885, 730, 903, 1873, 715, 888, 1863, 700, 
       873, 1855, 685, 859, 1905, 990, 670, 1090, 1089, 1039, 976, 658, 1916, 
       839, 1078, 962, 1079, 1080, 1914, 1077, 1076, 1075, 948, 1844, 639, 
       822, 1042, 947, 1093, 1929, 627, 810, 1895, 938, 614, 797, 1825, 599, 
       783, 1821, 584, 1757, 768, 1155, 564, 1945, 755, 925, 1006}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJx9XXVcVsvTBzuviord3Y316Nhgdwd2Y+e1sAMVW1FUVGykQXooFVRQFBEB
pTseCzve596dOX6e/d3z+s/5uK5zZmdnZye+c54Gs5ePmVfEwMDApqSBQVHd
M3Lf52lfzmYAP6Mtmhz/cvYaHGnRd+qQiDR4XvwxxgzIguDzn77GDLgBJUc5
rJp6PAVeat6VsDTMgdbHBg60NLwF2yfvN3/sngij25553jEgF15PNDbuFHAb
op3635vc6hVEfI6s2Ht6PuxNaTex9/Q7cHhnRlLewSjoPv/4/gueBeBTvf3z
C56OEDPqQu0+lYJhffmqHdtf0EKxkIQt7S84gYH4Y7ltg19h2bdacDQ361fu
rRPPR3k+0UeZPvGDMj/EP8r803pRXi/JB2X5kBxRlifPY7ny/EaHg7ppz2Qo
z4bj/SZUm34LQsIsT7ZdkwZe/hE1llhlwcxFfinXLzvADUdnq5C7yfCr+P7R
V4/ngNvRe1tPGTqBs4Vpj/PWCeDy7zMPJnr2S6x10xkyPs4Y7d0+GqYu/+tb
1cEF0Mn5wOjLt1xgTa/HU5r8DIV20zqW8tqkBW3R9fGW010VOTscGll8ZI4W
at2cfbboBVeej/J8oo8yfeIHZX6If5T5p/WivF6SC8ryIXmiLE/eJ9ZT3i+m
y3Jl+uXS7zU6cjJDebL+tNhQv47Nu1TodGrh3N/5WWBvN7LR/NUucLT/jPXa
xUlgVuv8yrRpuTBEE5O6tJkbjJg6umyK80to6NrkcM3z+XCh1anv93zc4W7I
zRJPioTD1c7jwnb018KWLmZT1qZ4KHJOWlbhalSSFj62e154bJQnz0d5PtFH
mT7xgzI/xD/K/NM6UV4vyQdl+ZA8UZYnnxM+93xeeF9ZT3l/mQ+WK/OTPErb
zdw6Q3laaBpsX+3vBnk3lodvqZ8KGVZw97pltiIf16ONCsZvTqBnHrzvV3vp
ozwv+Pql6eYyiZH0LIAB380tWhT1VeTctmHssuVPtFCxsVvI9he+PB/l+UQf
ZfrED8r8EN8o80/rRXm9JB+U5UPyRFmebKfYjrK94nPF557PF+sB6ynrA/PN
cmX+j7oYj6u4I0N5TphZ5tLCfj7wc/H85sUuJsNmOxvNnmU54Bt57ohpTABM
qvu1Vody0bDzTuHNwUYFsObzroa3DwQpch57f3HFvre08PTazvrXNgTzfJTn
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
0DrMOBYyVgs1rywsei73Abx2bvKiWYE7XKw+0L5tSS3sWxa619fxMTx2fz8m
rbo3+JfpfHrUtgIoGnxvlU9QFDzrPe54icpIehWseUj9E0i4/T43Ov/u752K
w1s1K1PMOBOyNg7z7t8pGoJiS7V9VToXx00r/6bJtETY/rbC3EsrHsHbs16a
ynvy8XvO/B1B52PgRPl920s/DOH3YjF6bwy994LgEw8QnxHEZ42lCw9vGqPF
WR8mG9coEga3i2Q1iTH0gOelSzxukKv4bwYfnu14FdHPFbwGnZ12PPXPeI93
G7/fGuEBnea2L74g5s/4gN3BVYuHekORf//2QmOg9+ctdEiyevl8Tx7nxwzu
nPA/cOl3ArhWHfy1k7WSNzPoGNuu+q+W95i+Mj6Q6F/z21tvSuqf8RKesZ5l
5nrI+4i8j7ReMBfrxVu0XmkfUWUfUWUfUWUfUWUfUWUfUWUfUWUfUWUfkfdR
sgOoYgdQxQ6gih1AFTuAKnYAVewAqtgBVLEDqGIHUMUOoIodQBU7gGwHpHsK
Ve4pVLmnUOWeQpV7ClXuKVS5p1DlnkKVewpV7ilUuadQ5Z5ClXsKVe4pVLmn
FHlKfheq+F2o4nehit+FKn4XqvhdqOJ3oYrfhSp+F6r4Xajid6GK34Uqfheq
+F2o4nch+11SHIEqcQSqxBGoEkegShyBKnEEqsQRqBJHoEocgSpxBKrEEagS
R6BKHIEqcQSqxBHIcYSUB0DOA0jxPnK8L8X1yHGlFL8jx+9SnI4cp0vxOHI8
XqyDl+Xfc4NhluPDw7tParGyaXiVw0u5b+KMRu6b+Nn+3/nI86vQ/KKCPsr0
pbgbOe6W4mvk+FqKo5X1SvEycrwsxcXIcTHF0UBxNHIcLeVbkONxKa+CnFeR
8ifI+RMpT4KcZzAkuVlSH4QT9UEMChnld90RsdHmTk07uGgxwL/5qg4uTlBO
5E9wkMif4BbKn0h5DIW+lK9AzldIeQnkvISUf1DWO25pQPEeNhnKs9fhGwHn
42+C3Z73hqcPpMGmwW2y8jdmwQnHi4dmWt2GA0Waz/cukwKGwRa2ftNzYPbk
sJ1WDe+A5bYQY7Mmb8Bo74MDD1rkwZJFDeuMtXKE11NHvxs05iW4f29e+71v
PnS4V5Cdbcd5nrNKnqcm6VXG5O8uzWsF47TkGQMMbbRQvKV3anoFV2j9oNva
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
T0EHz+jTYT4VOtK6UJIP84/MP9VtcZWo2yLXbUluuFHIDVlu4pye/R+7cW6C
Vc+I0UHokzF3hc0lLXj/WlzR3txFrrcqeCdpXcDrkurIMj+8jwo/Qm/tNHI/
phi/oOCvOD/P4zy/A81/khObO2nbM5x6MsDY0aoADA/Ostl+2RUWVLZwLl0i
FB/Gz1h6a7sW2owqtta1nDu4FzfOWRwYjKeP7cnvelQLzw48fvrgqY7/1BKa
0w4haLdy2+V+e7TQ7rRRh70X3YDxSTkCr6TglLhPkvGSjJPkuJTjVI5Puf+N
cayMX+V+LcYRM36Y+4sYx814Y+6HYVw84+EZHy+PM/5bpsN4Zfm9jK+V+WQ8
qLxe7g9kfCjjQrmfkPGMjOvjfjbG7TJel/uvGDfNeGnuF2LcOuPVuf+H+wAY
/099EUqfBPdHcJ+APJ9x3jJ9xiXL/DCOVuafcZ8qckBZDtyHyfhZxpFy3ybj
PRnnyf2BjGtmPDP3szGunPHk3H/FuH7G83N/EfdJcH8B9/9wHwn3j7BfyP0x
3BfDfSbyfO5bkOkzzl7mh3HhMv+MY5bXy7hbFbmhLDfuj2U8MuOQud+Y8bOM
m+X+UsaJM76a+yEZp8/4fO7f4z4J7o/gfjPuO+F+E+6n4r4c7sdhOXP+hvM2
3Lcjz+c+Fpk+92nI/HBfgcw/4+Dl9TLuWUVuKMuN+64Z3824bu7TZjwy44S5
X5dx94y35/5S7nvgfgfuh+S+E+434f497uPh/h3Ox3G+ivNULGfOh3EejPNZ
8nzuC5Lpc9+LzA/3acj8c1+BvF7GwavIDWW5cb864+UZx859ztyvwH0E3JfL
/SLcJ8J9pNyvw306nA/ifAbnMThfyXk+zu+xPDlePkj+LecB5fmcH5Hpc7+Q
zA/3t8j8cz+GvF7G98vy4Twg5wU5H8h+Kvut7K9yHMVxlYKTpz5w7v/gvg/9
36uy03DfB/c/c18O9+Po/46VvYb7cbiPl/uluE+K66+c7+Q+Kc53cHzJcSXn
izn/ynlX3i/OA3H+h/Oz8nyOV2X63MelwifKfHI/koocUJYD99WoyBllOdM+
oryP9B0H5O868Pcc+PsO5cQ48jj3+XO/DvfpcF8690txnxT3UXO/Gvepcd+a
PM59VjId7guS38vnnftXWJ+5zsF1D6538PcIuK+IzwX3z3NfF/dzcb8399Vx
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
v1Tp9lmbZPz0ImZqtwdBMEuM4w8a/0LjP9oNsJ26LQ+9Xle/WtA+QRdHbgj7
bOQPtat+XuJjm4+XZv6d/mz7S2z9++zy6MK7EOCGzstMC3BakUqHwo2i0b6D
pmgv3Xl3Pboyq2BBNox/OTGtdYdUHFt+2MfjB71B23t/tZt/Z0C9jyPLFl+X
gZOHPrxu0CgAdt4I6Lx2TzZ6BvmY3yueikOP5BnblPeBdO23/LDZuZif4+2W
NjoJ3+/5UMW2hSfMrjzZQnM8D09kY+P4BQn4+fy3y+kt3cBgrKN3FfN8fH/m
+ppu5V/hCZN6E27o7OqQYY+WVOmUCq/3Pf20ZX42Tu5gesZTx4+l7eVivqkJ
4DSv2LcS4/LwQ817hk2c/eBev+MeZd9nYfdRBo9ap6TitpcDuuzX2YcDD50m
17HJwYzfM6Z7XUvGqduav7uis4dZmcH+nsG5OPRL7f03Tibi3YDw44WRTjDb
5/vosWVjoUzXdrcubs/Hook7J13T7Zf142s7DS6Fw83bh54v6aBFr4GL9nfU
6VXjQcucxx/Owl0zJ79tuzgN0eLhrXI6O7z354/G1UrkIFRcVaTd3hS0TX/q
YaO7X8obf3sx0OIetPq00qbdCi06G0+MstXF+3dm9tpcwjQL7eNanxxyPw09
Gwweba67p2gcaBw8aJzoA9GHs0Sf+IHdgh/wJ36quoU7dNedZ7m/dbdYF94S
6wJPWtcMIQcsK+QAxUgOmUJuMEzIDTxIbvuFnCFTyBkmk5xDxb4A7QtsoX35
W+wjuoh9hPe0j2Zi3zFR7DtMon3/PeZfPYEPQk/gGOkJ6RWcEXoFn0ivSA9B
K/QQ3pIekt7CXaG3YEZ6myf0HBsKPQfWc2dxLnCiOBfA50Lt+/zsh+RJffS1
xHkEe3EeoSWdx+/i/IKvOL/Qhc7vTLIDv8R5h0I67+ZkB37T+GcafynsCSYJ
ewJA9iRO2B+0F/YH2P5EL3nzzk1nPzN6/l1yd9178HHW0093i3jAFGHfwFLY
N1hG9o3sIUwR9hC2kD20qVSrq0+hTg6L4rqddoiHdz8aDay4/TGkCbuKr4Vd
hUtkVweSXZ1KdNiuNhN2G02E3YbaZLfZrloJuwpsV9XyFWvFvQaO4l5Dvtfo
HoTP4h7Ej3QP1hP3JtQW9ybeoXuT7lm4L+5Z5Hu2nbiXYbm4l5HvZVdxj+Nq
cY/jbbrHK4t7H+nex0p07xvs/9dPgGvCT0D2E5YKvwK+Cb8C2a+4KvwQID8E
2Q8ZK/wWiBZ+C7LfEl/vRzUz3f0q99FsEP4Pkv+Dp8j/WS38Jfwi/CXMJ3+J
/Cu0E/4VLiD/yl74Y7hS+GO4ifyxAuG/AflvuJ38Nw/h7wH5e5hG/t424R+C
nfAP0Y/8w+rCn4STwp9E9icnCv8T7IT/iex/9vgSdqWKzr7J/SyLkpZWLpkX
iiFDnCYdXavFA9cTDpar6QE3hd+LxsLvRfZ7fYWfjN2En4zsJ9sJvxoLhF+N
d8iv3ib8cCQ/HNkPV/te5WThzwP583iK/Hny/yFN+P/I/v9XES9APREvYHuK
F2aI+AJqifgC11J8IcUjyPGI/N1LjjddKd78KI3fFXSws0Tnd8V/4yCkOAg5
Dlog4iakuAlHUdxEcRaeEHEWbqA4i+IyLCHiMuS4TO070o/PjezaV2cvRsbs
n19ZZ4divu96nqqzG4FiHEfR+Esaj/3RN99fZx9/d+gZ0ldnR79c6HS0e1gQ
vHIaadMv7TnUOFPf1kjn9w0O9Gq4VGeXXoj5aNBRf/4F5x8LE3Vx3YUxIz2a
6uRaw/uzUV+dHGgcL0rjMRRvR1D8fZHibqZzTsxHnn/GbuZRE8d4yJ3ccOpA
nR2de3VA+Xyd/WT6ttL8OFrXL7Eu/EZ8vjswf9FkA1eNjOeJFuvFmmK9OJzW
+1J/vfid6DzVlzO+Inne05czxtO4/N1RjgskfpTvDzzT5weGED/p5IfH033B
fvhZcb/AbLpfCuh+OSDkhlohN2C5yXV8xivq/16ts4blc47ur+mCPn4k+hQX
YAzFBVeInwTSn+okz6HEv/x9TiXe0fsOYZiG+9BZP1hfWE9WqNTZ46645Q0u
E6bhOrsj0eF1yt8l0P9d4HNK3BRPdDoRX1eJTkeiy3kkpv+ygeG04ga2Grmv
Tc4XMZ+36DurnF/i76xKfCo40q6vXeouLpoAN747vLfO+Kd/KjYzruZj6CjG
kcZxCI13KPG261HdvHpz7r48o/v3OgGuFuV04zUin7cppbP/XGfsSXXGRqUH
nJqk2+eqlXPa1tT5O72n5lW+pvMfSqZuHFS23j08sGzpIEfdeM+xE6b76vyf
TJV+NLX6LM/Lov/H82X8LefxGpU3/FZMF8fKeB61vJb+7zhf0HD99Ji/Tcax
Y1HY5Xc41tDZlVNdTI3iD7nA/wH1KyY+
    "]],
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{-1, 1}, {-1, 1}, {4., 19.999995428571754`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.597857545733*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Lurt", "=", 
  RowBox[{
   RowBox[{"Div", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"a", "[", 
           RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"b", "[", 
           RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "}"}]}], "}"}], ".", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"u", "[", 
         RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "\[Theta]"}], "}"}], ",", " ", "\"\<Polar\>\""}], 
       "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "\[Theta]"}], "}"}], ",", " ", "\"\<Polar\>\""}], 
    "]"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.5988459291338*^9, 3.5988459304348*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["b", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"b", "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "+", 
      RowBox[{"r", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"r", " ", 
          RowBox[{
           SuperscriptBox["a", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["u", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"a", "[", 
           RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["u", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"r", ",", "\[Theta]"}], "]"}], "+", 
            RowBox[{"r", " ", 
             RowBox[{
              SuperscriptBox["u", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"2", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"r", ",", "\[Theta]"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     SuperscriptBox["r", "2"]], "\[Equal]", 
    RowBox[{"f", "[", 
     RowBox[{"r", ",", "t"}], "]"}]}], ",", 
   RowBox[{
    SuperscriptBox["u", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5988459428138*^9, 3.5988459654938*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["u", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"2", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"r", ",", "\[Theta]"}], "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       RowBox[{"f", "[", 
        RowBox[{"r", ",", "t"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{
        SuperscriptBox["b", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"b", "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "-", 
      RowBox[{"r", " ", 
       RowBox[{"a", "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       RowBox[{
        SuperscriptBox["a", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}]}]}], 
     RowBox[{
      SuperscriptBox["r", "2"], " ", 
      RowBox[{"a", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.5988459663428*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{
      SuperscriptBox["r", "2"], " ", 
      RowBox[{"f", "[", 
       RowBox[{"r", ",", "t"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{
       SuperscriptBox["b", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"b", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "2"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "-", 
     RowBox[{"r", " ", 
      RowBox[{"a", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "-", 
     RowBox[{
      SuperscriptBox["r", "2"], " ", 
      RowBox[{
       SuperscriptBox["a", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}]}]}], 
    RowBox[{
     SuperscriptBox["r", "2"], " ", 
     RowBox[{"a", "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}]}]], "==", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"r", ",", "t"}], "]"}], "-", 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         SuperscriptBox["r", "2"], " "}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["b", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["u", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"b", "[", 
           RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["u", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "2"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{
        SuperscriptBox["a", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}]}]}], 
     RowBox[{"a", "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["u", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}], "r"]}]}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.5988459774667997`*^9, 3.5988460056868*^9}, {
  3.5988461237948*^9, 3.5988461663538*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.5988461334618*^9, 3.5988461672728*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5988460455488*^9, 3.5988461296878*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Div", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SuperscriptBox["r", "2"], "+", "1"}], " ", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            SuperscriptBox["r", "2"], "+", "1"}]}], "}"}]}], "}"}], ".", 
       RowBox[{"Grad", "[", 
        RowBox[{
         RowBox[{"u", "[", 
          RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "\[Theta]"}], "}"}], ",", " ", "\"\<Polar\>\""}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "\[Theta]"}], "}"}], ",", " ", "\"\<Polar\>\""}], 
     "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"8", " ", 
      SuperscriptBox["r", "2"]}], "+", "4"}]}], ",", 
   RowBox[{
    SuperscriptBox["u", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5988463059498*^9, 3.5988463140668*^9}, {
  3.5988463680028*^9, 3.5988465273278*^9}, {3.5988465585968*^9, 
  3.5988465882088003`*^9}, {3.5988466284068003`*^9, 3.5988466573808002`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["u", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"2", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"r", ",", "\[Theta]"}], "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"4", " ", 
       SuperscriptBox["r", "2"]}], "+", 
      RowBox[{"8", " ", 
       SuperscriptBox["r", "4"]}], "-", 
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "2"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}], "-", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "-", 
      RowBox[{"r", " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "-", 
      RowBox[{"3", " ", 
       SuperscriptBox["r", "3"], " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}]}]}], 
     RowBox[{
      SuperscriptBox["r", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["r", "2"]}], ")"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.5988463156518*^9, {3.5988463704328003`*^9, 3.5988463982047997`*^9}, 
   3.5988465288528*^9, 3.5988465888608*^9, {3.5988466319698*^9, 
   3.5988466581738*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"4", " ", 
       SuperscriptBox["r", "2"]}], "+", 
      RowBox[{"8", " ", 
       SuperscriptBox["r", "4"]}], "-", 
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "2"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}], "-", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "-", 
      RowBox[{"r", " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "-", 
      RowBox[{"3", " ", 
       SuperscriptBox["r", "3"], " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}]}]}], 
     RowBox[{
      SuperscriptBox["r", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["r", "2"]}], ")"}]}]], "/.", 
    RowBox[{
     RowBox[{
      SuperscriptBox["u", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "2"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}], "\[Rule]", "0"}]}], "/.", 
   RowBox[{
    RowBox[{
     SuperscriptBox["u", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"r", ",", "\[Theta]"}], "]"}], "\[Rule]", 
    RowBox[{"2", "r"}]}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.5988466890797997`*^9, 3.5988467297948*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.5988467226468*^9, 3.5988467303408003`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"8", " ", 
     SuperscriptBox["r", "2"]}], "+", "4"}], "/.", 
   RowBox[{"r", "\[Rule]", 
    RowBox[{"1", "/", "4"}]}]}], "//", "N"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["r", "2"], "+", "1"}], "/.", 
   RowBox[{"r", "\[Rule]", 
    RowBox[{"1", "/", "4"}]}]}], "//", "N"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"2", "r"}], "/.", 
   RowBox[{"r", "\[Rule]", 
    RowBox[{"1", "/", "4"}]}]}], "//", "N"}]}], "Input",
 CellChangeTimes->{{3.5988468636958*^9, 3.5988469161268*^9}}],

Cell[BoxData["4.5`"], "Output",
 CellChangeTimes->{{3.5988468674448*^9, 3.5988469165528*^9}}],

Cell[BoxData["1.0625`"], "Output",
 CellChangeTimes->{{3.5988468674448*^9, 3.5988469165587997`*^9}}],

Cell[BoxData["0.5`"], "Output",
 CellChangeTimes->{{3.5988468674448*^9, 3.5988469165628*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["b", "in"], ",", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          RowBox[{"4", 
           SuperscriptBox["y", "2"]}]}], "\[LessEqual]", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["b", "out"], ",", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          RowBox[{"4", 
           SuperscriptBox["y", "2"]}]}], ">", "1"}]}], "}"}]}], "}"}], "]"}], 
   "//", "PiecewiseExpand"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SuperscriptBox["x", "2"], "-", 
         SuperscriptBox["y", "2"]}], ",", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          RowBox[{"4", 
           SuperscriptBox["y", "2"]}]}], "\[LessEqual]", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", "x", "]"}], 
         RowBox[{"Cos", "[", "y", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          RowBox[{"4", 
           SuperscriptBox["y", "2"]}]}], ">", "1"}]}], "}"}]}], "}"}], "]"}], 
   "//", "PiecewiseExpand"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Div", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Beta]", "[", 
          RowBox[{"x", ",", "y"}], "]"}], " ", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"\[Beta]", "[", 
          RowBox[{"x", ",", "y"}], "]"}]}], "}"}]}], "}"}], ".", 
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{"u", "[", 
        RowBox[{"x", ",", "y"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], ",", " ", "\"\<Cartesian\>\""}], 
      "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", " ", "\"\<Cartesian\>\""}], "]"}], "//",
   "PiecewiseExpand"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6029061279416*^9, 3.6029062221146*^9}, {
  3.6029062759306*^9, 3.6029063343226*^9}, {3.6029063670676003`*^9, 
  3.6029063680306*^9}, {3.6036393033732*^9, 3.6036393464231997`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"0", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["y", "2"]}]}], "\[LessEqual]", "1"}]},
       {
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"Cos", "[", "y", "]"}], " ", 
         RowBox[{"Sin", "[", "x", "]"}], " ", 
         SubscriptBox["b", "out"]}], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6029063059586*^9, 3.6029063354736*^9}, 
   3.6029063684876003`*^9, 3.6036392794302*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SuperscriptBox["x", "2"], "-", 
         SuperscriptBox["y", "2"]}], ",", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          RowBox[{"4", 
           SuperscriptBox["y", "2"]}]}], "\[LessEqual]", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", "x", "]"}], 
         RowBox[{"Cos", "[", "y", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          RowBox[{"4", 
           SuperscriptBox["y", "2"]}]}], ">", "1"}]}], "}"}]}], "}"}], "]"}], 
   "//", "PiecewiseExpand"}]}], "\[IndentingNewLine]", 
 RowBox[{"x", "=", 
  RowBox[{"f", "  ", 
   RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
   RowBox[{"Cosh", "[", "\[Xi]", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"y", "=", 
  RowBox[{"f", "  ", 
   RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
   RowBox[{"Sinh", "[", "\[Xi]", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"u", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", "\[Xi]"}], "]"}], "//", 
   "PiecewiseExpand"}], "//", "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "2"], "-", 
    SuperscriptBox["y", "2"]}], ",", "\[Xi]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6036393429882*^9, 3.6036394144982*^9}, {
  3.6036532686432*^9, 3.6036532771972*^9}}],

Cell[BoxData[
 RowBox[{"f", " ", 
  RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
  RowBox[{"Cosh", "[", "\[Xi]", "]"}]}]], "Output",
 CellChangeTimes->{{3.6036393606652*^9, 3.6036394152522*^9}, 
   3.6036532781892*^9}],

Cell[BoxData[
 RowBox[{"f", " ", 
  RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
  RowBox[{"Sinh", "[", "\[Xi]", "]"}]}]], "Output",
 CellChangeTimes->{{3.6036393606652*^9, 3.6036394152522*^9}, 
   3.6036532781991997`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{
         SuperscriptBox["f", "2"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[CurlyPhi]"}], "]"}], " ", 
         RowBox[{"Sinh", "[", 
          RowBox[{"2", " ", "\[Xi]"}], "]"}]}], 
        RowBox[{
         RowBox[{
          SuperscriptBox["f", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Cosh", "[", "\[Xi]", "]"}], "2"]}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Sinh", "[", "\[Xi]", "]"}], "2"]}]}], ")"}]}], 
         "\[LessEqual]", "1"}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", "f"}], " ", 
          RowBox[{"Cosh", "[", "\[Xi]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"f", " ", 
            RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
            RowBox[{"Cosh", "[", "\[Xi]", "]"}]}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"f", " ", 
            RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
            RowBox[{"Sinh", "[", "\[Xi]", "]"}]}], "]"}]}], "+", 
         RowBox[{"f", " ", 
          RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"f", " ", 
            RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
            RowBox[{"Cosh", "[", "\[Xi]", "]"}]}], "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"f", " ", 
            RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
            RowBox[{"Sinh", "[", "\[Xi]", "]"}]}], "]"}], " ", 
          RowBox[{"Sinh", "[", "\[Xi]", "]"}]}]}], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6036393606652*^9, 3.6036394152522*^9}, 
   3.6036532854212*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   SuperscriptBox["f", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
   RowBox[{"Cosh", "[", "\[Xi]", "]"}], " ", 
   RowBox[{"Sinh", "[", "\[Xi]", "]"}]}], "-", 
  RowBox[{"2", " ", 
   SuperscriptBox["f", "2"], " ", 
   RowBox[{"Cosh", "[", "\[Xi]", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
   RowBox[{"Sinh", "[", "\[Xi]", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.6036393606652*^9, 3.6036394152522*^9}, 
   3.6036532854292*^9}]
}, Open  ]],

Cell[BoxData["|"], "Input",
 CellChangeTimes->{3.6036394152132*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"f", "=", 
  RowBox[{"1", "-", 
   RowBox[{"1", "/", "4"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[Xi]", "0"], "=", 
  RowBox[{"ArcCosh", "[", 
   RowBox[{"1", "/", "f"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"x", "=", 
  RowBox[{"f", "  ", 
   RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
   RowBox[{"Cosh", "[", "\[Xi]", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"y", "=", 
  RowBox[{"f", "  ", 
   RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
   RowBox[{"Sinh", "[", "\[Xi]", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  SuperscriptBox["x", "2"], "-", 
  SuperscriptBox["y", "2"]}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], 
    RowBox[{"Cos", "[", "y", "]"}]}], "/.", 
   RowBox[{"\[Xi]", "->", 
    SubscriptBox["\[Xi]", "0"]}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6029064334336*^9, 3.6029064679736*^9}, {
   3.6029065825076*^9, 3.6029067315726*^9}, {3.6029067616336*^9, 
   3.6029067806466*^9}, 3.6029068140916*^9, 3.6029071426786003`*^9}],

Cell[BoxData[
 FractionBox["3", "4"]], "Output",
 CellChangeTimes->{
  3.6029064684926*^9, {3.6029066915436*^9, 3.6029067335376*^9}, 
   3.6029067816316*^9, 3.6029068175306*^9, 3.6029071435425997`*^9}],

Cell[BoxData[
 RowBox[{"ArcCosh", "[", 
  FractionBox["4", "3"], "]"}]], "Output",
 CellChangeTimes->{
  3.6029064684926*^9, {3.6029066915436*^9, 3.6029067335376*^9}, 
   3.6029067816316*^9, 3.6029068175306*^9, 3.6029071435506*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["3", "4"], " ", 
  RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
  RowBox[{"Cosh", "[", "\[Xi]", "]"}]}]], "Output",
 CellChangeTimes->{
  3.6029064684926*^9, {3.6029066915436*^9, 3.6029067335376*^9}, 
   3.6029067816316*^9, 3.6029068175306*^9, 3.6029071435596*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["3", "4"], " ", 
  RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
  RowBox[{"Sinh", "[", "\[Xi]", "]"}]}]], "Output",
 CellChangeTimes->{
  3.6029064684926*^9, {3.6029066915436*^9, 3.6029067335376*^9}, 
   3.6029067816316*^9, 3.6029068175306*^9, 3.6029071435666*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["9", "16"], " ", 
   SuperscriptBox[
    RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cosh", "[", "\[Xi]", "]"}], "2"]}], "-", 
  RowBox[{
   FractionBox["9", "16"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sinh", "[", "\[Xi]", "]"}], "2"]}]}]], "Output",
 CellChangeTimes->{
  3.6029064684926*^9, {3.6029066915436*^9, 3.6029067335376*^9}, 
   3.6029067816316*^9, 3.6029068175306*^9, 3.6029071435746*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["9", "32"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[CurlyPhi]"}], "]"}], " ", 
     RowBox[{"Cosh", "[", 
      RowBox[{"2", " ", "\[Xi]"}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.6029064684926*^9, {3.6029066915436*^9, 3.6029067335376*^9}, 
   3.6029067816316*^9, 3.6029068175306*^9, 3.6029071436916*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    SqrtBox["7"], " ", 
    RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], "]"}], " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.6029064684926*^9, {3.6029066915436*^9, 3.6029067335376*^9}, 
   3.6029067816316*^9, 3.6029068175306*^9, 3.6029071436996*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Div", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["b", "in"], " ", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         SubscriptBox["b", "in"]}], "}"}]}], "}"}], ".", 
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "2"], "-", 
        SuperscriptBox["y", "2"]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], ",", " ", "\"\<Cartesian\>\""}], 
      "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", " ", "\"\<Cartesian\>\""}], "]"}], "//",
   "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Div", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["b", "out"], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         SubscriptBox["b", "out"]}], "}"}]}], "}"}], ".", 
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", "x", "]"}], 
        RowBox[{"Cos", "[", "y", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], ",", " ", "\"\<Cartesian\>\""}], 
      "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", " ", "\"\<Cartesian\>\""}], "]"}], "//",
   "Simplify"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.601899893032*^9, 3.60189989983*^9}, {3.60189993169*^9, 
  3.601900005778*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.601899983451*^9, 3.601900009033*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], " ", 
  RowBox[{"Cos", "[", "y", "]"}], " ", 
  RowBox[{"Sin", "[", "x", "]"}], " ", 
  SubscriptBox["b", "out"]}]], "Output",
 CellChangeTimes->{{3.601899983451*^9, 3.601900009064*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sin", "[", 
   RowBox[{"f", " ", 
    RowBox[{"Cosh", "[", "\[Xi]", "]"}], 
    RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "]"}], "//", 
  "TrigExpand"}]], "Input",
 CellChangeTimes->{{3.601903645531*^9, 3.6019037037720003`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"F", "=", 
  RowBox[{
   RowBox[{"-", "2"}], "\[Beta]", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[FormalA]", "  ", 
     RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
     RowBox[{"Cosh", "[", "\[Xi]", "]"}]}], "]"}], 
   RowBox[{"Cos", "[", 
    RowBox[{"\[FormalA]", "  ", 
     RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
     RowBox[{"Sinh", "[", "\[Xi]", "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{"F", ",", "\[Xi]"}], "]"}], "//", 
  RowBox[{"FullSimplify", "/.", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[FormalA]", " ", 
      RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
      RowBox[{"Sinh", "[", "\[Xi]", "]"}]}], "}"}], "\[Rule]", 
    "x"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{"F", ",", "\[CurlyPhi]"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Grad", "[", 
     RowBox[{"F", ",", 
      RowBox[{"{", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "}"}], ",", " ", 
      "\"\<Elliptic\>\""}], "]"}], "//", "FullSimplify"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.601903733466*^9, 3.601903735792*^9}, {
  3.6019037744700003`*^9, 3.601903851203*^9}, {3.601945498013*^9, 
  3.601945538576*^9}, {3.601945574587*^9, 3.601945577678*^9}, {
  3.6019456180290003`*^9, 3.60194562798*^9}, {3.601945701392*^9, 
  3.601945724315*^9}, {3.6019483811809998`*^9, 3.6019483971689997`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], " ", "\[Beta]", " ", 
  RowBox[{"Cos", "[", 
   RowBox[{"\[FormalA]", " ", 
    RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
    RowBox[{"Sinh", "[", "\[Xi]", "]"}]}], "]"}], " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"\[FormalA]", " ", 
    RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
    RowBox[{"Cosh", "[", "\[Xi]", "]"}]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.601903825025*^9, 3.6019038522539997`*^9}, {
   3.601945526604*^9, 3.601945539835*^9}, 3.6019455794040003`*^9, 
   3.6019456287939997`*^9, {3.6019457055889997`*^9, 3.601945725309*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "\[FormalA]", " ", "\[Beta]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Cosh", "[", "\[Xi]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[FormalA]", " ", 
       RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
       RowBox[{"Cosh", "[", "\[Xi]", "]"}]}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[FormalA]", " ", 
       RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
       RowBox[{"Sinh", "[", "\[Xi]", "]"}]}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[FormalA]", " ", 
       RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
       RowBox[{"Cosh", "[", "\[Xi]", "]"}]}], "]"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[FormalA]", " ", 
       RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
       RowBox[{"Sinh", "[", "\[Xi]", "]"}]}], "]"}], " ", 
     RowBox[{"Sinh", "[", "\[Xi]", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.601903825025*^9, 3.6019038522539997`*^9}, {
   3.601945526604*^9, 3.601945539835*^9}, 3.6019455794040003`*^9, 
   3.6019456287939997`*^9, {3.6019457055889997`*^9, 3.6019457253199997`*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "\[FormalA]", " ", "\[Beta]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"\[FormalA]", " ", 
       RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
       RowBox[{"Cosh", "[", "\[Xi]", "]"}]}], "]"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[FormalA]", " ", 
       RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
       RowBox[{"Sinh", "[", "\[Xi]", "]"}]}], "]"}], " ", 
     RowBox[{"Cosh", "[", "\[Xi]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[FormalA]", " ", 
       RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
       RowBox[{"Cosh", "[", "\[Xi]", "]"}]}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[FormalA]", " ", 
       RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
       RowBox[{"Sinh", "[", "\[Xi]", "]"}]}], "]"}], " ", 
     RowBox[{"Sinh", "[", "\[Xi]", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.601903825025*^9, 3.6019038522539997`*^9}, {
   3.601945526604*^9, 3.601945539835*^9}, 3.6019455794040003`*^9, 
   3.6019456287939997`*^9, {3.6019457055889997`*^9, 3.601945725328*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", 
     SqrtBox["2"], " ", "\[Beta]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cosh", "[", "\[Xi]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[FormalA]", " ", 
          RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
          RowBox[{"Cosh", "[", "\[Xi]", "]"}]}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[FormalA]", " ", 
          RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
          RowBox[{"Sinh", "[", "\[Xi]", "]"}]}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[FormalA]", " ", 
          RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
          RowBox[{"Cosh", "[", "\[Xi]", "]"}]}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[FormalA]", " ", 
          RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
          RowBox[{"Sinh", "[", "\[Xi]", "]"}]}], "]"}], " ", 
        RowBox[{"Sinh", "[", "\[Xi]", "]"}]}]}], ")"}]}], 
    SqrtBox[
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[CurlyPhi]"}], "]"}]}], "+", 
      RowBox[{"Cosh", "[", 
       RowBox[{"2", " ", "\[Xi]"}], "]"}]}]]], ",", 
   FractionBox[
    RowBox[{"2", " ", 
     SqrtBox["2"], " ", "\[Beta]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[FormalA]", " ", 
          RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
          RowBox[{"Cosh", "[", "\[Xi]", "]"}]}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[FormalA]", " ", 
          RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
          RowBox[{"Sinh", "[", "\[Xi]", "]"}]}], "]"}], " ", 
        RowBox[{"Cosh", "[", "\[Xi]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[FormalA]", " ", 
          RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
          RowBox[{"Cosh", "[", "\[Xi]", "]"}]}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[FormalA]", " ", 
          RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
          RowBox[{"Sinh", "[", "\[Xi]", "]"}]}], "]"}], " ", 
        RowBox[{"Sinh", "[", "\[Xi]", "]"}]}]}], ")"}]}], 
    SqrtBox[
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[CurlyPhi]"}], "]"}]}], "+", 
      RowBox[{"Cosh", "[", 
       RowBox[{"2", " ", "\[Xi]"}], "]"}]}]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.601903825025*^9, 3.6019038522539997`*^9}, {
   3.601945526604*^9, 3.601945539835*^9}, 3.6019455794040003`*^9, 
   3.6019456287939997`*^9, {3.6019457055889997`*^9, 3.601945725335*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"2", "  ", "\[Beta]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"\[FormalA]", " ", 
     RowBox[{"Cosh", "[", "\[Xi]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
     RowBox[{"Sin", "[", "x", "]"}], " ", 
     RowBox[{"Sin", "[", "y", "]"}]}], "-", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], " ", 
     RowBox[{"Cos", "[", "y", "]"}], " ", "\[FormalA]", " ", 
     RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
     RowBox[{"Sinh", "[", "\[Xi]", "]"}]}]}], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"2", " ", "\[Beta]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], " ", 
     RowBox[{"Cos", "[", "y", "]"}], " ", "\[FormalA]", " ", 
     RowBox[{"Cosh", "[", "\[Xi]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], " ", 
     RowBox[{"Sin", "[", "y", "]"}], 
     RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "  ", 
     RowBox[{"Sinh", "[", "\[Xi]", "]"}]}]}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.601948464696*^9, 3.601948509395*^9}, {
   3.6019485482869997`*^9, 3.601948556703*^9}, {3.6019485958310003`*^9, 
   3.601948643102*^9}, 3.6019536032130003`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"F", "=", 
  RowBox[{
   RowBox[{"-", "2"}], "\[Beta]", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"x", "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "]"}], 
   RowBox[{"Cos", "[", 
    RowBox[{"y", "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Fn", "=", 
  RowBox[{"D", "[", 
   RowBox[{"F", ",", "\[Xi]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Ff", "=", " ", 
  RowBox[{"D", "[", 
   RowBox[{"F", ",", "\[CurlyPhi]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"F", ",", 
     RowBox[{"{", 
      RowBox[{"\[Xi]", ",", "2"}], "}"}]}], "]"}], "//", "FullSimplify"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"F", ",", 
      RowBox[{"{", 
       RowBox[{"\[Xi]", ",", "2"}], "}"}]}], "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"F", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["x", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "2"]}], "+"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{"F", ",", 
    RowBox[{"{", 
     RowBox[{"\[CurlyPhi]", ",", "2"}], "}"}]}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.6025318767349997`*^9, 3.602531928104*^9}, {
  3.602532490652*^9, 3.6025325862*^9}, {3.602532642481*^9, 
  3.602532644146*^9}, {3.60253268983*^9, 3.602532725743*^9}, {
  3.602532794783*^9, 3.6025328071280003`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], " ", "\[Beta]", " ", 
  RowBox[{"Cos", "[", 
   RowBox[{"y", "[", 
    RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "]"}], " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"x", "[", 
    RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.602531930023*^9, 3.6025325313389997`*^9, {3.602532583385*^9, 
   3.602532586663*^9}, {3.602532629252*^9, 3.602532644676*^9}, {
   3.6025327981870003`*^9, 3.602532808023*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "2"}], " ", "\[Beta]", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"x", "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "]"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"y", "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["x", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "+", 
  RowBox[{"2", " ", "\[Beta]", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"x", "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"y", "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["y", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.602531930023*^9, 3.6025325313389997`*^9, {3.602532583385*^9, 
   3.602532586663*^9}, {3.602532629252*^9, 3.602532644676*^9}, {
   3.6025327981870003`*^9, 3.602532808032*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "2"}], " ", "\[Beta]", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"x", "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "]"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"y", "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["x", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "+", 
  RowBox[{"2", " ", "\[Beta]", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"x", "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"y", "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["y", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.602531930023*^9, 3.6025325313389997`*^9, {3.602532583385*^9, 
   3.602532586663*^9}, {3.602532629252*^9, 3.602532644676*^9}, {
   3.6025327981870003`*^9, 3.6025328080369997`*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "\[Beta]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"x", "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"y", "[", 
          RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["x", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["y", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"y", "[", 
          RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["x", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"2", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"x", "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"y", "[", 
          RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["x", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["y", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "2"]}], ")"}]}], 
       "+", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"y", "[", 
          RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["y", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"2", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{
  3.602531930023*^9, 3.6025325313389997`*^9, {3.602532583385*^9, 
   3.602532586663*^9}, {3.602532629252*^9, 3.602532644676*^9}, {
   3.6025327981870003`*^9, 3.6025328091540003`*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "\[Beta]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"x", "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"y", "[", 
          RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["x", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["y", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"y", "[", 
          RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["x", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "2"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"x", "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"y", "[", 
          RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["x", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["y", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "2"]}], ")"}]}], 
       "+", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"y", "[", 
          RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["y", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "2"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{
  3.602531930023*^9, 3.6025325313389997`*^9, {3.602532583385*^9, 
   3.602532586663*^9}, {3.602532629252*^9, 3.602532644676*^9}, {
   3.6025327981870003`*^9, 3.602532810222*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"x", "=", 
  RowBox[{"\[FormalA]", "  ", 
   RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
   RowBox[{"Cosh", "[", "\[Xi]", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"y", "=", 
  RowBox[{"\[FormalA]", "  ", 
   RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
   RowBox[{"Sinh", "[", "\[Xi]", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"xn", "=", 
  RowBox[{"D", "[", 
   RowBox[{"x", ",", "\[Xi]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"yn", "=", 
  RowBox[{"D", "[", 
   RowBox[{"y", ",", "\[Xi]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "^", "2"}], "-", 
      RowBox[{"y", "^", "2"}]}], ",", "\[Xi]"}], "]"}], "==", 
   RowBox[{
    RowBox[{"2", "x", " ", "xn"}], "-", 
    RowBox[{"2", "y", " ", "yn"}]}]}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"y", ",", 
       RowBox[{"{", 
        RowBox[{"\[Xi]", ",", "2"}], "}"}]}], "]"}], "\[Equal]", "y"}], "//", 
    RowBox[{
     RowBox[{"Simplify", "\[IndentingNewLine]", 
      RowBox[{"D", "[", 
       RowBox[{"y", ",", "\[CurlyPhi]"}], "]"}], "\[IndentingNewLine]", 
      RowBox[{"D", "[", 
       RowBox[{"y", ",", 
        RowBox[{"{", 
         RowBox[{"\[CurlyPhi]", ",", "2"}], "}"}]}], "]"}]}], "\[Equal]", 
     RowBox[{"-", "y"}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.602552412848*^9, 3.602552550626*^9}, {3.602552676177*^9,
   3.602552687212*^9}, {3.6032538939666*^9, 3.6032539467026*^9}, {
  3.6032539921326*^9, 3.6032540475956*^9}}],

Cell[BoxData[
 RowBox[{"\[FormalA]", " ", 
  RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
  RowBox[{"Cosh", "[", "\[Xi]", "]"}]}]], "Output",
 CellChangeTimes->{{3.602552476347*^9, 3.602552551111*^9}, {3.602552679849*^9,
    3.6025526876870003`*^9}, 3.6032539503566*^9, {3.6032540002146*^9, 
   3.6032540480156*^9}}],

Cell[BoxData[
 RowBox[{"\[FormalA]", " ", 
  RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
  RowBox[{"Sinh", "[", "\[Xi]", "]"}]}]], "Output",
 CellChangeTimes->{{3.602552476347*^9, 3.602552551111*^9}, {3.602552679849*^9,
    3.6025526876870003`*^9}, 3.6032539503566*^9, {3.6032540002146*^9, 
   3.6032540480285997`*^9}}],

Cell[BoxData[
 RowBox[{"\[FormalA]", " ", 
  RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
  RowBox[{"Sinh", "[", "\[Xi]", "]"}]}]], "Output",
 CellChangeTimes->{{3.602552476347*^9, 3.602552551111*^9}, {3.602552679849*^9,
    3.6025526876870003`*^9}, 3.6032539503566*^9, {3.6032540002146*^9, 
   3.6032540480386*^9}}],

Cell[BoxData[
 RowBox[{"\[FormalA]", " ", 
  RowBox[{"Cosh", "[", "\[Xi]", "]"}], " ", 
  RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}]], "Output",
 CellChangeTimes->{{3.602552476347*^9, 3.602552551111*^9}, {3.602552679849*^9,
    3.6025526876870003`*^9}, 3.6032539503566*^9, {3.6032540002146*^9, 
   3.6032540480526*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.602552476347*^9, 3.602552551111*^9}, {3.602552679849*^9,
    3.6025526876870003`*^9}, 3.6032539503566*^9, {3.6032540002146*^9, 
   3.6032540480636*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Sin", "[", 
   RowBox[{"x", "[", 
    RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "]"}], 
  RowBox[{"Cos", "[", 
   RowBox[{"y", "[", 
    RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"D", "[", 
  RowBox[{"%", ",", "\[Xi]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x", "[", 
    RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "^", "2"}], "+", 
  RowBox[{
   RowBox[{"y", "[", 
    RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "^", 
   "2"}]}], "\[IndentingNewLine]", 
 RowBox[{"D", "[", 
  RowBox[{"%", ",", "\[Xi]"}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.602736030248*^9, 3.602736064837*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", 
   RowBox[{"y", "[", 
    RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "]"}], " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"x", "[", 
    RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "]"}]}]], "Output",
 CellChangeTimes->{3.602736069642*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"x", "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "]"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"y", "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["x", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "-", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"x", "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"y", "[", 
     RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["y", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.60273607071*^9}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"x", "[", 
    RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "2"], "+", 
  SuperscriptBox[
   RowBox[{"y", "[", 
    RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], "2"]}]], "Output",
 CellChangeTimes->{3.602736070755*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   RowBox[{"x", "[", 
    RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["x", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   RowBox[{"y", "[", 
    RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["y", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.602736070824*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"y", "=."}]], "Input",
 CellChangeTimes->{{3.6158341683193398`*^9, 3.615834170950692*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Div", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"x", ",", "y"}], "]"}], " ", ",", 
         RowBox[{"b", "[", 
          RowBox[{"x", ",", "y"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"c", "[", 
          RowBox[{"x", ",", "y"}], "]"}], ",", 
         RowBox[{"d", "[", 
          RowBox[{"x", ",", "y"}], "]"}]}], "}"}]}], "}"}], ".", 
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{"u", "[", 
        RowBox[{"x", ",", "y"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], ",", " ", "\"\<Cartesian\>\""}], 
      "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", " ", "\"\<Cartesian\>\""}], "]"}], "//",
   "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Div", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"x", ",", "y"}], "]"}], " ", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"b", "[", 
          RowBox[{"x", ",", "y"}], "]"}]}], "}"}]}], "}"}], ".", 
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{"u", "[", 
        RowBox[{"x", ",", "y"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], ",", " ", "\"\<Cartesian\>\""}], 
      "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", " ", "\"\<Cartesian\>\""}], "]"}], "//",
   "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Div", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"c", "[", 
      RowBox[{"x", ",", "y", ",", "t"}], "]"}], 
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{"u", "[", 
        RowBox[{"x", ",", "y"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], ",", " ", "\"\<Cartesian\>\""}], 
      "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", " ", "\"\<Cartesian\>\""}], "]"}], "//",
   "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.615834153770091*^9, 3.615834160970286*^9}, {
  3.615834194316103*^9, 3.6158342344504843`*^9}, {3.615835063715814*^9, 
  3.615835078751273*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"d", "[", 
    RowBox[{"x", ",", "y"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["u", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "2"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{
    SuperscriptBox["u", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"x", ",", "y"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["d", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y"}], "]"}], "+", 
     RowBox[{
      SuperscriptBox["b", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["c", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y"}], "]"}], "+", 
     RowBox[{
      SuperscriptBox["a", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], ")"}], " ", 
   RowBox[{
    SuperscriptBox["u", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"b", "[", 
      RowBox[{"x", ",", "y"}], "]"}], "+", 
     RowBox[{"c", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], ")"}], " ", 
   RowBox[{
    SuperscriptBox["u", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"a", "[", 
    RowBox[{"x", ",", "y"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["u", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"x", ",", "y"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.615834163496312*^9, 3.615834200839677*^9}, 
   3.6158342354204607`*^9, 3.615835088589316*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["b", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"x", ",", "y"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["u", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"b", "[", 
    RowBox[{"x", ",", "y"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["u", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "2"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{
    SuperscriptBox["a", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"x", ",", "y"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["u", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"a", "[", 
    RowBox[{"x", ",", "y"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["u", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"x", ",", "y"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.615834163496312*^9, 3.615834200839677*^9}, 
   3.6158342354204607`*^9, 3.615835088592331*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"c", "[", 
    RowBox[{"x", ",", "y", ",", "t"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["u", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "2"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y"}], "]"}], "+", 
     RowBox[{
      SuperscriptBox["u", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"2", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], ")"}]}], "+", 
  RowBox[{
   RowBox[{
    SuperscriptBox["u", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"x", ",", "y"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["c", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"x", ",", "y", ",", "t"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{
    SuperscriptBox["u", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"x", ",", "y"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["c", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"x", ",", "y", ",", "t"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.615834163496312*^9, 3.615834200839677*^9}, 
   3.6158342354204607`*^9, 3.615835088723115*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SuperscriptBox["x", "2"], "-", 
         SuperscriptBox["y", "2"]}], ",", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          RowBox[{"4", 
           SuperscriptBox["y", "2"]}]}], "\[LessEqual]", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", "x", "]"}], 
         RowBox[{"Cos", "[", "y", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          RowBox[{"4", 
           SuperscriptBox["y", "2"]}]}], ">", "1"}]}], "}"}]}], "}"}], "]"}], 
   "//", "PiecewiseExpand"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"u", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1.1"}], ",", "1.1"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.624576575581107*^9, 3.6245766232837877`*^9}, {
  3.624576686214094*^9, 3.624576715577694*^9}, {3.624576849158566*^9, 
  3.624576854533626*^9}, {3.624576935533928*^9, 3.624576944499159*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
e0Yof4v/v/xj44bMCG/FG9pXfTd3U3n/AOWH0d7ZufkJ31JPlR8G/nHx7YMx
PXZYgk/Ik/nLM8WnjsM/Q85VqY/iDe2PcZ4CO0P7DpIHZX/KL1nIeQS7Ab5p
9s6JIyxSlP2Bj0mttq8bl5mi/APad7M/OOev1YlqvQPeolz3h3lS4lV7zCf4
E/CI9t558x6eO/mG0hvtuxvyptfKf6G9HfdXzV/+fzttHwD/H8jywYPykywf
/gH9nfOr1u+1V0MI+mPcZJ6epOwbcqy39vid/2GAslu0l/tyUep5+IRfUv6E
8eMG/S+o7/h/xtX8wv8f5fZoh0/TPNSLTJ+70xJyTNsvtkR74Kf5uVjHIees
m+/k741SlJ9H+5XMD/wVcIuq1Qrmb5Wm7E3DVRwFvLj7hXIfKF3tbwCX6+9e
pQf6wTyofRm0tzXgK9Tfoz331wlxkeLBQspHO9P2Rj6Bn9L4gZySrD/6i/bo
L+wK+FJT3lTePHpyUNX1mcZ1GbhLs1MJhSonKX4g553GD/TlcVf7Qmh/UeMH
7Xnc1fPQ/nsrU37QnnlQf2/6XOP6i7/rxfMCOJ6TuuOVO82JVHaF9rpdaXyS
ab7jRWekfWr5jhetO3TEsdb3GDWvsT7Dj8H/oH1X9g/A4Y+bFtw27XSpV2Sa
73jREEP7k1q+48X7IZe1/RAv5uGk0sOUz/sqfsBzZbx3WfkxtO/PeprmQV60
kf0S2kPeT46jTPMjL1rP/JjmR16kz3fI6S55I9N8PIRe6f4cfpfXZfhl+Gms
p7BbyDmLdc3EniPp4er4Q3HDnJXdov13XjdN7TmSJrct87vteXc1T/T2pvZs
bI/+oz2PizDdBwjBuKj26O9RjmdU//nTktdl032AEGop101jnM/tOf5R6xNw
xCewQ9We4xDwBnlbZdyl7BPtP2jxCdojDtTiPUK8p8V1ZBrXRSr9Oe5S/UT7
9jIu1eNh+o94mP4jHkZ79R1x8ZpnuR80ehas5EMe40JrD1z1C+v8obrd9qY0
eqn8O+x9gmZXOg45wO+w3So7YDxZxp/KL2GcWz373jqmVpLyS8BbsP/Bd8yn
TLZDfMf/Z2p+Q9VfsBw8F3aE9QXxDHD4Z2VvbF/d2I/hO/6fcbUu4//fsZ7g
E+15fVd+Eu3bs3zwjPa83imegbMfVv4K+CvuF8YdOK+zWpy0x5L11OKkPZYc
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
uaPpCgWd3+7+ggZ9mjiwmpU3vfPqv6Pk1iga57D5iNUFD8rcf7TEw77RYour
/feEWuEi7/QtTVIsw8Wo72lX7twJFnk7hxRaXi1SWM2qPXv4qgAx93kf+7qD
4kWDhe4fLg4LEReqdt3+2TpGeLoGp5Wc/pZ+1bw6JHPqY9Fra9TK3DNTwYOK
B5gH8azYuF1XJ6aJpulRv9fYvKauoweXyLUygX5XHHb27pNUscPGf65l/+x4
u+HPA1NcE8Vkaf9qf2IZ2/9snheI02YxDjtxkXYiYCfYB+/ddm2hhK8B9KvS
uhp3lwTTxDF/Fqk3N5ZGee/tecM9lDKfTRr/LjCKanVPfXvnfBz9fel4k8Lx
IeQR8GdAUmY0DZR8CuZTjJV84rnipelzBdszsT0L2PNIOe5qXdsqx52seF0+
KMddhMpxpzZZSxsE1UwQna/eP3F0VhDNTDtqcW+CHxV9bxgvetPJMF70arJh
vKjh07du2eNF9YsO7HtpWAjFTG5zInu8VH7e8+2SgKJLI0TF23GFTuYKFsfe
F/Ld2/eN6HC10sf2vq7in+/XT7neTaEv5lPdZn5LF9Vn/Xz+e5KbqDqw6Nj0
b8lUulL+02/3JIjhs+uePp47SCxu+2Zw11f+qo7IzT7E/vrsYHGrwI/ty6fG
inof8vz2KxlNFd6XODCiSpi4PuXk0hF2jtRO9os6yX6J+dyvFxV/m63Kjj8/
Xrxk9rxPkJhyPHZKoblx5Gl7Z+/39anCYfDVT53r+1CpH99tRpyNoxHMJ+aR
zud+nkfgc5hcRwTWkYW8jvyS84I28Lz4Q84LrF/ikbZ+jR75POTDU2M9Zwu7
W86Lq7yht5GT+g7omkJnCyZXdxrrT0t/Ln+cvD9BtStZxPzZ/IZRQuywfNfo
oIeYy3YOe57B9lx/tEG+2je95iDlM0467sX+R5t3tOs7jWk4J1q4FKrf+XfJ
cNpq8b7CKiv8LoSbqDPx7oC3zpHU6UPNLQfOvRSangQ9vXldKeH5dsPICtEi
9tfzxVN3PhXeEYPrNsyOSzqdWvD+y40IUbSThf2Y404qbu857/xsmxhvkWjf
J8l2Xfb8rDI71mpYGkVsbr3CdYyPWH3rwuq2lES9D+a+/GZVskgPsNp1okcA
lfhj9q7OH+PFDNP5RQN5fnlIe6BTbA8l2B40OyfYOfhCv55wvwoxX8yD6Mg8
fJZxnVgp4zo6yXEdj7vQx31cviW96mxJoZB8TSvn/OlHR8tfpCIeCaTJJ8j/
aWpvVIbtbYH0t1Sf/e1l6W/VugI9MV5Fdlj9edgyXqy1/NKn85QQWrvhVSNz
qxgRyPsDe2ZvS4vYHCK8h41seW94DI3KijudWjGVbL/azTFz9xEXv8617eEf
SwMqWkQ8dzSelwWc7lqzS7Z/x7lY/9yRE79kj/PuCN/4QvkjKFGuO4LXHXFV
rjuixQ/rH7MDQ6nM8nZb8q/MXsfNh660u2grnqytca1SarJo2mxVnznTsuPz
gme6z18STeYTRnqcTYknq6NmTq47gmhY+loLj0u+9Pe0ldWqnfGnwT2Gnt8f
EUmrdhbYsu2b8R7FiS1P8s0YGiZa5ytm7mgVKYp6hTSzqRcjJv/lVfvKiTCR
fiWg0YBbEcLDv6NFDvIXLefvPjP5Y6QoXiM23xo7H+PvYke7VLfsFy3SN1tU
eP12h6V7voszjmT4kdXB+A5xuaNE19Tyyb1G+1Dp4PWZS5KMcd34u6+OeL9K
FSWyUi+XXPeWXgdUPOHw6ZKoQydTHidlUCNnGU8muuYos6lCdv6RtP7XjKRo
qjzlcPLesqninm1veuvmQ92fXNgc7h5L6VXMczwvlUIbKx546F3Hj+YlPtlR
1C2ajgTkPPPveCVXO/fveFHOwycM46XZs4A947wA/LSV/FAJyQ+Bn3eSH3Lg
/H0KNXy5M9RbnJ7nmdxzfZK4fvrsqvQKaeKeVdDBCCcfEbasW5WmxZME5zUE
f8B5DRWTPIjugQYeqAbzUErypuJP5o2umsqnUJYPvzFJ6kOsD12T7QntWR9q
zfZwRvaXWrA99Co+ve6pVjHCodv6j/1tw+jMi92z3r6MUPwc5/bgx/ys5OfX
FAM/1GeB5Mef8zT4vQTp95DfkZbfcV6dSG18l0Yv7xJEAYddPsyZF0dVe5St
P+xHAl27X9XWzi6QshL35K7fIpDMd0U13h8UR8eSimxtvzhYTKlQ7uKNzV60
+K96j91yxojysWGRR1aGUvWId29sNjnR3/Pa3+o/5InoknBmzZq6UcL8isuK
Y509hH+hFZXXLb8nfuXs5H+jS5SYXLRB9zHjPcW1VOu/fL2vUsVeCTblRkWJ
bpd3W8R39BJV5XPFcX7uWH5ucusL/rsrRwh8OtktHJvUJTvuK9vlZuN/Mqje
+S7F5tRyFjalHyd8fJZCjIsWEifGRSL/far8pIcsp/H7IQum9Q8R5axnliyW
M5KORuz75vkzQFhd3LLQPU+gWLWheMup5yLpyp19QW3r+Ym/86/NjDvtKzYl
Z3xv2DqKIn44TMy09BbF569Y/3uCpxgcsPOdn00kncz5pEHHpS6iqcxnBeez
tIzz2SuSB8E8EHhg3oh5I/D2h5RPLF8cY/n7JrUpc77WW1E1NdL3wZc7onLW
srXNimUQ41RS4gTcQ+bd1Ebm3fSM8+4h0et6PPorWeweXOrb0h9+4lvebi5X
siJ5PzdJeP/h52R/0F9ktjma489sf+sz2mA/4py0H2Fe2cZgPwvw+42m9iY+
zfKvWzBPsGgw3stmdOEIGknb3W5cuS5ss2qO9jwSJPZWzRSja0bQaHqwqEVn
R+QXNMl/rcuz1iFU0aHlr7n7XlJPmV8T59e0nvPr2ua9z3bMG0gOrV/XDjsb
KZyTak6/Vs9P7Vtmlqlzd0U5TzFp6NLJJ7PzF6zLVgkDelfpHC6a7oxp2Mhx
vXi68sURjzyJYui2vnFVgoJElHOnSiMyYsUTq9Zd/qriw+cDUWSdIL63DvDE
ORf9srq7feS9R8Kl/Ljity3e0OHDA/IfnBYvDpTpf7hvjmC6ZDO9xqbf3oQ4
53X+AvFR36No9OdDO4e8cVbrd/vxx2tfbxpNK+yPH7Id+kDtK91+33PJk9+R
YnN1h+ujIl+JZV8NvNF7cwNvYuNAyRv6tUD2i97tkP2Cf4Z8Kylf5UWsjxgn
9VHnQRUXGfpF6NeUGwPsa41PpWKnC0wcHe5LPcXxOIflxvpV9Aty8pr2V4zi
/g6X6744xOv+GV73cY5w3PXnk6iewfS4wkbP8SW9ifNoQv7OeTQNGdTzXvAZ
XxrR7P7jam2iRPC0AdtOdfCmSTKfEpxPic8ynxLlVnR4ecotVngGzhnesmsI
dfmRa32phi/VPox5lp9TnG92ftTqy4r7/udFVLN9S1r6BYt5vK94a/7Ag9WW
XxLHRs2ptiM6muyK/OrititUlKyQdPof84dkc3Kn08A8MTRo8Kmw8+tCRdmv
q74N2+5EpeVzyUs+VzTm55YNfnm92dR4YTYp1uG2WbAIfvti1l9Z3sDp90RT
PCrE+49ld+PIq+qoz02CQ0Rm/WEXh+SIoW5bnu6zGhlH1o1LVjtWJVTMfuaW
5XsjmgInXv44d0YilX721f5O00Ax2bLskFbXg+jIgvBJmeXfkQefa1Qv1icl
IVcacHXOwrioU67Z3AL9omnGMbtlXd6HksW3kQ3dit0mtyJDkxbdixM5rrd3
3OMcQmVazs/dOHeM6CL1EX9LfWiG1EfgnOXpyhFT7F2D6a8mzi0iunnwfWHF
P3Vl/mt22lO5es13wrJ6Ia+jPttEq4P9l+4qhfPgWDG47psjJ1aEipn7SHj3
jBb52W8AnyVxYjl011QO5RtGXt5X31LbzRbH7l/aJF7uj3i+cdxbtBcvZXtS
z5XtReEthvaktae9pu1RFyeGSn0Iek6W80jwPBI95DxS5yLIiyvLfIF4nSJe
pwSvU3TtqX30mU8JNBv3Z7MK/D2qRiANK9dmd6fsdbxGwMjGdxYF057UaRci
N/1b93qx8ISx6ZTkULJdrU/udKvkjsvRR5Oo4sE9EQNfGX+3uUVCVHcak0ge
O+JzVFiRTrl97xypbutOFaqvqGERkkSavxLwV0+ln+R6sSixUfpJurE4154R
A1PF2DoP7WPifel6rgblnsxLFFZyn1Y0lPu0ZM/7tFPlvpYIk/talCL3tcQk
3u/KYhz7XVs/DD48rr+x/mH9zBUNQ21SOC70Fw6O3x/Md4mgox4z1xyq+lg0
HBi7yi9/oDjsW7jXsUUR9M/uXlbFIu+KYxsiGy99Fyv2bGia83jDEJGn7t95
x+Z3o6OSN5HCvDkybxOPHX5r0TVdeKY0O7T6Lw86NutJjh1Tjff1KjskhZy5
70ZFj67ZPTUgmaJs65x66eIn+qypuHhmQIQI87164ntjoeISxCmPZXyi9g2K
SzmiNMuxn3+xSGCBN3y+mZ3PpXtVeVY5hSKXGfbJqRnvk0+R++RU5+yRLr3X
pNI3W/9Gk676iu1nVi1wskmkHsNfWDeyTqVBDfvk69bFR9Te3jkm0j5O1a/a
uvctlOrgJXpVrOWeXiKR2rmOPzY9V6CwGVTXxWJ+hKj1/Ns17/C7IoHPIzK7
Fxr5fb6/+PmiaS7rNQmUu1rfbUsHJOM8XCQ5XAk7eDyS6hcsmn9db4XTgUWZ
OzfsiiQtryfk9Vp+RMiP/EzjYYrneBh1XDkLtVi0t1M0VT9X7OylXcY6LuD1
JK63F//RXqB9B54nfSsfPuBwM4oGXGnS1LXvK+StpOeta4IsXjtMf0MNuvYM
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
q2E/Rpofo0TT59Jyfu4LU/m0hOUXCNo29euRV3R+/ubonI6RRO32VvqY4iqe
me5H0Sbej1opx50w7n/Icaflprhge6AlrGcnqaf4wnpelP6ZMpwN/lm8Zf+M
Ojcv3ldAndv4h/KeQEbHqgez1xexoF1Uv+z1hfI6SXzqXTlPp2+T85T9nmC/
J9jvidCNXu8PdTLWF58tPT39xfs4dV6D+VJGzhdxTq7LYp1cl+mQXJf1OitC
nRXOXwYsSDXsW9aJkfuoUduq9E8IjKE7V75dGFIljFbYdhw1MyKSnha3nmF9
wJ/MCoy4vDkxUjTpv6N++TQfpU8fqY+APlodlMD8PXh03D2z7hliuuuIomMu
uoj9J/NWuLUzRSQX2f4sMzZZVHgaeOfwTD9a6FS/UP6Z0RTimv45qmp2v5zm
ra19NpgCnD4VtGkSK+LuSz4Xdw5a9u86nmNv8OB/eW5iuo9Kx3gfVfM/Av7H
m+sAF3Hd1Hqum8J8j2E7x3wvJO1QsB2KjmyH6v1l8lxM+PO5WNbbi0lLb8SL
R4XTJgx1CxIdvxc41SDdhyK4X6tlv0Qw96tDmcXXlmUliOCA/OvHxAaJyMyW
44ckxgquXxJ6/RLLIU0O7FPodZg2tS37D54SLWpvcpt1PyyUcs6beHRg0Tuq
Th73FFbJewpigGkdGo3mOjQ7nheIW4J5XiyzqPH+jGO8eHA4zMrRPYjyju34
bfkbH8p/Jqv859LxYr5H0b6fuwbTqUkxV9eZeVNh5vMcz2tL5jOW6z0cuM7w
Itd77OF1X/eHl7/mpbh6DqJer8h5u7PtOOvKm4hBD+3ET44HPNkPP2c/7MDn
TVFctxnL503RvC6cYn+4iNeFuqbnvGIFn/Pe/Srr4v7hOsacM2Vd3H7TeY14
Rpx4IO32sfQDdHGX9APYv0Ndrpesy6W+vO5Plus+VeF1f7hpXSv2I53+MT2v
p8rs/ydeetVqQZaTWNiqfpGgZtGU5/b0VXP63heF7V/mtyt+hsCbZdKaWcWm
nqJLpuuOAM8BkmeqL9sL86sGnqkU+2ceR9GWxzHRtF4UdTsU2Tj/MI/s/KZA
cql1ts99KalxiVLB1om0xnTdoQO87rw1raelMVxPu5rXa6xTaJ/G9brxXH87
gut14U8dZx578a9/7r3Xofu/8T/qsWMbyXp7P663R/2zVvdO2+YZ1mvB67XY
PdqwXgtzXpcRT1rzunx9xZgfj2r50cS8M6pMrxElyn+7tffAZW8qHZbQsMei
7OfWe1Sz7BVfKu9bw6L2xhj4YXFX+mHBflj84Di2noxjhRfHsTE/vLs710gX
5cb7dstXxJtWBa1pWS8mSUSyHPjzZSynPtdFlOfzpoNcF/FTyqe6LN9Pyqc4
XhegzzpeF5CHFjvcxtGpa7DYO+89WZfxplB5jil8+BzznTzHFMhDi3D7w9z+
p/ST9Jj9ZCf2k7gPlTNpYI3CZqHCYmB0vtHe0TSf8S6/Hxzc+ThYbEy9UjVt
iAdlsf7MD3mz/i94v/or7xuH8H414m3sY7zgePuCVfeyOSq/E0u/rjju1ey4
OLK10PxrBdLEr2EfSp6obXxPh7Vrz+QnZdOEe3lDXC2ebjbE1WJDZRlX/yHj
ajFYxtUir4yrxac2GxKbZcUKP76HNcmm/p2YbL/8WeLqftZkiav64dF83v2R
64dZT8o01ZMucv7YaZ2MZ2o5y/zxPPdriWxPh7lfjNMgU5y4v6T1l+pwnS3n
NXSE85pM7hfuzU3kfrH+gvUn1l9Yy7idELf3kHE7RUv/IL4mGfyDSJX+QQyQ
/pCQB5lLf4jzZfhP4cn+82/35SUPu6XT3/l6Dypy0ZMCe57ssGlKsr6vS9jX
7ST3M6mH3M+kFXI/k9LsDH4S64uoKv2k2GEab4sq7G+tpL8l9reijPS3pN0H
FLgPiPr5DK73Hs/18294f2DoCxl/bneX6+zszYX9zoWniEAxbXbQOj/6mNC7
Xv+SiaLDvRYrlmXzFptQ9XyKsy+NeHv6+aRs3q7HbriQOTBaeF8PyvB/Hyr6
jiu727vRbbojcXrJ+CHGX/8Y8O+9IXWfqO4Ja8O9IdshpW737Zch+vM5rG+d
B5072GTHbwt+VX7z7Y1wujPnitPYl3TUY/pdh4EpYibf0+nL57+7+Px3WKeB
O0NHBohcS75u3WQTQY1nNl6xsd4DMZzx5e8fTyaXSCp4o3uK1z5fVVfQlef7
Ip7vwPOyf2gl/YPwi/58yT47f3San7g/97cAsdR+1IiAxcGqPtDLtK4S+yfk
abp/gvZCqyfE/ob4abq/IVIlD3RH8iCOSx5oj+QN59fiteSNUr8Pf5C49g1d
bnVvToz9K7EjR6mLC98nq/uVB+X9SoH7lfuk3YpBbLeXpN0Ka2nnQrNz0ZH3
5/uyPWN/PkU+V9yRz6Xt8rlionyuOMb3Oj/wc5eZ5tGiBOfR2u85CPyeQ0EZ
b5Mrx9vBMt5W89Fa6ikwHzHvuvM5AuYd+LzNdgU+wds11h+88T1t0b7h3W1T
suOreZusNnlnx1f35X09sub7et7yvp6+7yGw7xEq/TldYX9+kv25th8isB+y
KHFxznZfUsk5Z1aNPtu9xcMRTuUK28ZTnea1CrxdkkbtXnz5lbOVj4j8c/HL
MyOSyM70HEfs5HOcLnwPMSsgfvf1MB8R77q0/0azJCpY37Hfjk7+Iip4YKM2
IkJ0nBE+8N6lRyL13sPDkYeS6fzvoR+j6wWIZIe/fAcVTKCrZ5pNGdvVT4R1
WGP7pEqUaFDAdm8ZV2/h9nbn7vo1Migw/oXvxinPRdl+gR3Nz6aRc9vvDf69
J4jz+cDjOcr+O99xn+iDdj+rNd/bqs73jEIYR11iMa5XrMJ1iTZcx1iN6xXL
M871GKTXYxzhOo29EqcvdSS+z7SeUEzlesKRHAcPN7nndcjyFNdRoE6tHtdR
VOF6GJyrt+V6GC++t9iO6yeduX5yp+m9fvX7GBZ8n/Efrv9cxHnBzFPbV3bY
nUC/lzUa1DZHELnnabqp+kt/8jX9nQ31+wCop/3NdaFTuS7UybSelrpyHWmL
PzYZ6ku35ZJ1tq1LSTzEtL5UTGI5vbmusg7fW9zFdZW4J9VE3pMSuCflLHGq
w/enejPO9ZmiNtdnbmI5pU3rV+k41696m9ajiifMJ+pP9nO9QW+uN3hnum8m
sG/G46jqGTGOc93cik99HSfa3T+TGLg1mJrbP2u4p6OX/rsfhN/90O59E+59
ww7WFN6b/+baSGpVL7l6/Ae8h1TVZxLqM1FHxe1FC26P+m2038TtLU3bU0tu
r71fRuD9MoW53ngo1wOfYT7dY2Udr1t/Qx0vhReXdbxdy8n6w8/Wcw11j0dq
5jDUH6L+fJbPkpwtqoZS9R8vYtdNewp+hP67KOBZny+4b9W1Ve3QR02CqHbe
46VG1/In9y+yTrVtNVnfu3mInI/zuD6qJdc15ee6JsjpJuUIyGGcejBek3Gt
PopQH4W63Apa/ers2YY6ZDom65DFHq5D1sZFYFxwv2OO5EeUYX6Oy/pPcZzr
P+ty/Sd+16Jb2Po+ETaBYuTgMSGzegdSJelPlF20Yn+i1VET6qi1ehuBehvc
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
X3t/UgVv2SeSJ/Gjrr3kSXy661/yJH7KjUfyNOOXPInvc98reRKf6uSmujcj
N8mZ+v7ujq6Prr6aKjkTv5X3uTtP3gz4+IhXKFb/jXb9Ap444s3O7Tx8+s5x
yZn4+xXmN67Y9bDkTLza8a3HGo6IlZyJny1QfWTEiU2SM/HSU/LPuBIxTnIm
fsm1l5yV33D9S85mPJKzGb/kTLyi+17JmXgnJzfJ2chNcqbdWvjM/qSq956W
nLUPLDn4XErYGcmZeLNzkwcuD0uVnIk37VHyjQG5kiRn4unfvdp6+q4jkjPx
5bfGjr6asF9yJr59R9W5Bx8K6vmIXx64bnpy4y8kZ+K7XHvJmfiPrn/JmfhZ
N56AXyl0/JIz8ebueyVnIzfJ2chNcqZ/8emcLo02rUuTnIlH5lte8VKegHeS
+Otxt/u/EXVS8iFedNXbI/tu3yr5KL+Ub0jkrPM7grpG4IXRnt9FvL3rX99F
PGHkvimTv0/Td5lx6ru4bxf4oPbnjdLOSB+I1z6RUTjb64d0Tibu6t63Kh9D
HHyDyiMSR32pvpc46j/1vcRRz6l8AHHyJ1AfiFfKzBdslT6orhnjp3yI/xIV
G1M144zkQ7zr6afyZ+t9Tjyk3OdrZ8b5MzS/9E/P/VV+QosHU71Qfs+IaJdH
TlVcle07NO0W2TYtzgvlu4yI/i6z/jxecpZff/vJOyNW7BbO9q4Oaq/kz/bj
yfsHnO1nu3p4zQvbo45XcTTiqL/VvBBHPa3WKXHw3Qnn74LvTvPF9r3xXcTZ
/jq+i/PI9m9CbqE8bhHRCyA3rgu279r+zxp/PBrYT9UBFeySvrx2huaX5wDg
ml/iGZhfzhfxjhgP50VxSnwX5U98gpEPcfD+SQ7E+6Affi/xt/C7HD/9x/ec
3spuE+9i1ilx8HlqPMTBN6jxEO+Gfvi79KPXwO5RzgaXnVF81+xTxOeYfYp4
c7NP6R6M2aeIY19Qfp34ObNfmH6kP8RbmP1CfEhmvzDj1/fy3NDJ+D/E/zH+
D/GKxv8h3tL4P7qPbvwf4utX3B5caGLg/xA/b/wfnfuN/0P8ivF/dG/e+D9m
PJKzGb/kTLyS8X+Idzb+j5Gb5Mzz5TTjzxP/1fjziucZf554uPHniZ82/jzx
GcafJ37E+PPE/zL+PPEE488T/9b488TTjD9vxi85E99v/HkjN8nZyE1yZtyi
DM6hlCfx8ua8KR4sc94kHmXOm8Q7mfMm8efMeZP4DXPe1L0cc94k3sWcN814
JE8zfsmTeEVz3iReFudNylN1E+6c7pFXjufT2idmd7pa7ah40IiXXf1z+crp
v4svjHjz7pcXVHnogHi7iH/93q+R1xbwfeqdwtP6DF3xe8Eovzb2D+J3wOtC
fiXi9397sEfGkB0e6raFl/hhU/MyD+73yFtEPE/vXu3uuX3IIx+Qzule0909
34v3yIOj9lG1xk+pnOCRt4V4we1pO2JKJnnkfeO5Mqn6rLf7zVTdlfC1T7zW
fO/FQ6pTFz9fw9G9S4/dBz95d1A/ePKBdsP6bOY7Gjq3VgIPHnmdiG8/Pzcq
JvygRz4m4h+tKlglrMYRjzxHupfTJm1JyqcJHvl9iLcOi+w7P2+y+FyIt3s0
tXNYRor3G+qrxCN49M1s3ZcfAY9SwFvzc/HPk/r/dUB8asTjGzV+8vnCO1Rv
QdzDfTfyRhHvW6h9+QMrjnrkYyJeucymJyv3ubsPgseH+PnuUVc6FUr1yJtD
/Nu5r2Up2+QU34XRuSl7u7rPfb3qpPhoxAP9V8Lq8EppXij/Y0T0jUx/L8PL
ZfznSfCfQ/n7IqIXw9+rZ/xh8OB5vG9DHPx1HvnmiIN3ziOvmX4XOPnFiINn
zKtl/NVLIX544JfOxThDeawioifgu0J5l+jPZ3ihPEER0Y6PIkN8jvI/M+tM
TorHkHi/TL8x3ssLu0H8H4yT/H3EweMn3j3VBbt73OJTIw5eNfGaibfP1SWK
d4z4I5l844fF20X83Ux/MkX8R8S3P5Y7rtqVc7qvQv9zBPonzyBx8A2KH5A4
eAKVhyN+2eU3g3tiwGMzvyvgXVJdf3z4V40OnRWPGP3b8ku+HpKvf6p4r3SP
Ye1LM47MPy2eJuKtK+8ffOzFdPFh0W9M21a6ZOuvgvVCvHvC9s7b86eJJ4v+
z7xBlz5Z1CpFvE7Et1erX3TVkpPideI+nnVIVI6Es8ke68UV/9mXvULD1EPi
XSLeADj5R5TnHBbb//aw3eIfIT4Z+AnUqxE/eaNTufaPr/Z9g+8Gvgt1XcT3
Oxx8iAF+Fjj5jHRf342T/CzCWwAnjw/jHhXdfIk3SnWFju9I/EfEwYOk+kLF
bcBfxPpC07/4ZMU37PQH9ZGXPIPjPtsl6W2FBUOmTUy6e55CvSnxVZl1YolY
1xelnxmNzpeoMidddaJGP1UfTBy8WNHkbyIOHief96WJP4bvJQ8O9bMV9CSL
wak/5JHRuQ968rTBvwaOeReeAT352eDbQvVK6wV65V00+GXg5EEg3hB68oDB
WwMnn5TxT3Rv3PAty98zeRnKMdjfUafKei/iTRb9uHhmxkHh1OfGkOcd1P2w
/RMzEtakfLVGvCrEG2TNfrZ6rpXCdQ8VcmMdMNvPPr2k7sH0JaqzVL2w60c4
+0mAPMlfxvbHnR/ikV+D7b9x80teIeHzgfdFXaPixoMKzqsUlYx7IAG+FTjq
L7V+C38bE3M4R6p4qdge/E5+AdRFid/U8Y76hXH/gTj4Tv1ykI/Fi6Iei/iT
6GcO5EC8ratzVn0z8RhX5yxeDPGX475hmMHBr+WRd5v9YB8hL6Hwtc2bft3i
xzPi76ad+WLgs8eS6p4V37Tqpt0+5WN/CeRz+9bPp9NO6V6i+KWw/5JPiu3B
K+XPhF+quDTkQF4q9gN+Kt3H1j1+7L+sr1VdUo8i3p6njnnkUxOfDfyHbMZv
/AL+FXmg2A/4oMTfRNzxwKwUfxNx8DiJB4q/Cz4oj7xFbA/+IvEWqX4E/ZO/
if2Ax0n8PmwPnh/xGeldKbbP/I98RuQ36luT/D6Kl2KcCca/Bc+P4sDE8Z6O
4sCh/Q+MJp8U/TTwSum9ltB470zxJbE9eJN88gQpvopxUm+Jv1p0e5vWd/WS
704Sr9o2e8aNF9M0fuJ490d8WNwfbzleLL2jw/Z4N8cnHxbbN8J88bv0u+if
fE9sD94nnzxHxMF3pHpx9rPt0DdHiq1PVFyF7de7fITiKsTbLq6Z8euryV52
rF/jZ+o+Fdtv6li36rK4vZIP8S0m/0J8nMm/EMd7Oj75cYjv5PrFvkl8Wkh8
+6TwF5B/YfyEeDt8F+MnxKOQl/Hg98qfcXZJ8Xbi475Kmf3O0GXi7xMfD+w/
78mwPe7L6L40cdwL8C9jnyVeAnae+ynxfdcjT4WX2uF3w35BHHzd4iux7X/E
fkEcvE+Imx0SfmVA1Szbx0fS35Z/An9bPFDElwAn35DurWIfofzZf0fkDXGv
IODhdvss7yEI3wWc/Kc8d2T7qN/1xbl3++Q/1T1CxCUewf5LvDr8lrzYf4l3
c36IT14w4gPhn5TA/qt7Zq4f8aWK7wR+CPlS9T6MG6f3PPxe4utcXEU8oYzX
FYa/x3iyieP55AMy7cWTRb/oqxFT/LWP7BLO/X0W5ot6Ir5b6AnbE38D+kl7
qPvQpTb1ut4rTXaA+HrYAfqTxMEjpPuoxLeiPfvnPkJ7S7+L+BbYMa4j4uAX
0v0l4uD907ogDr47fS9x8Kqh7vyc8OoYD/YL4W3cfqHxcD8Cf5HGQxz8gZJ/
6D44RPNFHHxu6p/2vLP5XuLgD9T3Egdvnr5XeUP0w3mhPfwV81LD2Dfyp4n3
Deu6MfSklrEDuG8r/4rtizj/WTjb78B65/dyvUxw+ix7SLwRzh3iMQT+Ms4R
HCfxr7EuuI8Qb+7OQfIHOL+TDnQvuiDrOfm3nJfuJa9mm9ZMuGdw6QnljH70
vZRz5PejTo1+8JjyApTPN9hfyC+v9jiP1zX4JuDkSRd/0sLxVztUOcP3UYJ3
XIHznhXX+5BnBjZbsz3JB19G8A5Ppp883yNPBHHwRYjHjes6GuOpZXDGE/je
DMcT5sYjnjjiH2T6/3HeQIxH96eyu/GQh4L6E4m6IPifwv8TUhe0VvXpmX8c
tRp+WnRYKL4+jH4s7Wcs6oVo3ygH8GPwHW3Zz6FOnh7fPaJeTc+TrWb51WfF
8049mepwxvN9M49+Msaje3gYD+8JEF+K+qXUh8c/cnPvyeC8dk+FM4c3BHle
4gs/zVhbJSxZ/P7Ey8L/wbs7AS8I4o20k5zfXG5fkL7pHjP07X2DUz87nEmq
PnTxecnnk6p+z7IJZ+V/En+4cOf+O7qcUfyTeGHgeJ9J+AzIE/e0tb7mufuV
OtdzPCuxHkPf31IdDt95Cu5DYL2zvanr4DlauDe//N48r51TXYfeSYO/yvFY
+8B8Jcf/wqJ/Cjd/K1L3OYnjfq7Pe7nEcT/X3zWmUZXxvVMlh+71txZ4PSrJ
A3+05ncF1jviupJPuov7+XkMjnig/BZT16T76sT7Yl0vMPhQ4HVMHJL2hPpG
eXJfpvxNXYrqo/i9HVAXl9PE3xCX9pLdepF8KpdP+O960X0exc9R18G8D+3D
Ctgf3l8iXvvZ4aVeO3lQfBDE0yLW595Yer7O16H8P6vDmA8ivgzrmvcwiY8F
/w/tqviqYTf6GLwm8HmQP+e9Zd9X3k8rk6J7WeKlwP1Nzq+pa4IfGNStIX/k
9zb7JtaL4kjG7vnIy/gmL6N34Mw68sPMPrgeetLP7He1YWd4n5Pz61+t5b1a
/WfZc+K4J8u8rfaRMeA7xbtHwuuER7WftDRKfDTEr7v59fAunezSDuSbmK/R
u+6wD6/AHvJ7P4Q9ZDyNeHHYPdpn8UYD31TmngadG10QXuXG4nOHc2SID4jj
vAR9voV4kepOM++z7yCfl+zDTtjPMLO//wT505/nvLv6wzStX+JvASfPEcdz
EfVUjCdwXh5APepSnPvEr4bz7LuImxGfUaD7ncm7gnpg4u+i3pXvXdlz9DDI
gfhHkAPjFcTzYjx8X8qe3w+Yuq8mqPuaZ+we/Rz6h/a8QzsZmpeM4/tAwgcA
J28F5wv8FT75EzVO4NRn8SUbfSZ+DfpMP03vB+J3Fxp8OHC+y2j034f++0b/
/domX/8H8tSLjF69Cf2pY9pfQ/slRt/eRfvQd0wjov9E++pGD09DD7ObfFNT
5EdmIV5q9YT3mdm+Sp7ig4u32CH7Tzwd9p9xTs7XHvDqFEM8065H8GsI/xZ6
3tfYedg9f6OzA7Ibz8AOdEU/HP809MN3qkwehHkTz+RNpLcmP+Kdwn5K/Gfn
f3r0e00eQf6SyTvoPGXyCx7fQ1KdNvKSeQ1+Hjj9Q37vevyu3pdlfM/V2+M+
886AVwby4Ts9jLfcHO7iUTy36t4ezq3EKbcZyD+yPkTv4+GcUgfxIvYThXgR
/Rbd78C5NafJR0M/eT4Svgr+A/nNKZ8RJr5KnHXdXKemrkDnYtqfCcj78J0Y
W3dB/9bGpTm/ph/NL3HOL/lKTJzQ72nwbSZ/Z+IPwk38QeudvwveS68a/G3V
l869kljzviB/qnv8yKsyXkH9OZnJY7nDp70y+ga+hqDeGPuF7l/QXn2NfBPe
+9R+0Q1yZt0I8beWfOA3apHk/Wby/pWQ9z9o8IrA6ecTPwc/P4fBeS7Au3T6
rmYln3jjj1XkIw6+q4X5LuoD6+fJz6i8mOMDFB8rcfA0cr+T/Ldsf6Ffsxr7
JX/xvmTKJ1L7nc7vmbzWWodaXytrnCo+6LDWldZRGPnezT0g7u/49+qnDHhv
aCf1/ue5gZWX5ksSzn4YDz9s+m+O/nlOlz/crr4/uOZp5Sn4XW8jjsT4ku77
AEedW8B35eIAXnHMC+U2CHmTXJh36mGlGzcScyZe8I7PKXO7Ya+LWtdrFhb/
cUf7gJ+X8/6jubeldWfubRG/au5tqe4CcQ/wuMlu50NciOdHjn8D/NKaBl8B
/KiJn6yBnaT/T/mPhv/P/Z14ZezvqAvVfNVx5z7xmFDO4CNl3anwVu78JZzj
HAw/KpdZd7CHfP9SOP3w3MZ+Yv3K/6TcWplzn/I1GCf3L8pnJvYvri/xwqLe
g/FY4omo3+C5WOcmnIsnm/zC7SdcfiHR6ZXs2FqnVzpfiB8X+QieL8S/jngU
48DipUAehPKhPj8DfebvUp/5u0tM/7nRP3kzKbcHYa/2G/wC6wBRJ0nc5S8i
VT9JfAhwtqeeNACe3azTV7BO5xl5Zod8uL+zH/AySX/Yfi30R7xOGE9WtM8O
3jT20wLjSYAdMPPlP4o4jM47GOchs+4QP5HcxKsHuR0y+N/A+5h4KeMbi4ye
ID6p9//Yzwn087vBs2Ie+5g4+XDEyfuaeO9HiPc26/ZbZMNw1WF5sZvvPFHr
wk/ikVe8Ljy0f50j0H8PgyOeLPkTfwfyf8Dgo4Ez7sFxLkXcg3xYxFcD5zmC
+t9gafsFdT9OV1yFeCODc94bAl9g4sNYp4pn8nfbIJ55DHX77OfCrOIjOy4/
q3dhiZ8ETrukePuFg83ffX8j361X+zNov9DoA/OYR41eVcK838nZ62ypfIck
nx+6tc/XZFWk6iX4Xa9Cn3Oa9cg6is04f3E81XD+2oL4jPKMwNu4+I/kPATx
n4cfvJXWvUDgX2VpN/PU49WS/bzGPnTBvHN/F1/Oxqdi76+dLD1h+95o38vo
2zDoW08Tx+uGOF4e4w9Uhv3MZeTzGuTQ08TP0Y+Xx9jhqugnt5Hn6+jnw+yV
fo+9FvC4jzq89Ob5N5O8R0p/M61TzbOyzxVvzepUvkCqV2vI2P/iGs/r3T/O
xPMumdH/sUKBvRrdokq7/hXP+sUcLvmPc7iXs82oDn9UDvQny+CGJ75/PM2f
PK/1qI49gjjbS+U3NIpqmeHNcHhwDxc4xuPZ8UxCe/YTjvYXY3rNub9Q4F+d
z1Kk6ht3x3lw2cwa46qfDfjtNj2dOCpvqpcd42T/dwa5ceZyuORzrxu/d/vV
ywXmlgnm5eNdTc5sfuScVwZy4Pi/hBwm4nuJt+Q4a4w+XeXv4J3VjpPK/5Tc
KYn9+6Z/P8O1D+r3XHv/BnDOb2fgybvz91n5TGBPptbte+xsyTTv851Ls5Up
H/C/jvmyVdy+opu81sWqJ2yLDPTq90UNSr/Y9aL3S4fFq5c9kaz+G63L5jU9
utFLnn38UJmnkjX+JTP+znI8v/rxbT97ESdk/e2q8X/WLF/xYx9+he4B3efq
4f2jiP8Q/+VU0UNNxk/3n0f9HvFuvaMK9auzTnlDnhe2uXp7vw7qJ/XugavP
B5/1CuETUd+SDXUsxMuhjoX82sT/cXEM5cHpx/Zw9wK0nyp/4e4R+Ny/qA9F
cf+C/NHEwSPt8R018ZHjPgj3Ndl/3B+5x8XBpP+4j4/67UXS/8uoi6sKeRJ/
EfV1iP/4Jv7j14U8Td2X8hf0T+LcfSJ/MeRAPJe7f6Q8Bc+hc9x9JR/xeeEX
3f0m8gULr+ruQ/EdYuFjwnIWXvaL3sMO7sO6e1uq/+f9i/bunhd4bzOEv+zu
hTFfL9xz98j4zoHwse7eGd9LEB7j7qnxPUjhz+P997Y4XxP/yOmzvxjxZOIj
nP57/+BdB/EQu3tzeueA+EF3z47vxwhf4+7lMR4uHPf4vKPOH1A91UPuPqCP
+InwCHd/kH5d0N7dN/TJGy6+THc/0ScPuHis3X1GvvcZ8HvhffZ+iBvrfqiz
G947iMcST3H3KMXjTBz3LsnLL7yFu6fpIQ4jvJy716n37Il77h6o+HkVvwV/
Mt8V0LsomfZvdthCU6cxCudT8ozTPu9HfTX5JYnfgt9LPkHxHPM+F+6dqc4K
9874XjXxzrh3xnd2xYuM+2J8Z5d2G+/tenzvljjevfX4vinHky3z7yeF8d1W
1UVn1oeMDuN7pXpPFb/bB3Im3hbjz23ieJMRx+N7vbRveLdX7xTqvhu+V+9q
Y7wxrGOHPIl/Ann+bs4dheHf6l1q2LF6qO/iu+m0M415rxP7nHmv0Od9Ru4L
WxCf2WviPxGI/+ww8Z8NiP/sNnEeH/3UM/maW8jXIA6v79qFOtvdJq6+Cf2T
X5vtwbOtd3mJb0D+he9Nqv4f8g99b5L3PeOlb/xdfi/5OnV/CvqP9SU73xD3
dHJiPSofjfVIvnvu1/MejFnY88oRrx/0jXryBvQN77EFeSV87yTnL+l74+Av
0f+gPzMqqWDHSSuDe0TEf3lv5NYOOeL0nXr3af7EbPWuB79HvMDfq7/9/ZF9
AT8t8Ftbrz547qfgfQriY4u/cnpYxhqtB/G84f445Ui81eqhk7/LFeRlid/8
ctzCjl33BTzPwF95LvbKH0V/k34TH3YwambBp+K0f8ivi0xZ8fGe4J4z5TTu
maaVqzc6Ftx3Al53+uESzQYE73cQT79Z8YOzzwfviBNv33R94RZtg/c1iN9M
3/PrJ1ODd2OJl8f9cX4v8SLDnrwZN+KAvpf4ldrTOm5aG/CFEn+hR8Lz34w6
pu8lnv9ovZgS+4J9Re9urR/Qbcq2IA5OeXyfsGR3sfFBfpT4csTP2T/xD7Pn
efapogHPJ/HfLnX6aGqNf70vid8pN/9MmznXUwP+VeAX5z/06s0WQTyd6/FA
/r9HHJwb8HaF5k1+035GvFimv7rTvBN6d7/4n++ERkSXwzuhoXzuEdH50U9I
HeFdfDx+V+/IAP8V4wx9tygimu8WcfxcBy0y4yRBHQbxKY7fXuMnPrfb/Bn/
CftR4yQ+Hu05TsVz0D/HSXxeyvunwnIF78baOmGOh/hL/5nZJb3I+oDfGHg0
2qsuH/jEdR0uL3g30BP+uxlxHZp9dCqYd+IFO+x7oVCjgF+a/cXem6dUUtZA
r4gf8VYVy1Y5sOP8dxVjwqp++/R67WfEWxz7Y/2XUcH8ib/iv/953+jPXBfN
XXvpB/HM9ndm670A4sXc78q+UH/j3DjVL3F8V/D+BebhYScHtSc+08lN/97c
IxZOffkG8lc97r/XwajgHQHilTG//F3KtcVrIydfeybIexFfYvSHeHOjz8Tx
vliQ3/r3+hs1Ve/iEf/Q6DnxcUbPFZ/E71Ke/Ps/nD2RPIlXcPZH8tf78M5e
BTzwwIc6+yY5Ey/r8oCaJ72XVXNLmz+PB/VnxMmnwXHoXW5nbzV+6m0eZ581
Hr2P5+y5xkO8sbP/Gg/xG26/kN4Qf8ztL8F7Q8Cr4dxH/Seeqf4jF0j/iWe4
fU36RryN2wc1j+IdcvtmUPcMPMzts8F7IsCxL0s+XN/T4K9SPsR/cvu75EN8
tPMHJB+95+D8B8lH77t+lelvSD7E2zn/RPpNPCvOg5Rb6PsS8yQ34sOcXyS5
iY/I+VGSG/EHnd8luel3nZ8muRHf4Pw6yZH4J84PtO/c+Zfxzp15F97/7H+/
C+//gXfh2Y/yvKYf4p+bfrRO0Q/Hx3n+Cvfi2T/n8wX41ZRzqL8QvBdPPPfZ
3rXzF92gfVQ8yumZuORPfP3sCec/OR5j34XnfXDZSY4rddb3zfONCeyv8nrO
rup7+feTnX3T+Pn38EOEc7wFgfN3ibeEfea/J+7+/VTxY/L7HL5Y93KJf4r7
m6rDBj4W49Q7INDHU/he5TnQHnZb7bT/YH/h/BLnuzP8XdXxmncktV9Bnoof
AYf8pf/i2cO7cnrfE39/IeXaoEEpMZJzqH8XvN8a6t8FekU8r9Er4jeNXhH/
BXqluhOMa4vxu4g3MH4X8XVozz9zXFOwb3L88gfM/BKfg/lS3BD9NIZehepT
RPRD8JND9Ski+jP41cT578ZgPOZdeP9hvAvP7w3xu0et0f1qfnchtA+1pxHR
fK+Hv8v2g/G+vHj08DvJ0BO954XxXMA7znp3G/K580bB32u/GPAq8t+Rv4V/
Vp0z+jHv3fsfoZ6f/fLfPQN95vdY/l72Qzwc7fWODP7dIJwv+GflkdGP/A/M
71z4b7R3/J3p8BvNu3U+1pH6UTwN72OyX45zl3lHkvi5ih1z1s9xxr5n6i/E
OuX8sn2pIi0m778dvKvI3+W7hHrPEd+L/oP8NL5js1t3krvhUdG88+/PY5xs
R32MgNw4Pn4H3w3UPgF94Puk7If490ae/PtSqCuj3vJ3m2A9cpyc5wLQf52L
MK4i0E/x5vMch/e/9N4rvpfv6/HPIefpUWui/w+L8ma7
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnQXYFsXXxp/Y3WfTFsVEsREbFURRsRATAwtBysIuFBVRsAtRFBEVFcVA
UCzs7g7sQLEVG1GM7/55z//6rovlnGd2dnZ2d+bMOfc5c94V+h/R6/BGrVb7
Nq3VmqJ/ZLXawqK7tGq1xYtabUPxy+W12gZlrbaR+OXFd6pqtY3FtxO/iOp0
Er+s+BN0zWbiP0r0n9qbKfKmyiaIT+u1WiS6hNpviv9X5S/rdyK+ITpUv7up
/se69nx16B6VZzo6il9Tx+LiW6KLir6vep10v01FV9L9n9X1C6g8FV1WD5Go
Xqnfr+u4WkdNR2+VFaK76Gd/9eEm/W4vuq3qv6Xy+3ScSP9EFxJdVe2vo7pL
qv1L9HuO+G/Ux5t1XCF+CdG7dNwofkXRU/R+ntO1t6r+MuJfEH+b+Nt17SDx
B4tm+r2Q6v+p+x4n/mnxE3WflfU+Z4i/VPzdausm8e1Fn9Rxj/j1RAepfl+1
8Y7qbqH2N1cbv4q/QP3fX8fGep5DVeda1T9Z7aykczeIP038ZF1/ufg2ogcX
5o9ReSr+B5V9qLrTRSepfAXRZ9Xffjp+0O9DVW+c6CzRJ3WPJ3T00rnbRafo
WET8GurLDPGri/bV9Suo/tP6jvuLbyf+KfF7i9fp2gzx+4rXrWsPie8jXrev
PSZ+P/F6tNoj4vcRr1vWHhD/Z+rvN0/0SJWvqPJnVf6JGllJ5R+L/qjKb+nc
e2pstvo0T3V+17FX67+hWLtX9fcQz9C8Q//1E7+I+NvEHyJ+afGPij9Y/FLi
HxZ/RHiWZ8TvJj4SP0X87uJj8VPF7yqe+XOz+D3F619tuvheLc+nW8UPE99F
/AfiHxQ/VfwaoiuXLl9XfT9S/PNqaH3R/dXh/fQMfZg3eml7id9X/PG6Zk3V
f0PtHCe+g/jXeVe6rlKdXWvu87qiM1U+WPyq4l8Sf5j4tZmP4g9veWy/Jb6t
3t3f+v2F3tvS4tdT+erqz4q5+/aQ6GoqL3X/O1VnZfGF+K/FX6wH3EbHBbr/
R6nnayz6geospbL3RZfW9evz3XPLC+TGA6LLIFPE3y+6go7O4h8UPVl92UT8
h+rboeKXEf+4+CfE38274vvzfsQPp0+6z8O672z9Xk19eUL8N+J3Er95+L26
6FOiF/PtxU/Q8ZB+n6tr7xXdXOU3ij6j4xzmW9Py513eRcOyYQfx7zJXRGfr
vl+I/47+i1+IMaffB4leqbqf6thfx1yd/0z0N9GCga22ntU7OVvf9G2V36lr
Xy/c9ma8c933MZWP0O+/NcAu0e9H9bun6E+iT6j+VWrjEfGfq86c3H1cTG1M
TN3Pd5BJqj9Jx/36fbfOfSI6UPR03XdW3XLkHJ0/tunfqeibotuorV11bmfx
41R3WuHn5bnv4LvW3H5D5T+JP0nPtIuuXaBp2beD6Iei3XXcq/pHqc4otbOs
jndUNl1lJ4s+oGOWzl2iZ3mQ9yX++tTf5DrRn3Pfl/tfG+rvpd/f6dzT4r9m
kqnN93g+ld0U3vl1Kr4l9XdEVj+j6//lnai9mSqv636ZyvdTPxdq+PeLqtMQ
fV50z4Zlx4KMxdTrxifInLrLkSdf8O51bFEz5Xes43sd3+nYA9mRWi5Woo/r
2JZxkHisfRvGWxTaYS2cqP5c23QbDxZuY1v1uQMyWMcyrCU630/9+1H8eXqG
Q1mr1eZIlZ2hY47Kh4n+JvoWfRP/lI65+n2Vjl91HKrjpIb5Z1RnQt31D9Ox
gMbuTLV7gugZovvr/I9q/1Hkjs4/InqKrv1d/NY696T6ebToy+rnTerbfJX/
yRqqOpGOsTr3iuq8puveV5t/6dzfzEUdT6t8eM3fhWu49mP9/qfu77WljqcK
16f9TXX0ZA1CDiHrdPTW79f0e3vRuTrfV31YJqz9ezQ871j639D9/2BN13iZ
V/f591gXVDcW/7b4BdW/9/XM8yuPh6bKXxAdo2sWUb2jWK8z138p9Tf8JnzH
H1XvRb6j6BC1sSzvRu/tIPFtGUfibyisvxyg+fKI+GHiT2U+qk4f1flBdZZh
3onvp/t0CPrOjvq9pe5/kX7fxporfoqO8cgJ1W8wPnXtVzrfVvxuqn9iy/2i
fEPdY0WVdxKdX3iu3ST6aeFvepLoybp2+Yb1s3fVZotnET1T51ZgnOjd1uu+
F/rZcJUvJ37twjIL2bWw3tupKlu+brm8lK7fibmiPixVWF/7ifVZ93lTx5f6
PS7Ito10rFL6+/+a+9lPqFvWHKo6e+s4XWUn1i0TaPfYzHPpWt1nms5PDTJ9
FWRdGA9P65rTGpYtC6v9pXTNl+pnH9aFhr/xmnwP0TVKy9XxOjZUu5+hz+m6
rdT+JqVl7c6iE9T+V+KvER2lupvoWLjhNegOHaMYu6r3repsUHntuSGsR511
3zvEX6Jjs9JlH6mfa1Z+9x3Ef1R4DV1T/PHq7y3iL1MfPlbbk3UczTuu3LeB
qrOc+BPEHyC+G2s3a4DKthR/ksp7UMZ8Fj9YdV7Q+W3UxnbM6dIy8E3VOVT3
+ln83qJ3FV6DJotuoeNEZBHzTMeZ4ntRVloO3yK+i/gLVH6I2t+dtU38QeJ3
Sf2uWBd7qvws8buJdtM9dtW1uzPe9ftClW+nNubrmovEv824Ux2Mkpbodowz
1gY9x068W5XvKDpC7e7NmpB4/WMd/F5tnFhYF2pXWL5GQVZvmHv8Mg5jfYtI
xx9qa3jLetNXievHQSb/E/Sot1W+pOreXLetsm5luobaWTJz/TqysWUZ9Xli
HWmhum0T6MJ1y6kHdL/j6rZVNipto6yldk7Ttb10/uvEMuzLus+1UutLgzLP
/5NYm+rWx1hfVi18P+6LnB1a2MZZjveqe60V5AI6OTbdLYnl2TV1z5Md6rZr
+GaLoss3gu6E7Kl7nPVkDojfVLSLznfWsYt+H6h+j9T593J/qz1VNqrmtfT7
ms/toX5/ot/biXYT3UzHbqxPamtr0W1Ed9CxKbI09bihL1e1LLtWUNkret/7
6fqXdW0X0baV39VWqntwbn3tA9F1C8vPLcTv2PB6w1qzvsqXVTsv67oVxCfi
Z4nvq3rHqf6rotupXmcdQ8M8Yb68K3qJ+nGg+N/13nLdex/km67/O7XOPV/0
aH3HTPzLzBvRQTouUr0B2M+69k5d21/8Yugz4geKbyP+bvEHiF9U/O3iDxS/
JPpk4rnYTW0cqd+dGl4XWRM3Qj7p2Er8xjo66jhEdbqpH+uK34BvpWNtxqno
5WrzMJ3/S22OQT8VP4/+6NmGiX9TdFJqfW1r0edTy+ZPsXF1HI4eqvod9Wy7
i98GeVVYBm8ufonUetxHqvtbbj2nC1R9vEJt/sx3En953friJYVtyo9V5xdd
0178c2r/J+wHdBv9Xl7v+Wrxy6Ezqv6vKmuJ3tSyPbu86J1qb5yOX/T7t5Zt
ll9F302MV1ytfp1QWH9rI/pHy7bGPNGjWsYr3gm2D2sbNv5c7DGVv5DYdvmz
ZruFetT/UG0e0zIG8p7KKtqt2a45uuX7cv+C9VH8FJUfVlr3eAJ9WXUWUPkT
3DfoJ9gHrMkT616nftc1eyIPRZdmjDKHcut86zPvdeyv38eiW4m+rj7lautV
0dV1rx4q76ry1QvrDt3E3y9+O/GbiP9Sdb9A5ulYMOiMq9K2rl+ZdVj0xsw6
2XOpMSDkxuTE/T2iblsm5XvVPA/3BX/Q76V1bvHKMnkHbLvCukAv8YtV1t+3
F7+Rytur7btVlhfWqXlXK1Sey8zpH1T+PHKVb1h4XCyl5zu0tJ12deF5cX3d
Oiiyi3UWnXKk6nwgfrrq3Kj7TBI/WnTFhtfTdxivdbfD/ZZuWLaDVR2uayeL
HyM6vW7++pp1Cb5Rf/Ez65bFCwZ5DM/c+Fb3m1a3bnC57reY+IvAo2THHYce
g14jWjZd76zSMvF7+tmy7bIsWEjQE85jbSvMTyxsx2HnHILNpet2DnImbnku
b6F7Has694k/prBef3jduv0xOvcUdcAwWtYNkLfHp8YuflTZceLfRLeiLhiQ
+C1Ff029Zp0gun2wj7CHkmAzcm68xsxu+n1+5m/dRnWHVbZJ0eWGik7OrLfe
kFmPG1q3HPkstW53kujnqd/pMNGpDWNM6KnYf9iNjCF0zFPqHluMt7bYlKLz
9J6vUPu3MyZEF2vadhyt9/Wu6J16J4epvSE6xtQtL7vUbUdd2bJuU4p2Tb0O
nJlaf+JdXabybQqvEe9rfF4h/hDuIzpPx8Hij8r9/fiOh+naO8RPF7+WaOfU
etoo1r3C7b+h+kXTtjw65y7q5256N3/oWWapjxfXvUa+FeQ9c35uYX3zrcK2
LWP+KtHxLetXleiXqXXqf7E71OZO2ITogSrrqmNIzbYyOAV93U/n99VxjH5v
17BcnajyZVqmh6bGFker/FzWd/XxffH3qfwI9X9HHXfr/EYBu6DfjGGwQnTd
t1VvLOM5tW04VMdl+n1z6u9wjui9KrtHx6V1y4GdVXagaDNze5HolLq/J2Ng
amFct2PAOY8CzxBdruX5enhqGxE9BztxpK6/VfxYle8W7F9s4vP1+xqd/0H0
gtTY6U+iuwc7Gvv4VcZ3kAMX1K2roBMzn/cKOvkpumZfZElq22oVla+gd/+M
+nSIyoYUHh+Mk/cKrwuMzwtFn6qMEU9R+RPiB6AHiX9S/IHiDyn8jW8IMu0x
HZtorA8vrW/3VPkeyJDS4/8W0a9yr2EfBPkJNgM+DW4DLg0+HYl/Sfyy4k/T
MVzj5SnmSmXMYgbrW24bAVsBnGoB7ETx3yGvxX9YeEwiiyaVHpeMz35Bn8cO
wh7qquMNlW9aeo0Dq8PmQq9Yir4VXi+wN08THckh/lHRcYW/I/N3tPr2kL7x
X6XXuDbIisK490DxlxbGtw9AhmNLlbYBdyjty/hX9z2+sM/ib9aNwrYSc+OC
YO8gF84X3arwPGLu3Kbxs4Te+W+MQx1Lip8r2pVvzRgu7B95QffqBKZbeD09
W/Qv+oM9XxrXApObVBjnYf19SPR2HS+L/4k1pLKe8Znqd89tm2xMP3P7LrDl
N2wa88TeHB6w0OVS2/qn140prCR6Rt04zlKV1/bhoiNSr2PgbIyZH8N7BoPg
OtbmJVSvnejelXXMM+vWM+cn1ic7pcaekJ3omX8mlivon0vqmpXQjxnLeu7+
Os7V9c2W5w12BHL0vLrlIDbsWio7oLLMpQw7Fv1nVdHTRD8WPapuvev5SONY
dB30HvERunPTtnN79JrSttVL4o8SnaTr30Au5rbZsN3ApcFkZoifLXpdWGdZ
b68N6zjr+dTKut2namdKZd1xlvj7K68Z34p/oLL8/Y55p2u6aWwMLm3XYcPh
m7irMr6znvh1dAzWM/bU+Tsq23grFrb/wQHA/x+pbCd3E3+P+EvV/jfiHxR/
jfg54vcsbKfdjK5XWIfHZl9G9+/FOouc0/GLjoE6LtT5zepez97TPZdp2DeH
fQy/Rc3vFL0QnfCMpnUs7A70I/SkJNRdNtSnfLmGdSdkArrVwoV9Af/JB9EF
1Nd24r/V+esy2y+zdN/7RHuxFtSsY/Rs2H8HvggPxsh61KNhPf+xoPNsUbcO
gi4CTkvdHUL9n3XvAaxpulc/tdUXXUV0esM2IfbgUk3jXeB+76e2C7APkJk8
xwKF9RBs5zy17cV7QM/8p+Yxhj1wCHNax+niR6vNk5q2ucH11wnvENubdsDl
Pi+8Fi1SGs9bu2G98R3dow1ttbxWLiH+u5bLl2zYP7ch64je3dzK/hUwInAh
dHJsCZHarch+HWOaltvYcc8VtunRj9GNWUPgsfFn6tz5NWNQ/XXNSgETZ21k
jQQfpn2wVPR+bF70hL9E25W2fzvntu2w8Vg7V1X/btP5m7HZC2MCfUQnNVwH
G3A1nZuiOreIbq2ybRq2E29s2G6Ex3bcOvA/p+ZZl3/UsWXD6zW0e2iTPmwZ
+PWb9vvWgjxFrsaF1zvaG1ZalrxWt82GLgGPnTg+rPfYnKw56BCf1GwHvBp0
gKTweDxZ7cwpjHWAFaPH4qd+r2WcA90e/xB6E/rTzmHc4mPANzlLcqs7Y0/X
LV/av7lxbl2POYK+t6zazfV7W53/VPW3qvn9o5ugo4DzL18Y8wH7+Ufn+jSM
cYwL+hx9ndT6f51uQsO45dc1YzlgOl9hMwQfMjoe+A7nThX/ldr6ouY5u3ko
p/62dT8nz/hN6rpvil7YNDbatWGshzrgKYNCf+gHGGZ31R0o+rX6fYzK+qBX
6/z6yCtkUeo15wx0ttxrU2e+UWrf2qWi26bGcOq888LrEb6RcwuvW+jYmxde
m54Fn8y9Hm5SWKayHrEuYaOyhuJXbFcZHx0UdDH8GOiuBxTGfxJ9i76FfbLN
0thF/7r1yNGFZQ6yB/l7Pbq1fl/Hc+vYG/24sG+3A/pdYV88eAg4XJ+68a/L
VXdswzb/OXXrJzzD2XXrJzwn6yp6RSfW/Kbf3XV164foBaNElygt+/8uvG6A
ry4sukNhfOlt3XdL9HhkW+JvyzfmW4LB0ZcFWvbFYGuPZ32RHJoqfpyuW7T0
PEFH27Tw98Jf0FHnDhZ/emrbiTUHu5P1EVunu+gZQXfiW5we9CW+b9+GfV74
vka2jIH8pL5tovs+qnPrZpYlA+qWOVPxTYquKTpW1x+o8sN5rzoOQv6Lnqr6
qzXsqzi56ZgP/Lr4rfE34Gv4NLWfAh8YdVcP9ddV3bvqXtuuAbeoG19CT2Ce
9A76A5j2XoXtXdoEf8HPs2rDWAD2AHYBPiz8x9jAyIqz1P56Kl9Ddb4oPPZ7
5Pb/rBnaQadh3QHfXgKdUtd9pPEzTNce0HS76EjEQnAO/HjlhvWPXRu2w4jZ
GCd+Aw7xmzbtp8MW27vw+U9y2yu8V+yhA4N9hJ20S2HfAbjoPqmx3gKMMLP/
C5l+u35PU3mHlnXa/+Je1PdpYHYq7wgemRnbYZ3oE9YIgj52wo4X22rZhws2
vaD4D4IcQYbs3PS6+yR9To0x5y3rQsitD9GXC/cNOx3Zs2249sLCmDZ10IO2
D7oQ9lyPumVBnNlnc1NqnHNJ8ScXtqHRYZlrw+vWs5FH9OOQoAPU9QxHNPws
8GDi/+ratuBW4o/MLT+OahhrOLLh+pcwN1Tn6Iblye5117+65vPU6123jntw
w+MMDAMsYzQ6mOgtDdvvYGRgZf/m9qEgc9qBzaQeq8R47Vv4HhcVtguvVZ09
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
d35s2TsP+RQbI78+MwbDHqDrIq83zC/suXdj23TXiJ8ZGxu8LbKNgX0BTnJf
ZOyFPQbIqbtE98aOjC3jeaZPYj8Xz/pR7Of9Wvd7J/Z6cQzrSOyxcW9Y485l
vWj6W/IdrwE30O9rM8v+f2LL/z3Fz4mNVX2hc/fFtvtGss5G3oveJfI3WCms
dbfGXu82iIxTYCuyzj8Y+7tjx98d25b/Q/R+HSeiq2a2z0aIHq1+vR57fE4M
Y4CxgNwFA0T2gv+BoYCf7BdZD0AHOCzxPGeOP9M0HgEWARbFNeBRSyfGsMDE
aA/8CD38s2AfYhveF+bRWdgWqv9v7P2uRxEro7HzIfIsMsYBvtE+d/6Wh9Hj
gu5eik7W8X3LsUkDE9+b+95Q2daqRC/XPU5hnUBPrOyb/L60jx9ffy/xWzIO
I/tYjqucc2q2yidW1kdz0T0zYwu98e+xFkTG+66rbGMUovMj4x0dg66zUxgX
B/EskWXyuNJx3VeUtsvRw9DBDhJ9JPK+R+JetkQnFN1FtF1i3+a54j9t2hex
VGQsCRzpi9TY4RW61++RsTBwsJszY6eTMmNd6FjoV7+IH5Y4/un6wt8TmXAm
fWasM2Yr29J/lt7LA3YEhjQvMqYGbnBSZf/0HvhBVP5V036JU5F3xAyq/BT2
YIr/ovRc+Bx5nvn+ZejD0Mo5Nd5QXzarnPPo/dKY2x5q80Keo7I9kIleUtn2
/htfRGZ8n7isXpVzGDFOdqmc1+k+8VuojRQ5iFyJjPeBoWxfeY/0narTie+Q
2Ae/Q+WcTXdhN1fO5XQ3+2jFnw0uIH6C2lkzMi6zvq5bNnFsEHuZ2NPEsxCr
R8wecXM9K+fvmE5sVOX8TY+K7x3ez1Pi96icq+gx/M+VczM9Iv6PyLISOblz
5Zwg9+aO0yZ+njj6MZVxkH/QmypjFg32eVTGQf5V+djKuEZddDB5ARJjwmNF
1478flZUvRXFPyd6WWWshGRaO1XOnXSP7juuMlbSFJ2g44WWbepjK+eB+qR0
zAaxHCeAWVXOxfa5+PGVMZGY/S6VcZOIPSiV7fC08h6AfcJzXVUZ+0gqY1fY
UdhQ9wf9HD2deACw9bXV/hmV7bcfSvup8UMPybxHAJsR/zCYXDP2XDu7sk3+
K36e3PbvH+L3031mNZ3HrY/4RRPnGzo/dzwqY48+nIU8FT0nt13PfDk3d0zB
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
yRghtxnfEzwQXJCcqPhN8J+QLxSMGqyaPWXsSfuHuM7I96D9vyPHneDr6Zd7
7wBybMnceZXJVdwovScO2XhAYmwRXBEdtmNiPfYy8J7EMYC7R9YteD/ggoMS
Y4PsI8aXzB6rPSLPE+bIWZHnMPOXebNymDvkXCKP2JWp51/7MAfJo0j+tPNE
T46so6CfNHPnhUbuxbnzEiMnk8iYFHjUibltIuzTSYljHLvXnFfozJpzOA8A
K4rsiyZXJ/nH2mTe+4nvnDhDchCQi4CcFeTI+hmZrPe9YOEcZrdX1s/Q08jd
xNzaPPH8ArvCrwB+9RK2QmJcZiFdO7/m/BUHRJY7PC/5i5CNyEj2+p5dc95p
xs7MyOMnaXlv5o7Em6hPk2uW4eRAJqZ1cmpZuGKQh+T+Ze0lV9CNKlslcXzt
gNztsCbuQH+Drsu+S7BD8NhtVNYh8V4MZBJzlXlKbqOzas6/x/hdLYwx8tPi
iyD31A86Vk+MaW+I/Ag6z72RMUfwRnKnoyewp4T85/i9yTPH+CeH3G1BfySe
6KnU+ejJG0n+65e5L1gB62Vk3AHMgTxExCmzXrD+7x9s5MVy5+sGhyEH96pg
Di3nKboyzMeVdK5rzdhRnju3Oev1K4n3I6B3oQ+hF7H2HVU4v9FzlWU9Mh/9
Ya/c+frQGRbHD1cz7kQeHHz65BS6TMfguvMRkS+RXFrElpA3h1gIcg0dUTh/
1bNqv8idow894ezUuQyQjQvn7hv42F2R5+2jYc4wd8hVskjuvQngcuTTYd86
e8GJ6+PdkL+ZdRu8hrV7odzvFnwvC/IBvXTR3HnOwfR2zp3DEPytyp2vD72F
fZq9A27/eeX9pXnpnJ7kzyGP5FmF41jID0AOyZVVdqJomXv/F3rREZXtK/BM
9r0SP0LsE/nQiDk6OnVeL3J/kXMKPQL94sjMeYEY48SSk3udfbLkVV8/d14+
cMJvE+8JR56PyZ3/H92Sd86+dfavHxa+Ed+KfOz/y0W6Xu49YuCQ/H0F9rKR
h52cluQ7Je8puf6IvSV3E3mu8Q8vnvnvC9D3yyvnNzi95jzkl+SOXyJO6saA
P4NDk0uQ+FLsU/LqE6dEvBJ7z8mrQW5FxiH769lnn+TOe4zut1TueCewXJ6F
/GFPVyHvn+qPEG2b+/0g/+cmtrOwK4mjIl8dOeiwB7ALfm85vy3509CZyeVH
TMQxqn9G7r+PgG45IrRPDgf2BYO131Q63xN5n8inRF7ur+rOZc1+7EPDmkWO
ULA1MDZ0/36J9f/Tc8fPgJOMFH9vzTo/uSiRG0ekziFFLilyBPH3LLD7yRVd
j6z3IJOxKYmDIh4K/Y68B+Q2Ap8mlzI57L5PnDuRmC7mCfOFvJ7kiKZvp6bW
p4ifIr8eOY2xbdkHHOX++wXgJGAk5IsgRxNrzL5q90nd9+2msRj0jMNy5+wF
dyXPBnN249RxX//tIUydM4pYY3JmYH+zt5u90sT3Ml/J6U6eB/JskL8JOYI8
IQfaS03Ld2Q79i776BdJvcefPfj/5XeL7EdHl2MvJ/s62wcbmpxmrDWMe8Y/
fzPkPfSzxHGV/VP/fQrincgxTYwcf7ODHH1dRGcEG5p8YuSxmsN9au7DL5X3
lLYPGA95J8h/+UvifaPEzjGGGEvEvpELnf3+p6WWHZSvnTo3BfHYyBFyXh1S
cw6MK3LHNIKBk1+I3EfsYf47cw5YbGH86U9p/Z2JTZ07dhH/11+Z88FiR/+T
OX8sNv6h2KeR9xVMyB0niQ8LX+EDauetzH8bgD0o+EPBOLskxjnRN9+KrHMe
nztWCmx5aO74KDDqwyr/XQryql2QO58Gvgn2IrULvqr5mf9exnU6PyT3nkHw
3pnY0bExsXruHLbggY3c+c/B9DpX/jsZXMvfOCGuDH/H2NyxZPgUxueOz8Rn
RP505Al6z5W5cXh8DRflzqmIj+Py3DGZ+CZeBFMS30P0stwxY/g7Ls4dV4YP
Bf9Ar7BeH6b3sUni/Rr8XRVi4thX9G/m3LzYueAHOybWY67OHYOKH/PC3Lks
8NFclTuWFZ8jvhN8KOTsGh3kBnKVfdnY5Y9i75be+zun8j7tYwMOQw6LkTWP
XXKYky8a24GYBDAB8ubyt1vIFUMc3t9N28bYSuTQZs8uOcEuTK2HkOeQ/Ir4
0v/zI+feG4tdQD5t8jmTu4zc3extwsdKjm7yYpD3hb9tQzwPsao75Z47+AfJ
9zGq5nzcP2WOp/83dV5WMDn8G+QJJ6cG+dDwu+6d2PdKvu5ZNecMJl8te4zI
q09uPXRk8g3wN3H+l6/0saZ1QfTASwPuCv4K1tU/4F1glt0S45ZDda+tE+eM
J6c3OZHIz4x90D3YCOToJh/3Kpn/JtF/GH/m/Nusoa+kzr3O3kHsR3Lvkn8G
vw/2NVhIH3SE3LIC7BpdHhmLrB2TOsYSmwIsbUBiPA3skHhd4nbB+tgXRw4D
/p4NeZ/weYEf41cGQx4YWXdHbz8mMo4AhkCuHvL2kDsJnK9zYvuXvy0yomGd
h3ezcXg/5GRmbyP59VcRv1bNvvJBkX2o+E97pM6Rgg5P7lPGxvapcWjkODKc
ccteePbEk9uXdQofMTlYyN/yYuqcMORSIGc7eZnIFUO+ef5+DfZdFrA79qWy
PxV5tnNimQaWvFNiPHnBYKdgr0wKMu2/v3vS8vgkz+3Kuf+WDT5K/mYBOenI
aUcOVbB09lKDuRILTUw0/h3yzk6vnCOOXHDkBCDP/1c156oHH90w2Av/B1DD
sSc=
          "]], Polygon3DBox[CompressedData["
1:eJxFnHccV+P7/9/7nPc55x0qZJUGKQ0lkYwSKluErMrMaJAtW1REEZVVRlKS
UZKMyM6M7JCZlFA+Kavf6+l1fx+/P+7H+77OPc79Pufc13hd13U3Pmlwr0GF
XC5Xt5LLlfS7oJjLzVZZns/lflTJJ7lcVdf7RLlcl5oqomP9HCN6b9HPp7nc
L+rXV5M8kalZ7fXU3l/t+6v9gnIud5EmPktzXq0+L6lPY137VGPGql5Wf6Y9
Qf33VeVatf2rvpup72b6/bvqdR2h9s5qf030V7r+lsYPUr2Q/Lek3LFq76r2
izQ+0oCvdO0v9VmoPr+Kvk30purzVtH/kf9WT2W5+s9Q+2+qH6jrL2tNTXRt
iehrVd9Ek2+psWdo7EGa/wa13aD+w9S3hdZYUru65Y5Xeze1L9b1vNqbq+1S
zVFX7Vup/Uy1H6z2v7Qedcn1Er276Dc132T1HxWe+SuabH/Ru4m+UvV/1V+v
Jtdb/fdU/zbq/6za6mv+01VuUOMq9e+na6eo/KP+6pI7Uv33UP/XRW/LPTT3
zXpxVfWfp/73qu99KqvU9rjoD9XeXXRR69UrzR2n8fto/HVqP1rtXXVtG93v
btFtRDdSfZjKnaL7iz5O4y8Q/akGb67f29X/qcxr3Vrt1xW85kz331L0Napf
q/Koxr+gPvuo//ei39d6F6h9Y12bp3oftT+veh2Vw1Qmiz5D7StynvNk3SPW
9edUb676uxpznNp7az3H6P++I3pnjTlM9BGiH1K9t9qHip6uMU00ZrZ+D1H5
XWt/RO2nqn0c62dOjX9Sv4er/E/j3xPdV+23qL2J6n/p3mtK/i8bqUzX+JNE
n6f5Z4h+uei9NUu/69Q2W/c7VNcPU/lD99tUfXfS9bGab6CuzVJ7P/3OUP9p
qj+v9o00/iHRU1Xalv0N8O4H8A2orY7KFLU9qPKM+ieiH1D9fpVMdEv130/z
H6T+U7TmyUW//6mqX6q2dipv5P3M3ta1F9W2r/p/o3kOVbldc3TR2BN0fYn6
VkXvKbqb6EvUXih7r7HG8aqfqPajRQ9Rn4mi+4nuI3qo6Df0n3Yt+5nz7DdV
6a/6qbpffdWH6fubzH7Rs35N399LekbrNfYD0ReJbq72vdV+kb7PC9g/ogeL
/kfrOF70QtGDRP8t+jjRt/ANaV3HiH5B9c5q76H21qqvUPuWmr+g+V/U/BeK
vlr01aJ/Vf8rRF8hepjolaKHid5V/XbJe83/07VOfHOqn6j5LlH75an3/Qq1
XSq6qdrPU/vxunaS2hbp/hfo/nmtv6/ar9G1a9T2m/pfKXo//dYre83wzFfU
f4D6/6HrR6u9pvlOUP9V/Ge1favykOpNNd+Zar9P/TbT+IEae7LKaq2rftn1
cap/r/5PqX979T9b/b8TPUd0O9FniV6jPt01xxJd+1jXXlX7Gaqv07Vj1P6N
6Kl8+2o7Q/THWs8ber97a/7nVb9E189XfXP4qub6Qf1fVf+uuj4I/in6UdHP
ih4o+kONbae53y/6m/lEc6Qau5L9rfpu6pOIHq72JqrX0/it1XaWxh/CePWp
VczLprK3NN8+6v+65vpF/U5T/Xtde1d0G/XpL/o70W+Lbi16PTJE/Q7XfJ00
3wNqG6n5TlTbaJUXNeeeurY969O7OlHjv1T9TY1vpd/bRP+j3001yZkqf4le
JvoLtR+k34Lm+rto3rCTyqFqf67kvTpPfXYRvUL1H/Lmse3UdqPGDGXOovfm
8SXzPvZoWW1nlbwXJyHLqt7z7PUx+jbHix5cNM+ajexU//pqPwNegXzTtbol
y+sjRZ+v+QdBq17RtY31fLfQOgboeRyo51EVXVd0P9H71czT4e0l9X1bz6O+
2rcRfbbaD1X7ZZpvbdHte+r3cd6lfiOtfZrKG7r/z7rfNF17W+tNNb6+xp+k
8d3Z32XLaGRzpDme0j1+Yj+pzFV9gdorGt9WbTcjTzR+U40/WeN7aPxGohuI
Pl30AaJPUv+f1P+dvGXKdbp/F/0eojJS9R30fBqq/W7NtVzjXtW1q0U/jPxX
/RP2Q9myrqb6duq/H++kYBkyVvVP4JcqA1QW8s3qWqr6aap3Uf9IdP28dYJm
ovdlf6t+rq69qT57iN5X9UP0/6ap/qfuv5XGz9G1paLXiW5f9Jo+1hoOK/nb
GKr6RyoHlvysn1P9Q5WeojszXvUDkN2a49a8r32p+h/sOdWn69qn6nMEMkj0
ZaqvVXlQa9xIbY+ofrn676r2rYv+Rs7Weuvr91yVx1Tvrb7fq/553jyAeyHT
kGXcsxHfu673y3tPvqI565Qs/25S/X8qUzRHt5z5xWL1b6jSVWNGqGystl3U
v0HR30xr0UeW/OxY81taQ1fRu6h+ueofVM0D2Psr9A3M0lztS9Ylz0MHFb27
6Gaqn8Q+0ZgW+v0FGa/6LI0/X3N30LUrVN9a96tozD2iv815rzYVXc57z76r
MeeK7kh/1c9WfbnqS9W2iX5X6FpndEt96/P0PXaoWXe5VHP/qfpK+Au8Qu3P
iN5Xv13QvdXnW61/ldr3E/2hrj+r9uM0bo3WWtTcfdAlY+tlW6N7qb5CpXPB
3zP6TgeVszXXHryf2DziXtU7ls07ble5RfWFuvaw2tqJfkFjG2v+HaBVztL4
3fl+VN+K/mr/Rte+0voO1zfbQ20HqO059p/We6Paq7r2pdr2TS0vx6jvU2rf
RuPHq31nXZutMZuJHiG6i+a7WH3aq/+2ahumttnqv4Xmu0ftP6vtIdF7i/5Y
9CUaN190w6rbJxWs73VRuURzHRCeaW/Nd6Dqd2v88zXrG+N4Xrr2t9r2VJ+L
1b9neEcLdG216i+r/qL6b63+U9T/N/UpYOuodENfUfs0tT8BD4Hn65uazrvR
9e5qf1DlDNVv0vhji9ZhBqq+TPzpI82FETVF48fo2qlq3wL9ANtD89dhr6j9
cbVP1u9TokdpvrzqHRPzxprqT6j9a435C/1A/+8R0YNFb4HcUfuDor/X97sJ
vE/lssg2ALbAIyrjY89TL9h6z6teR+NvwK5RfarG3xabTzTRtbLqo6rmnS8h
i7CttN791XYa/dT/Lq3vPa3nHd1rMvaarv/BvdWnDvpAbN59v57XPaKnxp5r
B815pOoTdO1K1bfStU1F3635Fmm+dzXfvZpvkugPRC8SfT/PR/Ri0e+LfkD0
naLfFf226Emi7xH9vuj3RN8n+kb4nea/QPO/wPy61glbTOUevs/M7241Mk7/
bSP16YPto/4NVN9P13ZTfTfV56LfYQOo/58qJ6nev+r6epV+qg9Qv5m8H9F9
RV+o0hD7E11A9U1VrlL9avWpYmPq/lcyl+gDsW1ULhd9EP9R9x5eNZ+F3z6l
uZdVfK8S/A/7Vv93iPr+q+snaH1tVfqLrqdx36n+qH7nwTtKtncrfJ+aK2Hf
q/3cxPL9ZN6L6Pr67Sf6f+j/6tMPm1j1xbq+tubvjO+trGvvqL6P2j9FNmN/
a659NWaJ6GtEd1P9VLU/qvtdp7X+UbMMPlL755CSZTPfG7wD+XdBNfA4vmf0
YdUjjb8o2Jeslf0BL94c/l61jEZWx+x5tQ3NbBsu0f3W6X67I+MK/j/Hw//U
5x713atoec/42aI/K1r2I2OnYEuWLXuHqexY9H/6MbLMRA49hGyvWmZ00X/Z
q2xZEqkAsAwHo9C9/tU7PLtge2+I1n9l1bIDGbJY9S/Up7Ha/1b7J3qHiyPz
i4a69pnadk1sK3OvH/V/Noj+VXSlav64lf7v/che+JXqP6m0Dbx7jtqPUP82
otuKflL09My25q+69iDPNrMsPCrIpx3V711siZL1xSdEPw+/Rz6rz2OinxZ9
vdb/WdX/p5v6HqNyfdXPh/XeU7auUVA5TfOfk/P3u5foG1RvXjRPR56hKz6r
/p+LHil6d+wg9MfY/4n/NlnP5VuAI/U5WfONUvsc9qdKU/WfL3pKbBmGLGPN
D6h+sJ5/E9EXa9z6sB/Q1dDZFqm+tGJ7MJ+3PDpC13vov3RSn4NVrtT4xug1
mutt5I9+j9cyLgsyi+8F3WyUro0VfTn4QxGDT/+JPaX5h6j+hy79Flln4P0P
xwbV3Jfxvop+pwAxA1T6qy2rej/uo/d3hejLwTZE/6LfSejP2Kyq/xbbfj5Z
9GrVz9T4U/LmPS/THzszbxl7te5/lO63ruA5Lk2Cnau2r0VfpfbjwKDU3kn0
Ton3CHvlybJ15a95xgXzqI1F91L/X1Ufo/6D1X+jqnn/jRpzt+qPpLa9Bqv+
itazscYfgj3P81b9UrVvpnod1RfWvCbWdnrs9Q9TewN0K9FvYm+I3lJ0PdFv
ie6deX/vHuzx+bFl2/LA74+u+vtmfXWxgTX+NLWdHfCGbrrfVaKv5LsHD9Dv
ddiKlNg6a2/0/Yp12REav53abtRci+BnorcXPVr0+6KPEX04ulfQVy7MLOt+
0v3/1L2Ga84b1N6Jwr1UbsxbZ9xD9WtUrs97D+8U+7vl+71K4yeCgWi+7UQv
E71e843W/dqr7+1q+0D3O79q3bmSN38+UPS3Be8p9tYQjd9S9Y81/if+e9V2
wq1hv70SWx9ao/Iqslyll8bPZc/FxknAS5qoXBMZxwDPaIb9JLq/+jwAfip6
iOpb69qEvHWkKapfq/XuILoF2JrW20jX7hT9u8ZMVX0blYmin4A/gUmq3KX6
WdgSqp+j9W+j9Waid1X9vtiyEx33/tj68uqCZeKxqn8DPsHe0rWFsWUAsgAZ
N1xtT+raZ8hDzfl7xfrSf7ZbxVgqmPNG2EJlY9HXZJbHyOWPtf4p8KeiZeRa
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
+6zBlIh32D2xDYotSnzVFqllBr5M4k2QJfgc8T3iD9oE34zGDNTcf1UcT0N8
P7r5aXre54reuuZ4D3zRxI/gv8dXj+/3HPVtkPpe6BPkDm2Wem8R8/do6hzF
1zV3k5xzF8nhe6HinD1y+8h5eE1045xzIchRXFBxDgq5i+QsvCG6ac65DH3R
XUVvKzpKnJNEbhI5Scfw/aX2axKjh31Lzg65O1PVfp7aZ0XWR2fznxLnMJHL
xDM4KnHODbk38JuhiXMen604Z4NcSHI2wDHgF+RyEJNMbPKgiuPhyXGZTkxw
sDfI4Zwb9iP7D3vkIdEb839T51C8U/Ez59k/pTEzS8YMwQ7JaVykesuccx3J
wVgoulnOuRnkED5fcQ4luYXkkM6rOEeD3NKHNcff+Mwqzvcbk9qPDOZOvlTf
1H4/fNgnps5Rahf09avRDzNjKWAqxFPBj76LHD9/t/rXTx2LQkzIqsDPusXW
+dD/4DeHxtbJbkotX+Hr8Hf02c6ZfaVgnOCft6p/a7U/ofabEvNYeC06KPFX
8McesXVm9Gn41T7gkmrfl/jK1HkjYFaNVD9Z7ZHmG6b5Tk7M71rGjon6B/6V
WldCZwL7I2erfbBnrgn2TZdgP40N/K1NbJ0brKWf6EJk/b0fthzxPQXH9DVV
+0k160HwsJMSy5MOapuo0i11zukTFefYkIsKPyW2mJy7nWrOYSOXDQy9b2J7
9KPINhi5deSgPlZxjg+5qeS8zqg4p4hcWHJ6Z1acM0yuL/bcOei3Wv8Ejb8R
fqv5Hlb79Zp/TM161qNBntwgupno6aKHi765Zj8R/qJRokfVLIenhP10jeiN
I2PmZyfGl7bQ/Rrmnet3meifK7Z5D0mMJ20W2ydBbh/7s3HYf3x/o+G3omeI
HiH6JtHNRT8ieqToa0VvElmnGhT4w/Tw/+EnQ2reb5sEfnFu2I8Nwn4j55EY
l69zzoW8jvWKvkv0RWofLrqB6DtFXyD6etFbRvaPXJxY50D3IGb6NPRDlVV5
598SbwbPhfcSk3xcan/9lwXHhO6n+oia9XL080s0322i2wb+NCbo9z9UjDG0
Sx1zSezlOwXnRmKvNAv6+vWp8ZZtY+NP16XOKSS3cIDGH6r5jqrZj4M/Zyfs
S9FfiO4suqnajxT9bcX+vHaie7PfK87pbJ84R/s90S1yzt0mR/B90TvmnDsI
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
W1SuLFnGI+vBg7FPOTPyRtH/D6uolc8=
          "]], Polygon3DBox[CompressedData["
1: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
DTXk+x/Q9oTP
          "]], 
         Polygon3DBox[{{2650, 2649, 3375, 2321, 2322, 3376}, {2641, 2640, 
          3350, 2079, 2080, 3351}, {2761, 1933, 2087, 3355, 2645, 2646}, {
          2756, 1928, 2073, 3349, 2636, 2637}, {3307, 1946, 1804, 1803, 2110, 
          2888}, {3289, 1304, 2477, 2057, 890, 3225}, {2755, 1927, 2070, 3348,
           2634, 2635}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0k9LVFEYB+B3ymoaRw0hxE0hhLsCEXe2KbWZ0QrSbFOb0o1aRqaBLWoR
rnLlyqEW7RpCKgrGEJFIxkz7o6XfwK8gERI+F2HOPL+Xe95z7rn3Nt0evXYv
FRHTxvVDEUlu5C7/HY84wXQm4jQbeI7NPM82FrhRHZHVc0PekVvkvGsD6lb5
ljwmF+VB+ak8lDnY8y6LfMQSpzjPh9YZcTOTelbUvXyhvnAs4qv6IlfZwW/s
5Bq7uM5L/M4c88YPucCf7OYv9nCDl7nJK/zNq/zD8XRE8nAe23tL3ceX6lfu
saKeYZnP+DqZz1kO8zm3naFezxO5Iv/X+0Belvfkm+bdUb8zJyf3y+3MJ8+N
7TzDszzJU6zW+5f9euqSM/G+tb4cjahVf2YNl5jlIrXEAi0Rn+i1RpmOFx/5
wXDkeE+/eOvvCOdYxTc8zBJtFxMaR1MH38s+5EpDDQ==
       "]]}, {}, 
     {GrayLevel[0.2], 
      Line3DBox[{2554, 2825, 1872, 2553, 3385, 2722, 2555, 3386, 2723, 2556, 
       3387, 2724, 2557, 3388, 2725, 2558, 3389, 2726, 2559, 3390, 3291, 3439,
        2560, 3391, 2727, 2561, 3392, 2728, 2562, 3393, 2729, 2563, 3394, 
       2730, 2564, 3395, 2731, 2565, 3396, 2732, 2566, 3499, 2826, 2733, 
       2827}], Line3DBox[{2568, 3292, 3440, 2567, 1887, 2569, 3397, 2734, 
       2570, 3398, 2735, 2571, 3399, 2736, 2572, 3400, 2737, 2573, 3401, 3293,
        3441, 2574, 3294, 3442, 2575, 3402, 2738, 2576, 3403, 2739, 2577, 
       3404, 2740, 2578, 3405, 2741, 2579, 3406, 2742, 2580, 3407, 2743, 
       2581}], Line3DBox[{2583, 3295, 3443, 2582, 3296, 3444, 2584, 1903, 
       2585, 3408, 2744, 2586, 3500, 2828, 2829, 2745, 2587, 3566, 3120, 3121,
        2746, 2588, 3502, 2831, 2832, 3297, 3501, 2589, 2834, 2835, 3298, 
       3503, 2590, 2837, 2934, 3299, 3504, 2591, 3124, 3125, 3567, 2747, 2592,
        3381, 3409, 3161, 2748, 2593, 3573, 3164, 3165, 2749, 2594, 3410, 
       2750, 2595, 3411, 2751, 2596}], Line3DBox[CompressedData["
1:eJwVz0lOAgEQheFypXHAmBiHsBIF5wFI9BrE6EYTSTiAyAI9EbI03EDv4AoF
XIiK4nACw9eLP/97VV2d7pVK9fhyLCJKyE1GvE5H1GcisnJfvpbX5aWpiGW8
6Rv6/3hEWt+UG2bvnNI/+JmfsCXn7W5R9a6BXuBPvuIituUd+yZS+pc+53bI
He5O2Mtdedb+W56Xf/jRTQ678p3ZAm6wmNyZv3APe/ZHbmv4lQ/5j9ue2ecW
Zzx3Zr7K53xgXk6+1W6NL5BF3vzE7D75F5zKD1zECAURKsg=
       "]], 
      Line3DBox[{2613, 2852, 2853, 3561, 2612, 2855, 2856, 3506, 2614, 2801, 
       2842, 3447, 3342, 3043, 2999, 3000, 3226, 2979, 3283}], 
      Line3DBox[{2620, 3113, 3112, 3563, 2619, 3002, 3001, 3545, 2618, 2805, 
       3110, 2804, 3576, 3187, 3111, 3171, 3227, 2993, 3281}], 
      Line3DBox[{2632, 2807, 3114, 3116, 3115, 3564, 2631, 3004, 3005, 3003, 
       3239, 3285}], Line3DBox[{2633, 3046, 3047, 2970, 3258, 3282}], 
      Line3DBox[{2652, 3058, 3059, 2949, 3009, 3199, 3279}], 
      Line3DBox[{2653, 3049, 3050, 2883, 3048, 3174, 3274}], 
      Line3DBox[{2661, 3149, 3150, 2808, 3131, 3151, 3189, 3152, 3577, 2893, 
       2984, 2996, 3222, 3223, 3245, 3200, 3269}], 
      Line3DBox[{2666, 3130, 3309, 3568, 3144, 2895, 3310, 3516, 3031, 2811, 
       3138, 3380, 3578, 3192, 3153, 3253, 3230, 3257, 3231, 3284}], 
      Line3DBox[{2667, 2785, 3117, 3565, 3118, 2784, 2905, 3522, 2919, 2783, 
       2962, 2814, 3548, 3033, 3255, 3021, 3264}], Line3DBox[CompressedData["
1:eJwVzr0ug3EYhvGnqDaqB0B0EAPOgpisHSxdGvHRt6m3PhcfC3YRJ0HRjRMQ
pyAi6cIBtNIOJvw6XLnu+37+b/LOrjfLaSYi1rAzEdGdjLgoRjTknnwpp/KS
vIJlDGxlbtpXeU7v46oQUcEvdt2m3G7tf/K0HPYzvudtnne7Q1fP4Ng2wjP8
wDVecG+hp4/ixDbGJX7kV7dEbsvfyOJUH+c3t0XU9Sd9A+fyJr/bn/lGT5Eb
bsij4/bBe/77h6v5iGveQs7bffuLN7Xh90hwYEtsn3yIuvzFR/gHKkMvZQ==

       "]], 
      Line3DBox[{2679, 3313, 3461, 2678, 3314, 3462, 2680, 3315, 3463, 2681, 
       3316, 3464, 2682, 3379, 3570, 3142, 3141, 3158, 2683, 3524, 2922, 2964,
        2923, 2684, 3527, 2924, 2965, 2925, 3526, 2685, 2926, 2966, 2927, 
       3528, 2686, 2928, 2967, 2929, 3529, 2687, 2930, 2968, 3465, 3364, 2688,
        3317, 3466, 2689, 1971, 2690, 3435, 2788, 2691, 3436, 2789, 2692}], 
      Line3DBox[{2694, 3318, 3467, 2693, 3319, 3468, 2695, 3320, 3469, 2696, 
       3321, 3470, 2697, 3322, 3471, 2698, 3323, 3472, 2699, 3437, 3324, 3473,
        2700, 3325, 3474, 2701, 3326, 3475, 2702, 3327, 3476, 2703, 3328, 
       3477, 2704, 3329, 3478, 2705, 1987, 2706, 3438, 2790, 2707}], 
      Line3DBox[{2721, 2933, 2163, 2720, 3492, 3341, 2719, 3491, 3340, 2718, 
       3490, 3339, 2717, 3489, 3338, 2716, 3488, 3337, 2715, 3487, 3336, 2714,
        3486, 3485, 3335, 2713, 3484, 3334, 2712, 3483, 3333, 2711, 3482, 
       3332, 2710, 3481, 3331, 2709, 3480, 3330, 2708, 3365, 3479, 2931, 
       2932}], Line3DBox[{3012, 2766, 3013, 2971, 3261, 3278}], 
      Line3DBox[{3014, 2776, 3015, 2972, 2995, 3204, 3268}], 
      Line3DBox[{3025, 2806, 2854, 3024, 3023, 3547, 2621, 3041, 3105, 3042, 
       2938, 3212, 3198, 3276}], 
      Line3DBox[{3030, 2782, 3134, 2810, 3191, 3135, 3519, 2904, 2978, 3052, 
       2977, 3205, 3201, 3277}], 
      Line3DBox[{3045, 3090, 3091, 2969, 2994, 3217, 3267}], 
      Line3DBox[{3265, 2903, 2976, 3051, 2975, 2973, 3432, 3344, 2985, 2902, 
       2781, 2958, 3431, 3361, 2665, 2780, 3518, 2901, 2900, 2664, 1948, 2891,
        2899, 3515, 3308, 2890, 2898, 3514, 3307, 2888, 3517, 2897, 2779, 
       2886, 3513, 2663, 2778, 3140, 3430, 3378, 2662, 2777, 2896, 3429, 3360,
        3016, 3083, 3082, 3557, 3017, 2809, 3190, 3028, 2894, 3275}], 
      Line3DBox[{3266, 3218, 3260, 3248, 3180, 3214, 3181, 3011, 3448, 3027, 
       3080, 3026, 2622, 3345, 3530, 2939, 2857, 2623, 3346, 3531, 2940, 2860,
        2624, 2074, 2865, 2625, 3508, 2866, 3159, 2867, 3534, 2626, 2869, 
       2870, 3535, 2627, 2872, 3449, 3353, 2628, 3128, 3129, 3450, 3157, 3156,
        2629, 3347, 3532, 2941, 2861, 2630, 3088, 3188, 3089, 3559, 2862, 
       2983, 3067, 2982, 3211, 3249, 3263, 3172, 3272}], 
      Line3DBox[{3270, 3063, 3252, 3237, 3062, 3029, 3168, 3574, 3382, 3155, 
       2775, 2892, 3428, 3359, 2660, 2774, 3427, 2659, 2773, 3426, 2658, 2772,
        3539, 2957, 2882, 2889, 1941, 2956, 2881, 2887, 3510, 3306, 2955, 
       2879, 3512, 2885, 2771, 2954, 3425, 3358, 2657, 2770, 3424, 2656, 2769,
        3423, 2655, 2768, 3569, 3133, 3132, 2654, 2767, 3511, 2884, 3061, 
       3236, 3060, 3106, 3273}], 
      Line3DBox[{3271, 3250, 3006, 3007, 2942, 3451, 3348, 2634, 2863, 2943, 
       3452, 3349, 2636, 3302, 3453, 2638, 3303, 3454, 2640, 3350, 3533, 2944,
        2868, 2642, 2082, 2945, 2871, 3509, 2643, 2873, 2946, 3455, 3354, 
       2644, 2875, 2947, 3456, 3355, 2645, 3304, 3457, 2647, 3305, 3458, 2649,
        3375, 3556, 3081, 3148, 3147, 2651, 3356, 3536, 2948, 3008, 3238, 
       3242, 3244, 3241, 3251, 3280}], 
      Line3DBox[{3286, 3246, 3221, 3220, 3234, 3254, 3210, 3169, 2980, 3044, 
       2009, 2992, 2802, 2981, 3240, 3383, 3507, 2858, 3243, 2859, 3119, 2615,
        3560, 3102, 3160, 2844, 3143, 2845, 3065, 3552, 2616, 3103, 2846, 
       2936, 2847, 2301, 2617, 3104, 2848, 2937, 2849, 3553, 3066, 3247, 3084,
        2803, 3213, 3579, 3343, 3186, 3022, 3170, 3216, 3256, 3235, 3224, 
       3225, 3289}], 
      Line3DBox[{3287, 3262, 3203, 3543, 3370, 3096, 2765, 3095, 3069, 3422, 
       3357, 3146, 2764, 3421, 3376, 2650, 2763, 3420, 2648, 2762, 3419, 2646,
        2761, 3538, 2953, 2876, 2880, 2760, 3537, 2952, 2874, 2878, 1931, 
       2951, 3418, 3352, 2877, 2759, 2950, 3417, 3351, 2641, 2758, 3416, 2639,
        2757, 3415, 2637, 2756, 3414, 2864, 2635, 2755, 3554, 3068, 3093, 
       3092, 3094, 2754, 3575, 3173, 3259, 3290}], 
      Line3DBox[{3288, 3206, 3207, 3053, 3209, 3208, 2906, 2986, 3193, 3541, 
       2812, 3054, 3019, 3020, 3018, 3373, 3551, 2908, 2909, 3072, 3073, 3071,
        2337, 2910, 2911, 3075, 3076, 3555, 3074, 3099, 2912, 2913, 3078, 
       3520, 3374, 3077, 3107, 2914, 2960, 3371, 3521, 3010, 2915, 3085, 2813,
        3215, 2418, 3179, 2974, 3232, 3233, 3228, 3229, 3362, 3384}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1705, 1873, 3385, 1706, 1887, 1734, 3444, 1902, 1749, 3446, 
       1912, 1759, 2060, 3506, 2061, 2238, 2239, 2240, 2444, 2459, 2458, 
       2537}], Line3DBox[{1707, 1874, 3386, 1708, 1888, 3397, 1735, 1903, 
       1750, 2045, 3558, 2326, 1913, 1760, 2241, 3447, 2006, 2274, 2453, 
       2551}], Line3DBox[{1709, 1875, 3387, 1710, 1889, 3398, 1736, 1904, 
       3408, 1751, 2046, 2327, 2047, 2328, 2049, 2208, 2420, 2485, 2534}], 
      Line3DBox[{1711, 1876, 3388, 1712, 1890, 3399, 1737, 2035, 3500, 2036, 
       2037, 2003, 3493, 2048, 2004, 2266, 2265, 2051, 2523}], 
      Line3DBox[{1713, 1877, 3389, 1714, 1891, 3400, 1738, 2356, 3566, 2357, 
       2358, 2359, 2360, 3494, 2050, 2254, 2421, 2253, 2505}], 
      Line3DBox[{1715, 1878, 3390, 1717, 1892, 3401, 1739, 2038, 3502, 2040, 
       2041, 2267, 2268, 3495, 2052, 2205, 2317, 2520}], 
      Line3DBox[{1719, 1880, 3391, 1720, 3442, 1894, 1741, 2042, 3503, 1906, 
       1753, 2206, 2207, 3540, 2190, 2198, 2436, 2502}], 
      Line3DBox[{1721, 1881, 3392, 1722, 1895, 3402, 1742, 2043, 3504, 1907, 
       1754, 2271, 2044, 3550, 2272, 2236, 2430, 2237, 2552}], 
      Line3DBox[{1723, 1882, 3393, 1724, 1896, 3403, 1743, 2361, 1908, 3567, 
       1755, 2005, 3546, 2247, 2318, 2319, 2461, 2538}], 
      Line3DBox[{1725, 1883, 3394, 1726, 1897, 3404, 1744, 2403, 2404, 3409, 
       2405, 2055, 3505, 2248, 2056, 2292, 2167, 2483, 2431, 2492, 2535}], 
      Line3DBox[{1727, 1884, 3395, 1728, 1898, 3405, 1745, 2406, 3573, 2407, 
       2408, 2409, 2344, 3562, 2346, 2345, 2347, 2348, 2012, 3576, 2424, 2013,
        2507}], 
      Line3DBox[{1729, 1885, 3396, 1730, 1899, 3406, 1746, 1909, 3410, 1756, 
       1915, 3412, 1763, 2242, 3545, 2249, 2470, 2473, 2469, 2471, 2489, 
       2540}], Line3DBox[{1731, 2033, 3499, 2034, 1732, 1900, 3407, 1747, 
       1910, 3411, 1757, 1916, 3413, 1764, 2349, 3563, 2350, 2351, 2352, 3564,
        2363, 2353, 2088, 2212, 2226, 2440, 2488, 2439, 2432, 2516}], 
      Line3DBox[{1858, 1989, 2162, 3479, 1843, 1974, 3467, 1828, 1962, 3461, 
       1816, 1954, 3459, 1808, 1950, 3568, 2376, 2389, 2388, 1800, 1945, 2425,
        3577, 2387, 2117, 2213, 2243, 843, 2479, 2513}], 
      Line3DBox[{1859, 1990, 3480, 1844, 1975, 3468, 1829, 1963, 3462, 1817, 
       1955, 3460, 1809, 1951, 3516, 2261, 2118, 2307, 2308, 2449, 2464, 2463,
        2533}], 
      Line3DBox[{1860, 1991, 3481, 1845, 1976, 3469, 1830, 1964, 3463, 1818, 
       1956, 2377, 3572, 2368, 2392, 1810, 2391, 2390, 3578, 2427, 2021, 
       2528}], Line3DBox[{1861, 1992, 3482, 1846, 1977, 3470, 1831, 1965, 
       3464, 1819, 2135, 2378, 2134, 3571, 2379, 2185, 2217, 2433, 2486, 
       2517}], Line3DBox[{1862, 1993, 3483, 1847, 1978, 3471, 1832, 2374, 
       2373, 3570, 2375, 2030, 2310, 3496, 2029, 2335, 2334, 2136, 2511}], 
      Line3DBox[{1863, 1994, 3484, 1848, 1979, 3472, 1833, 2152, 2399, 3524, 
       2151, 2188, 2287, 2288, 2149, 3497, 2220, 2413, 2219, 2454, 2529}], 
      Line3DBox[{1865, 1996, 3486, 1850, 1981, 3473, 1835, 1966, 3526, 2155, 
       1820, 1957, 2291, 2153, 2222, 3525, 2415, 2475, 2490, 2514}], 
      Line3DBox[{1866, 1997, 3487, 1851, 1982, 3474, 1836, 1967, 3528, 2157, 
       1821, 1958, 2202, 2195, 3542, 2223, 2416, 2524}], 
      Line3DBox[{1867, 1998, 3488, 1852, 1983, 3475, 1837, 1968, 3529, 2158, 
       1822, 2204, 2203, 2196, 3544, 2143, 2434, 2235, 2460}], 
      Line3DBox[{1868, 1999, 3489, 1853, 1984, 3476, 1838, 1969, 2161, 3465, 
       1823, 1959, 2159, 3549, 2031, 2264, 1813, 2506}], 
      Line3DBox[{1869, 2000, 3490, 1854, 1985, 3477, 1839, 1970, 3466, 1824, 
       2145, 2160, 2144, 2295, 2186, 2481, 2435, 2493, 2518}], 
      Line3DBox[{1870, 2001, 3491, 1855, 1986, 3478, 1840, 1971, 1825, 2148, 
       2316, 3523, 2147, 2187, 2263, 2028, 3548, 2482, 2474, 2027, 2515}], 
      Line3DBox[{1871, 2002, 3492, 1856, 1987, 1841, 3435, 1972, 1826, 3433, 
       1960, 1814, 2133, 3522, 2146, 2294, 2293, 2343, 2484, 2455, 2531}], 
      Line3DBox[{2165, 2164, 2163, 1857, 3438, 1988, 1842, 3436, 1973, 1827, 
       3434, 1961, 1815, 2354, 3565, 2355, 2381, 2380, 2365, 2366, 2426, 3519,
        2367, 2132, 2215, 2309, 2442, 2487, 2494, 2441, 2438, 2526}], 
      Line3DBox[{2166, 2032, 1872, 1704, 3440, 1886, 1733, 3443, 1901, 1748, 
       3445, 1911, 1758, 2059, 3561, 2342, 1917, 1765, 2257, 3547, 2258, 2256,
        2417, 2451, 2480, 2478, 2536}], 
      Line3DBox[{2495, 2284, 2025, 3541, 2428, 2024, 2372, 2371, 3430, 2370, 
       2369, 1794, 3424, 1939, 1784, 3416, 1930, 3454, 1774, 2066, 2065, 3531,
        2170, 2275, 2010, 2276, 2009, 2224, 2522}], 
      Line3DBox[{2496, 2450, 3579, 2011, 2423, 2383, 2384, 1770, 2398, 3450, 
       2362, 2396, 1925, 1778, 3457, 1934, 3419, 1788, 1943, 3426, 1798, 2125,
        1949, 3518, 1807, 2218, 2026, 2194, 2418, 2452, 2546}], 
      Line3DBox[{2497, 2262, 1801, 2325, 3557, 2324, 2250, 2018, 1792, 3569, 
       1937, 2364, 1782, 3414, 1928, 2073, 3452, 1772, 1921, 2071, 2014, 3448,
        2259, 2320, 2273, 2527}], 
      Line3DBox[{2498, 2192, 2211, 2210, 2177, 3536, 2089, 2382, 2090, 3422, 
       2305, 2394, 2395, 2393, 2411, 2410, 3574, 2260, 2282, 2283, 2131, 
       2510}], Line3DBox[{2499, 2281, 2280, 2017, 2466, 2279, 1791, 3511, 
       1936, 2103, 1781, 3554, 1927, 2070, 3451, 1771, 2200, 2199, 2191, 
       2504}], Line3DBox[{2500, 852, 2091, 2201, 2332, 1926, 3575, 1780, 2229,
        2304, 2230, 2180, 870, 1148}], 
      Line3DBox[{2501, 2446, 2445, 2183, 2232, 2306, 2231, 2437, 3543, 2227, 
       2333, 2228, 2102, 2447, 2448, 2530}], 
      Line3DBox[{2503, 2414, 2221, 3498, 2150, 2290, 2289, 2189, 2154, 3527, 
       2156, 1834, 1980, 3437, 1849, 3485, 1995, 1864}], 
      Line3DBox[{2508, 2285, 2465, 2286, 3551, 2252, 2137, 1802, 2106, 3513, 
       2105, 2181, 3425, 2094, 2093, 2178, 3417, 2080, 2079, 3533, 2173, 2075,
        2074, 1766, 2064, 2169, 3507, 2468, 2472, 2467, 2539}], 
      Line3DBox[{2509, 1762, 2300, 2301, 2299, 1919, 1768, 2081, 3535, 2176, 
       1923, 1776, 3455, 2086, 2099, 1932, 3537, 1786, 2100, 2111, 1941, 1796,
        2112, 2124, 3515, 1947, 1805, 2140, 2314, 3520, 2315, 1953, 1812, 
       2525}], Line3DBox[{2512, 2338, 2336, 2337, 2311, 2138, 1803, 2110, 
       3517, 2122, 2108, 2182, 2098, 3512, 2104, 2096, 2179, 3418, 2084, 2092,
        2082, 2175, 2078, 2172, 3508, 2076, 2400, 2401, 2402, 2339, 2341, 
       3560, 2340, 2429, 2521}], 
      Line3DBox[{2519, 2419, 2193, 2214, 3432, 2020, 2128, 2019, 2116, 3428, 
       2115, 2114, 1790, 3421, 2322, 2321, 3556, 2323, 2385, 2016, 2386, 2015,
        2331, 3559, 2330, 2069, 2456, 2278, 2462, 2548}], 
      Line3DBox[{2532, 2491, 2422, 2197, 2053, 2270, 2269, 1752, 1905, 3501, 
       2039, 1740, 1893, 3441, 1718, 1879, 3439, 1716}], 
      Line3DBox[{2541, 2246, 2245, 2244, 3521, 2142, 2141, 1806, 1948, 2113, 
       1797, 3539, 1942, 2101, 1787, 3538, 1933, 2087, 3456, 1777, 1924, 2085,
        3449, 1769, 1920, 2255, 3553, 2054, 2302, 2303, 2545}], 
      Line3DBox[{2542, 2443, 1811, 1952, 3555, 2313, 2312, 2139, 1804, 1946, 
       3514, 2123, 2109, 1795, 1940, 3510, 2107, 2097, 1785, 1931, 2095, 3509,
        2083, 1775, 1922, 2174, 3534, 2077, 1767, 1918, 2412, 2296, 2298, 
       3552, 2297, 1761, 1914, 2476, 2549}], 
      Line3DBox[{2543, 2023, 2234, 2022, 2216, 2121, 3429, 2120, 2251, 2119, 
       1793, 3423, 1938, 1783, 3415, 1929, 3453, 1773, 2063, 2072, 2062, 3530,
        2168, 2209, 2008, 2225, 2007, 2547}], 
      Line3DBox[{2544, 2130, 2457, 2129, 2233, 2184, 3431, 2127, 2126, 1799, 
       3427, 1944, 1789, 3420, 1935, 3458, 1779, 2068, 2397, 2067, 3532, 2171,
        2277, 2058, 2329, 2057, 2477, 2550}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
uEb/AD1wY/fvwv+ov+h/1F/EqL8We3JDID9Pl27CoE9alh0j9UmU+sAA2Q9G
qpD9lNOPZLIf/F/6/x99iBn60F3+hADoq0MqfeKgrwRTQ8VBXy29aknqQx52
rTHIp1C0IKkPj7dz7wf9tisqWAX022//FR6g35QP6OuC3mMbbFoKek/q9hlS
H86j68NgXccmQh8qMfRh+ORxUh/+OmW9DPTkzAqp/9KH6H/oQ8TQh/Le8qQ+
XHPPdDXo2/kpWv+lDxFDH/6TH8TIz4Z0kx7IJ/OzpTagtxPEfeb6U1V3sh9f
HTDKDfqcufb3PtDn7gsSPUHPWxpNaoKe10pTvgd6PmazijDo/9cRL/1B/9d/
PnQY9D9r4kchiMfU2HsU8u8u67oE4knOW0z2O2Lf60UBz7MDeSQeljaykv1O
mfQXBehH0p8FkP0O3/bPZP+SUiNyBvqX9PcWZP9yj97vxO1scCb6HSVGv0P9
oEmO1zua5Aj90eHDWeT454k6ZL/jwNOvCP3U8g8vyX6nU7nrHMSTgfeIAT6x
mwvZ75iPRS+B+N+fvz4G+WwZTSLxs3m373KY78gv2TvQ391Z2U7O93/110rG
I7cgn/O+6S+E/nFK9bk25POf/h3/j/4d/4/+Hf+P/h0z+vfFGn4knzSyJJ8H
PpnS8fqv/h3/j/4d/4/+XYnRv9+JEiD7d8oHDxvo92d8K/+rf0eM/n2r0N6F
EI9MrTC533kX3P6v/v0vPgvifZ1gvqJHJ/dCPt2tFcj5yrVy0SA/Rd/vkecb
3jbJ/9W/I0b/Pmwb+AbOT24V8a2C85OU0Bnf/ziP+nvewnbai8S/3PMdXID/
9Qv5/us8Cv+P8yjMOI9SF+Unz6NELvUsgPo4076M5P/dVs/I8yitx398QG9E
G5f8X+dRf5Znu+T+vKnEOI/6sUqYPI/awy91CepvgqsIWX85mDlJvR25JYAL
6suL2JT/Oo9C/+M8CjHOo0RfOZLnUebjTjBf5GRtu/8/zqP+ntcxn19Knke9
pW2FfKI7n9eT51G33X0sVt7txQGenVIRXfnIK1vg89NGKmLXov5aZUDBFB/5
XS0T79GdWrfxzb5UNK1zcOm9dxQsxGrP0fUnHKUWdj1ccpyKKl8tJe25wm/A
jp808IaAnSvghjn49zU4u4XwjwMVakn/tzIbHjxk68Fmyp4HD/qWovLENbPS
cYPo+atyU5ExCop331PZNdCO+9+sMBpm70UuvHdT39d2MZ64kdtUh9mmD4mL
6mTB7wurniTBM+j1431gV9V3DQT/HcLHDhP+8aMTC1hkCP/Wkb1nmm+04Yfd
YZdKzIuQceKe7ePLhtEVSb7ji+UH0WK0+977qhrc5viB70J9N8r5tc+SsGOx
2ajbYBeObeIG+90gkcDt34bwsX1rIx/bVGLD7W7G3dKdqHqZ+Snwf1H97WXC
Pw5YHrYD/DdeOkq+N2pgZwDY78Z/kAe7UXWRP+EHKd3eVUL4QcGi78zBj9gy
N1OIR4Va9Ix4L/p07CEvvNekL94c4tGO3fgE7IJByVxgT5ALvQvxNL9OygU/
jZvSjMAP+tZwEt57R1vnLsw3b+liMp5WH08y/0uky4whP0+NX/yB/Jex9R6D
/K8IXdNG5B+NZngcgfzT88vIN2LkWXKLUQbknf5E+vuaNMAeuHwZmf8HC9+Y
wfqe4vZlhvwHjG62BDys/XhSEfAQ5PXzE+DhSngGibebqTcMCLxhcV8lEm8+
ptokroxYikQBV2NibSTe+JIFSHv3kxYBwGHGlUUk3u6u2kniTeh88E7Ac56L
M4m3tzuKLYzuluOMSQfFV+Y9yP6wddAl9UGkHUa7n/O+GJsq9KruI+Z5b5L6
fpZjEE0JLzkE44WbmHcS4zGn6pZgGH/MbdQXxp/xlFMjxuNTfofTYbzSPdP7
MF+jsLKjMN/9+3jI+YbqLyus+tSDp/dkRXe+K0Kng3JshBUHiX0frfyD0A9e
QhRH47IopGER5uh6fhCtkt2WNsJPwR+d3ooPmUcgv8wXGRQKFXW0WpHjh/m4
nYjxOMqsihxfd/d7KozXu8i1gRiPk29Xk+N1f9TkpXT34M8xH+MnmTBeIhSU
LnR7ENmHXpiGPG+6YbEH8rzR5foE5PmeR87HuqwuPN3LpMN8qxbRVEx8tOoH
UUTcrak4h278zVRlaN+JKpQUtv32WNYg+qU9kFJo1oP3Jp3Q4w4vRwc8cYmf
xiDiGlAVjmftxS0XN+8NLSpG7ZH8oUILBtH6+RorwD774LwG2L/pGT4Be5WC
gwHTbC+el1+uHtCN0VNHc7nSOCpSOtX8+tk6Cv559wJ7GftHpMTpe5TqTfC/
52qJtfcpOP550kKzqUQU/thIfIsDFa1YFPTxVR4FH04TF+p3O5clNdzwhuMY
FXV1Xi4vtcIohn/jjj/PevHj7WkZ/T+pKJRGkSyzwnhzhsJ2sBseupoOdqaU
C/oQz3f7jxpEPFjQe9VWiKfSV/j0R+UmvDJBRuTFTWLei6ODKCEDqHxDSzLk
4diSDfpEHnBC89lSyIO96C5LYh9h1s2uxcBjhuM2BrCPcht/HFwZ34oznRI9
TBfVoXRJ1JIaQ0P+ZrdnG1M+4xPl8Wdf2laid4/upZZRaKjojl/As7FObPRw
4ajUvGrksI3NWuj5EOLYbl2uxduN72zI7Lc/UIEUeEcmlAj9o7hFKwD4JH1D
8ivgpeWb3S2BB5bl3tjRsqgXFafeMLHJ78RN1+Kc/eQpqNJ6Ww3r/X60bzeL
1UPDeizHyluYc42Cjuib6hPzRe8+Bq6C+ab+fvUQ5kv/zfj7Xzu/Pjci/OMM
hTtHwP8F+TZ78D8lY9pI+Mc2BhHHwf+VHWdywf/HfP7oyLtUrPfaZsu8xkbs
cHrauMq0GyV3+rgvCqOhVK2OOLElqfjbxKpNiyc60eQGP6Hn7FTUsIGVN52t
Dgfs2l5/RKQX9UWw5VxkG0JS6w349cXeY5uM1CVrT/agUyxVWneFPjGe2H6w
OZKbyJvO/YHPmvPykMnFqydHWD/jIlfVAfHYYcZvxt//2kv2LhHQIn53R1db
wXheGbc+sIsrMc2GR+QznnjmbnPugNIYijQxOAHvm6ebpg7P/bE+4fDe+i2i
Ss+JcQ6rfX/D+MYInxwYX7mM9yL4Ne72aYH3Rr1u7gb/vcdkii30OnF1WPqw
9ocC/KZivrWJHQ2JB3N7EvnBfEJnoyA/D5qui0N+JK4Fs8T4tGPb5+8XiBsl
4M/tyudTDYbR66+XFoI94F4iO2FHF/bZeoK9TSrApVRmGMUO37nyuTwZx7Hl
VigSfB/9yHU3/3Qd8nLvkeGfzsMbx/7o5UqPIvr8GflAjDxMXdp/6e3Tgzkj
BkkcjR35eO73GKLPkzFvxJhvc+OMCeEfHx9X3AL+j1AKD4J/oWUvFSE/9CdK
SFuXBeMPIRNvyE/5w3heeO+oDWcXvNdFR9GNiB9/9Ui8CPF3az8qgvgfnTxI
zncd83oVyENtiiI535xPdW6Aq8bVKlNE3hDOO7oR8qbQ/bbsmFg7LmyVGZhe
l4MlxsxUVyoT+TfvX5FkQkNcmTrGh/vzkXlUkseT2E4UtiARQX6ERp3sifhR
p8DYIYifvt6M9UeMdW/M67gA+TG4dlWDyA/99xiirzdj/RFj3QvOxBhDfmgV
Obbgv0ci+gD4p88f0/PxNw/Kr5RMAGf0J5I6tS4U3nugeddHYl/g+S8C9Yl9
gc78/sQD+0JFUmibVdogXnSofqco0U+Fz19//opkD5IMOO4BuBKZbJ6A/JhF
Z4tBfgSmLEhccfFJqwF+pPfykLgaSmwrB3yaCMz8BHyy84pYAj7DztUsYdk8
hLoSeUJYbKrRzLjKyaiXXWj19WF/4LG790XYt8yrxvxJ8ZbAY62ObFXAP284
Xp4l+AFxfefPB35Q2/LwHkd1H3Id3bX66XALmvBuOeZd30v0rU0zKy/VotSV
Fs+kVFrRyY8/zno009Anp4SKzq/7c4ZZeD+47vtM/z2MnilULF11qRbf81QK
hfGee1+4wnjbjRwSwGuhJ4ytgOdUtocGAI8tLVzkrJzRjcP2+4uEGLeh2dVv
ct4E9CN2Jcl64LGiFXtdIE6TjY45EGdQo6sIwUu4e1uHEMFLKNx7pgJ46dF5
/RPA/86H9JpAR1nM5h8G/hfdd385kR8c6XXiHuTn2oU0C8jPebWYIsjnJjX+
aSKf6PbCO1aQz/MVw76QN7nQDA4ib8jMiYfk/3sst7YBnzO9ybMj+BbJO1x0
AL4dYTpE1mXBMFdrqEcBCV+KoR79U08xo56ukww7CPNnUbZZB7z+SuxFIOQh
lmlLbEV+AxrySkmvyKeg9vQHR3+y9SNBgdl8qKdhRZOIqJvoUHpmCtTN83Xr
1z4UyEa2dYKFTsS6Ve3Y3tsgNoAyV1mshTq72p6VHM9bdzMZxmtcuHiZGI9b
g7YWwPhzS/b0wHj6emD6+vxdF/p6YPr6/F0Xk7BqUs88O7b7CPQpmnG/SN2Y
3bGbrMuSzEonQZ+MLYwl9Ul1pFYJ1M01aauYHYi6uWHrpkmomx+oolmgf8SE
K4xB/xy1jr0E+oe/WprUJ47PF5uBHtiQuITUJ78EX6wBHaLy7dpaQofgP90x
pA458H1HPuiuk/Y9GaC7zhlykbpLmK5P6nee3EzoEyWGPnEYfEHquvWmDudA
10U4PSJ13Rthc9L+RP8h2BGLfSlpx3kppK57hY5+IPyj1yF2pP9LegOCoK+G
Oyf0QF8JXjQkddeHaeo90KUu8xutQJfqWqiTuvS6+TxSDzfIepL6ViMn6f5/
6GHM0MOVew7pwvhtAlxKoJ+748+T+pl7Q9ENGP+MvX8P6OfxYkFyvMGXt/5g
n6r9QNovjXa9A/s/4zFjPP+f4INLXhP6wbLsfoZnJj5htORLJ/MgGis6LAm4
OnKcmkPgBFdwD1EBJzXOsX6AnyLReaTdY/D7ANhLPG/kErjF1/8wvyVwi/uk
uY4Bbmtilcj8+OsGaBL5wYlqvk8hP2LOX0W6z3dh3eUFSeUrSlGS7eHeJSlD
SDprexDwT/r2M/wE/+DbVUqmwD9vfSd5gRdCMfMZ4Al59cdFgEP6b8bf/9px
/o1HhB/cLbJhIfjJQwuNwM9ExoQI1BffebZKRH3BkXsHPaG+vE88IUvwM8p7
KLGK4Gd8W0/tMvDzj6Bvs8B7CnkKvgSP4Ry/sfPAY/TfjL//tQudVasDPizz
MY8g+BDP/R5m1HVGnf9b3yef0wSBJ5etELgG/qsXPfYk/czVOUyve5hR7+j8
i+l8jBk8XPvmqSgxL4y0122Hee0tvOUE8wp/550LdTbikHsy1FnW7G51qLP0
+BjxKjPipOsJhr5QZugKeh3F9LqqzKindN7H9Dqg/Jf/z0w4g865WE+tIHQC
OtgjTOoc+jwZ80aM+dJ1CUOnIIY+oddjTK/Pf+syva5gep35W1+2+oe7gj5J
N1tQCu/1XT9ZCO/1Wh5K4q1m2ZMcAm943t2iHsBbvXzfA8DJk4ZpEah3kqOx
RwAnP+zWCcN4B68JDPj0L9xGgfFZgSNkn6W46P5hwLNWR+9jwPP2c72ZgH/x
X+bvgLcbVUQNAP+WWynLYXxRSZQ+8ANLFT+J/xE11m/Q37FLBo9Af9dmwhkA
/V1g3iVd2I8lByQewX7sstgzBvvx94Qs2Z9KPR1YD/3mrYlnZL/59tAk2Yfm
xqlugb41Nb+CtAs+8SL3tb7H2nDCD/IqnyD9NBbwFEBfLMptHQN9scB8r9PQ
F//DG5jBG//03YjRd6eLKJM8/CblzSLgYQknwdXAw1vSXMoBb/HqFxMJvKGV
n4XUAG80De9loE+a8z96EPUX1285dArqr8MyZSGoy88D+J3Bbvyh0BLsOur4
l1F4O74kNSqVaKqUM/ccRj0rm76APfxksQxhV557DqO4ng8Y3pvbv34I3stV
K0HifGtuRQT0OzJiH5WJfgex95odg37n1kMeJeibxqRLraGOd6xKsoU6vhRn
roZ57ea4tA763GvpJ8l5Rfw2I/vTeJO+w9Avd4ZOkfXoQESJ4sXlFBz2tuaa
XXguWnGl8krFHSp6ra260nF+Hx5j2fDWIuIOutJUuO78SiriDYxN+zNKwZxf
QkPdd8Tg6y4r8/I2UFHOA5YBRel+/O6r9QuN5624WVD398P6HnSh5OCCoZoh
lBpr4zjvVike/lTNHKDShTyCNly+dpmG3ZHqzCJaMT5LRRIzTh3IeGGJbJHP
MCrPP2OrvSsCo8+ms2dY21Hh5HVN3jODeDx9i55tZh0auDDN68nejbZT3z7m
Ee7C/pcHm7kXF6ORLZ4VHFw0tF50S3OJIQWf4N27ebogDqXlF/LoRlPRfHOW
lIzWXoyO+bB++JaN/I9IJ4XWUNG5z53kvOw5nGBeSDd19CPMq2qvLOlHNVNs
LeEHMz0sJf0kda8l81NlogH5wT8z2sn8rP2wUyttsgdn6xdlsJgXo+/UpS4b
VwyiJotVPUR+kK1qQwzk5/fadcwhRH5WVGRm6l/tZjyxpttOZz01CpLSc1r/
U7oD7WzgOqzq2oN7o3NzRwz70LohrqCFU4MoQjGpkOloOU5TeWw7aN2NeCsu
7YP8LHsfpkbkB8cy6fBDfvKkM7mJ/OOEY1OnIf9vzx37c4fI/8dgGmX7gQ7M
qnW05RRvHpZ3r1e2qaOhZb4lo2C/P4a/gj2bacVOsHN/nrhArBfir7uxkodW
jP68XLkR1quaf/tTyP9x58QmIv9YR5ijHPJf0z7+UFKfikvjPK8s5WxA5x+P
FFfJ9yChF797wX97U+gE4R89nP65C/yfV7TphPzMxFq/I/KD9h/+9AfwI1NG
0YR8jkgPFhL5xBdwpDPk03IiOR3yJhTWkAfP++Hp9pC3uA97jkC+YpMU5SB/
ilgrA/LWtc/scWVtN77jsNhI2aAEfdubPu995yBaEuBH4j/iQc89Av84TN6H
xP/Hj+9yQj0pOJLtj1BRbwbm189YGW9ORS+e3w3vwhS893XuovlXkrGlgckz
BRUqYhJpJ/HjftfjBewLj5s0Ej9qTbtJnLCHbs8CnNQfnNtH+87M4Yc6qQ92
pC03h5+QumjSD59HJPhBb/YKk/trmSBFZMqtFycnsdv/kctHT9IN+YLGqWjz
7enRq2speE2tk9yMcxpGN+0fZb+jondfc59BnDv2q86DOLXUpMMhzqo7s3HM
x7rQ2Esrh9CZbrxu30EUXU1BrPvUtSHP1GDbdMiz4+kXTpBn7U0etw7l9iHx
nOR3Z5jacaJ1lkeEWw8KZ3e4S9hxqMe8JLBz6q50A3v1/ZI41thO7Opd3l1x
7CO+fyu44YYnDalv0txK7GusuDDnJOzr/CVXpmBfX01hWjxvoB1/D8xw8j31
Hr2a2enJuWYYjYvdIXngZJ5hBzEehbSLkTzQhhaSfnK4XrWCXXi5BulnW+qc
n610PxfofjjbN2er7+/C7N9kFlp35ePXKbsfbV5KQ+x727RLL1JwigTHj+IT
behCUw3tHS8FsfuF+8J8g2RMC4l5IRqznjvMS+pjApnPO1sO8xD5RL+ZhMl8
utPasgEnSz3xEgInKPPSjVWAkz0iX8h1WXwqSIFYF5SSc4JcF5eBKMebn4rx
sJHKp2DuXrTCJkb2B8sg+uimZgV2b65gsOMv2gJyYO/YwGf0k7MXlxtUV1hS
i9GunNR9fKyDyCHu2KeMo734K8f19p2CRciff+fOiR4q8lz/nYwn2z+BE3A7
ejeKjEfsya2nGpVduHX18Bvu1jKkf/ZXWq3VEOIpfau0kasbH5bmeL7ndzFi
V85Zh04PoeyUZck8kj3Y41uWEZdrGTqLf1O1Lg6i55XXFN8H9+DSNU4Rm2kl
6MDxJye59g+ilY1+N6Hf/PUsbkyK6NMzJ0+ehH7zWcEFUoeMeImkgG5RePGR
1CH/8DZm8PaYiw73rVoaCuanVW1iz8bX5k+P3C7tQDq5WxYRdtyo/KkE7A3z
bw2AfTZLKQXw5idMmwa8JZm21wDe3n+ttPR62IKLBbr2xR3qRWYmYr0qx/rR
1yoVtjsHmnE5pz/3QWsKEo8JVFfN7EN8OQn2kP8OIeE2yP+BkhBpyP8J7QMW
YHeocAA7EnvDJgN2eaa6N9DnHriolwz9wmjsJZP/X7/g9pmL7KMfn/7NDH10
QKGdIfTRhdxhz4n6jramLtsG55mu9T4noL7H1CwqhX5T8ao61f5ABVZZY/QN
+s1PX9JIHgtRDd1P8Bguur2dFXgsvHjdbeZDrXiPT77IS823uNdyp4qs4Ahq
PZ621pe7Dcvq78996huOc2td9ebjYfQp5sEtGP/0VaobMR5dq3mMYPzx7w4R
pZWfMeIeXf3y5ns02dldPe/NMIp3z18O56ghOrar4Lziknh1LZxX7OA8+gzi
X7LRaQ/oE64DFDOIX8HEjgv6ndpj9a7Q37RPyeRBX1M29EIceLltdJMRwdOI
7WV0FvAzz7HRfcA/y53vFJB1E0mR/LM3rI3k4fAoCgfsr27bfpKHb6a2KgBv
L/qkex1426zm1lXg7QMnNj+D/DTwd2gBz1dNHmCG/Ah4LlkN/VXnhl2nof8y
cFycD/HQ6wem1xPMqCO6xacq4FyFyTGCBucqa6sfkudUW0XnpQg9aMcyZ7v2
SjOXIlzbFN4XT0PfVTiMps0+4StPK+26vxajiPPRmD1/GA0EDA6tOvwZO11V
Gz/jmI/qAyQvU24Mo0at+VAf0Yn1Ja5EfcQy2XKVUB81bJ1JvtI7Nz1rRfAV
9UUKyVc1o+bqRH1HN09JHAX9Y84WLAD1/aP+3VXQN2WycB+B80Y2cT1H6Js6
dX4fhngo3jFeEM/Wz1tzIR6vwxcoEE/GJmYeeyKeiS8XyHikFzwvA7y5GT+Y
BbyJieJxwFt2l7bY5IMB9Hig4qXoVAtyGMJVVrGEXplPewV4PtTHxAH3LCu7
1Ug82xScjAfeEM4btQHeUM41ogFvlF7WSot41ot3KXLvKdhbgI4u/SqzuoCK
NDWEWT4tKMI1E0urZY/1Iq3bFbvru6lo6sr6VVDvLkTsOQH1zr77Jy/Uu49+
j97rlfXitaNiMTmDH9Er3rc/g3KoKHj59ffg37esUB78j29tlQb/q1LCZ1kH
e7G9nr/R+Yw8JFbmq6XylIpmPL6YtXT04vPjt4rN3fJQ0mvJuoyXVNSf/ois
708z0jmA529+P0nWd73gKFIH3hHu2QR6sm2bNakDtxXLijY7E/r5eXzysHQg
sqiaPHeb8G+oRL0YRfjhPdf7YQXTPfTQME94vzEVPVi5hBzfL9+XTozHz4y5
vWD8P7oUM3RpYnTMVyVJCg7Nfy2yZjgTa1LEuveHUP/VXYihu+4Ub/YBnXbu
qwQzodNw1JTnJtBp1+KurYZ1tKxMeUKsIzbNOV0D61jU33EukdaPohc3WEuU
fsJNpksPee3sQV1ZKU7JhI5qTe9r4RUtQRuyx6/bOhH9VHeZJlE3UYDE02Gi
buJMq4hxqJt0ncrQrX/1Kl1nMHTHX70R/DpNB+qvu8lgP/gpGHkyCn7qvnOt
I+LELTtVH0KcX06qV0KcnnFdYfr8Xdi4oUgn62Ue9re7+/qGBg15sEaFAo8Z
rXorDDw21nJdCXisMF5qM/DesubGHIL3kIbVysPAe0m9fOT4mH0vXIAn76lT
dsL4AYp1PMl7SoViBO/h614qlcB7//AnYvDnr8kJDuhrzC4/CyB0NVrL/ZsJ
+hrDsmjfwAdDiJ3/yEyZeRW64O105uGKLmRlr02B/kjD8Mdb0Lfr1Vl+gb7d
8eFyMKHnscSJji5Cz6OXg9ga9Lx/6gVDnfeD2Pd4RVzXrhpUaefX06HQjXab
HucCPa8vt+UmvJf22vc36PnvMV9g3TGnaKQg6PPah32rYd3/0T+IoX8qvb+q
wzpWjX6YAf3jcqBlDPK/hm2/UwMnBU2e0qzjauhA0xqrFeWf9SJ9N5aXoBt9
O664w3qW3Li8E9aR1rpOl6izaKO9/wGos/obFfqhzv4+503iOZODm8Qzrqt5
C3g+HzRJ4tml0XML4PmLYGAX4Lkpu2MM9FKQ3/AO0LFqzs9DQC/9s+8wY981
jjLH2byk4JfrHJ+4/n6JHTP1YiysqagvXYbcXzzzfuXA/pr2myD34z/7DjH2
HVPOALlPY4emcmGfqhd8JPdppQXnjxaCl4SWra4heAlH9D8ieano0o6joMfS
mDeWEHoMm1613A96bKeaeTPoMdaztR2EHsM/HZOUQI95tO6LBFw9WBdVFUPg
KvBFQQ3gSqA4iwt0zk7LyzOEnkGUKkNS57gLPFsIOsftruN3sMtXU/vBvv1w
BmuI4DBuiZYXDBHMQlIiqrR7le3oSU3pY9B1l//8/gC6LnR58zvQdcdvdx6B
OEUMlBpAN8Y8H9WGOPefWj0D8/IN6CbntcgtSwXm9eix3BjYC1RU6oGHBSdD
EdjfbvpAjn/BNEPyc0/USTIPa5mjv4J9Bbsf2DHfqKkq2GXM3kte36CVs6eS
el+msBfP/R5EvLlJz4bME5DC8f13DvVSsIdd7OZfG6nIb5H7884d8Wj6e/jM
y6E+nG2TaZOsPICarRrbbNKqcERMtJu5TC9+dHEbm7U9FU3IO6786VmEn4cu
YQ54TMGXPVY7RTQOIGHLPdnjEYW4GLFGjEf0YSPKVu+o8X5UtP63DejAdQWF
agQ+sT+teQDweV5hC9Vs+SCWbdNlnxVrxDu+qK62qe5CFaEB84g8oz3TZeMP
BbPwN63hr5BnxW1qbJB/ry3cI2D3M24g8x9Scu0NNZmGPvZrUyXnqyjPPbvQ
AtMS5YfTNIRQzM3XZyMRkroSMPW9A/FdrVA+o0L0Jf1dGWGNEWirkWZ87vd2
pJDInkj4wZOPJ3vBz9yzCy0XDVUh/OA0Q7/r4Ef3+jdf8JPt7qpC+MFxp2bS
wI8f67KX4Mf7viSp84c7b2YQeMCRh0+TOn/AzoTU+Uf4it4QOh9HX9lJ6vxb
eW2xoJ/5s/JmCP2MOKjF9aCfaxQHz0JdKAll8SDqAtr/JlMH6sIzlyEh0LcC
P1ThvgDLSD0jv8fYlEgxBLz5+LTUwb7o2e/1X30KZvQplrV5L4n1RSrnFS4S
64tS7rcyw/paiI9KTeysQ9GH2AtzFlFQduOenezbBpCOU09U88NaFKDhqnxa
uA+9yWHfTLHoRyfSnqwDvNVvefuEwBv99yAau701BPA2ULIzmMAb+maWshbw
tmmd9GPAW3BEOUvsEFGf1kxYAN6KcGUj4G0m0MMb4nH8FjZrRcTDycQtCHiT
keDlIPCGmuPO2ALeHt5iSwe8XctQjiXwhgzjos4C3ppl3vW7P+3G2wc6tlhZ
VyPhXfufTt8cRBa9Z3x1jHpww33PuN4L5Ug30CU/j+ibFr9nSXB61YOdcvku
YudStCvQcF6E3CDK7Iibhf11TrK6DvbX4cAF5H48/czlO9iZojlqYT9WpY2S
+7eFR+u+XSsFq0v5Rs0+i0dDZ4fKnsgRupzJidRdgb9YlAldhP3jxWRBF+21
uB1R+XMAldy0uF9ztwkvfdcpdHK8G9l2DpH3v8ub73PBdxGDBvq8cP9bN3BK
Hu5/R78+Xw73C4N/FnvD/cIbFr5g0LFeTBnX4ZznlHpPGejYhUKcCqADOJ6v
OQjnMUtzrLJBD0if3vPzSUoXbilq+VS3pAhn+vBeV80cQjv8npj8utyFpZ7e
xExshbg7ZYzr7cAQKrBt0QqQpGHD6e9cC9NKkI7A4Spel06k96EhDHR+ifKR
I9AH/XpbxQQ6n37ug+nnQH/PfwzvVAzCugTNrFkK63JeWYJcl0MuLH6wLmZL
jofAuuwpUSmAdTnkKUOuS2sQqyesS2BSCLku+qULyLqz+6SkH1F3UJC0GVl3
hi5WkHXkcl1bKlFHsM2PVrKO3HHf7Qr1VM57ez5RT/GFeo5dUE/HKNvPEXZs
Gbo/G+zza/YogH2r3M2LxL7D191rzUGPcY1H7od917Pt3Cq4Lz44sIcTvmNB
nI+qoP9qWGn5GM7Zgpf/doQ+4ulkbink35fLUF9ygIpjrhb6eprV468JxSEp
od1otmR3AtSjsKPnK4h6hMSUVldBPXLduQABX1lt+rmQ4Bm8VaCc5KvvZQsQ
8FWIzRZVgmfwyVO3SL7y+dNG8tL4nlZOGK9mp+wH4yOyk0he0h3apwzjP/Ab
kbz0jx7DDD22/r6dprxhO74Rl5Bll/IO992OUavRHkbc2McQ+pfP+xLOEf0L
3pa5gOynFLtnBqF/EVsgvojoX7Cug/wl6F9cLi2qsvvchtf5aWzfnZeH7w14
uBRsHkYKRWtuEXoMb3P49Q30WGEn32nQYzPCO8h+oXNviyrsi1vzz/1Xv4AZ
/UL32kqyX1goEFxJ9Av49idmsl84tjhr5IdnEVp0Uo8T+OHHmx474IdJXYUA
gh+Qqtu5OOCHzR7jHsAP3ilUS5p5Anb0zAoCXorlFSV5aUJH1KxrRzzexqNL
8pKagBPJS39CpQ2yz1Lw92eUPXJTKZhikr3G/RwVOZyf5wN42x7IVAx4c5WI
I/F2tXjwNfDquYSrZ6Fuvu17wA68qrBv1QTEeaHNkAXqZqTXY2eIs2rA2g7i
+bio0h/q8kaRJWRdviJvbQ3xhFquIesyv+EOsi57tVtrEvyMX58YzCT4GQeb
SigDP180jMwm+Bl7cQvKE/yMwzm5tgA/81svfxzr1o5NR4K0TtXUoBzXcxTu
1TRkf7lnnsLeThy6at9XuYOVyCmY7YvnlyH0a8sPA//CTrxsp4/qjR1l6Cvb
1LDDnyFUWnNdD/Bwq6rwDODhRWg12c+uY7LtAzzMjxafIPpr7MHnfgXwcPTY
xVLAA+fvsBWAh8rZHDfAw1RB5w7A21uxZjvAm3VpkibgrTSdlaz7r52+rQR9
Fcp1bK7us84qQN38cX1ZApyPuXIkroe6yTeosgfy4No8mQd1ahtP5w7Ig9TZ
4AzIw6lGOyWoU5p1XRsgD4/StpP68H5GKwXO685OnSf14SWJkxi+H0isGoHv
J3GRYAb5/UD2SqM+4CvzOyGCBF/h7A0Tz/6DrzCDr/65j8OM+7hvV4vIfrzn
6wcToh/HMVxdZD/uJSeD4HvCoFh+L9NFdVhNbuAzfE84WeYyCd8TiilZn3tp
W4lTOda8h+8JBVeLxcK5x0fNE/ukmUvxB4HQCDj3CGuwsFtBo2HdAblTA3Yp
SEr8LaWlrwOF/b63C/z7aVfcgO8VUfH2VvC/6LrwfcDDrVT2o4CHtc5aJB4W
HFT5vYPAQ3LPYe6tBB4KB4RJPBQvXSwHeqCj9Vc24G3lmtsqkOfrFfMeQt/k
+jUWwz2I2428k9A3tW88Qn5H8aBhP3y/inpaZcnvHP65l0SMe0kpyi2yT1GM
GPmd8S0bUZt6yD7ln34EMfoRW3l18vvkDwJXDeH750vvSsjvIv65l8SMe8lA
2uaVcI7hvLcJzjFw97J35Lk9/bsZTP+OBjO+n6Gfl2H6+RlmnJs1jNoG7f3S
gZ9uzNf24S7BMfZ9oUtNaIgSflQH8py4+PQ1WMf3H+82QZ7fyq7/A+u40Ukw
ENZRdmpjCqxj8RPDbPjuUWZczxi+76KdUCS/e1z7jV8Gvh8Y+XZUFb7v2m18
9BLU99bmm4Fw32Qc198P/elA5MPTkOdl4TwT4J/WVRME351Kns5JA//uUpdf
Ak6esr89Cudj52zZSJwMd2zIB5yzGLMZAc4rWgO9/+M7Ycz4Tpj+vSzj+1nE
+G6Wfn7HOM9DjHM8us5g6A7E0BtWLlvI76vlH06Ywnpte17JBOtVIz5Crtfm
yebXsF6/hG+Q31fv1l2+db1CDkq1987RLqZgf3at/oAFVCRr5RYCuBVK3XaE
wC1mvfq9B3BrHH6CBXgsnKl2AYFb3KCQMQq4/UcH4v+hAzFDBwpszk+NjG7D
RpFTCxLeVKOyhyFPXX1o6Mnhr7Gge19cEN0BvMr2XUYG+CSOaUqiun8IVw9O
G7lcT8PB+yg/rq7sRoq9l4QPmAxh3qwPb5fE5GJBsYJyOD+hn7di+vkrZpy7
jlmwTauNUbHiCWutDINK3Kex22foVQ/6w5bakBdDxS43CkJenqzFNAUNV7gH
KVdfumH2aStePPtQqq65DCu+GxswOTSMtE6M53j+acUthXGF+pLF2Gp7jy2X
wzC6u8kyGfCwYJu0AfDGhXW7yfPS8J8qhTDf7kU284n54ks7nz+C+W6ZfJ8E
fJVY+MUa+GqRmwd573A7f+9J69vdOMD78+X6edX4SIbQHYmwQeTztpPcXznc
Z8/A/lp7JZQ8J9Q4s53Mz83nPxOI/KAkodNkfn7XVrpOH6Xhpp8qRw81RqGV
RketTt/vQvzlWnvs42n484/yDk6xKHRDlnOWeV4X4zs2TP+uDTO+Z6Ofd2D6
+QdmnHukb7KJ1bvcg2V1J+M77hZgt12C0R6PBhH/zY05t1N68KYApuOsxYV4
DV/hq9eWg+jl/FAbz+5c9EEPe3t2d2HZY+cc+D4PoU22/nGF0iVo4Jfl/uA1
PdixyrBqWewgYpa5cSxDrxi9CApucXTqxfNNjvREZ//vOnK0VpnEYRZf5krA
4eaksTDAoeE+4ycrI7qxZGxRXe31aiyb6bYw6OogMsqdCZIX6MCbXwdqn/nR
iDkOxLrVEnyRcfLBk8GuTqzfN2T4urIevxcJs8qnDSJunbBjflVduL3qQ8/t
jFpsHc1lFoUH0dQGU4XFG2l4Ay4rusqFkbH6DseQs11I9trU9VgNGnaI1uBa
VZKKTi513jDk24XE7unufWn5Fhlkl1itcOrBhbNPSgb4ibq/um778n25KJa9
28BYrwd37LPcqjz0//RNmNE3iShwLO1O6EHyqbc9zxd14RAT3iC7pt5/760w
495qBWfua0PKINYaXv68eVUdVoovZ1vg1YWaAopdba4No2Dtnto1nLuU557t
KNWEZ9WBoA48oSqSSZmfjQ1uhW/y7qKhAU6WfjhPKFukvXRWrBFtTK0Ug/OE
TyJn9oGeKbQXOg56Zu23F6OgZ/baJWukaVPwK0njXYb3s/Gm5Iwk+7NU5H9W
kezjrLhjsog+Dt+4/ons42J+fckw5uzDBbO7UcV9DyWl3M4oPhEqMpy2CITx
i2UvJUHf5930vBzGZ3u9G4N79g/m55vgnt34/HfyHv94QTmGew76E7WXbbOF
+w7hIpO9cL/wxjpoL3w/IO43sATuF7il6tfAeezCI8aRcP7PEhRK8smh50/I
+5fFOcT7w3NR5zUl8v4lZLlrhPqBXmxT4bqXt7EQsYRPT9SMUpF8IY2cr7Du
Dglivsiu7g8538ikjeNwHojsNy9bM5yJxHnqyfPA50MHSN07LhYjS+heNHa6
i9S9jDyMn5WTI/KQxcgDx5Zfe8C/aYCAHORTqvJoCvj/574AM+4L6OeYmH6u
iRnnmYt/up2Bc+/XPnGfeUVLcAJPux+cew/Y+UQT/TIe9W8IgH7Z4zPXcuiX
/YLQsyM/2/Gq7A0CtvcKMbucmNmFjzSUms75COp1xLX3R6FeC46MPoZ63S10
MxbG2y11XwXjH/ZVHoPxNRdZXxI4RGGy7CkEDlFlxXwOwOHKXCcDnfeDKPXD
wXg4B47RVO2Hc2DO4rY4wK1bgkoijF+y9hErjA/sK78P790Y8s2QeC/6XmpI
6oRAx5QweO+emGgx4r3o5elwU3jvtPYGcl+8cAlNgH1hUSZC7ov5e4zJ83//
3Rv7IA89+Z7k+b97wCk7OP/tb0hMgvNgKncrmTcutvT2/eEU/E1Lxcxf7h0O
5PvC/+ggFQUwaZq9/E3B89N5Gz+8CMN7nwd/fSdO4IGJj7SrmmiDHbFaFZB2
zx1r02G9hD6WvYf10pFz+QHr5bjBMwj6qevTypFwvieVfOUC9FO1r7RJPw8k
J7LAz4rmR6Sfc68ESHttrWQ2vPfTkxLSnr75EBlnGfddQ4jzgJDJYogz+obH
c8BtoXiWJoFbnPDQ+Rvgtk9a7DecV7y45tRct6QIDYesvQLnFfxLeYSAB9qF
hF8AD4wN2UoCD3RVh+jDfg+MNzYh9jvG3lU02O/h6xtmwE+Ppg0Fzj2G9r++
DH7yC6ynwf779NM+8F+jInoV7A3f6uOB31hHVl4DfhtwEiT5jWmeGLm/3EwC
9CBOlpB75P5ydNxJzsvaOdyKmBcKPKdKzmuhswQ5r5rkJn3Yj/EB7OS8/uEN
zOCNXC4Nd4L3MN+reRXAe3PPdsTjnCAI82VtDs8i5osuVvKT89X3km0/9LQH
637awfzzaxdaX5aq3pHXi97JLAxNM+rHX1U7VdOsP+OR6AdvJI/1IK/Ll8zg
nEe2LqiFia0QKfv5c8I5j2xn0/cggodU++op9653oortM7ejhXqR60Kb5L7D
vYjnxNI6q51daFfvVffmN71orZddGti9JorLCDt+cuSBJ9hr+I49JN6L2P8Y
a8J7i8JU38J7Tcs8f3Yzd6LknhULrhT04N+B/ZuVCylox4GDR4ovD2LulRl8
1Gf1uPbWj2Nt0V3IJe2UiZ54J+aU8KLUjmMssq7Scuw1DUn6t5wAO7vmXsE6
wr7J77E52O/ZSz6H+yl1c1FjuJ/SPBYfB/dT3FO1ZlpEXe+6+vP7msXFyD1E
7xtPIDHfN/eMwc/NY9+ECD/oO/si0r9dlWMQxH+UQ8uQiB/t/dQeD/GPNSUc
YT5KwQURwfq80jnYgmmExmZLRTUb/DlNb1Dw65v5dsXRHzCLt7dQw2EqGlhQ
Wa3m/Qwv722KN9LsR2/fiXhfgvPwamUriMcnK7sV4slzPT0B8VQbehczaQ6j
uOe5ZVuXvsdjJuILl1i0Iy+ewRLCjk8+2zJL2NGGhYvZwK759WIp2KOr+gpg
/EBhAml/LhpmCf7Vi50nCf8YzdiOg//E3jwSny+X7YB9h8a6Z0h+oPMIpvMK
ZvCJXdM4hain6NjO11xwPt9mlrEW6ukoX4ngm1gqvvym4p2aRxNOvBOXncHW
jZpiCntg/KR9tBDU30rxPRIwvosaOA7rXjB/hJdYdyTtM74e1t3Y6qE/fL/E
SYvH8J2PxnCqM+hb24O9BpDndzruWpBnr6DKYciz+p31qXBOPvx5ohPOyXcy
vaqFc/J/7usR475+x61dhwhcIf+uzjUErlC7wTJTwJV9ZnICzHdR4XUX4FF/
Le4dMF/fn1MRgJ/O9OL9BH6Q9eqoWMDP1E2eLALneOZgcDHgfFtTihvgnMWj
vwjW65zTArZtxLrIRd3ghvxzFD0n70lZx1aZgB/jP+LkPWnMyi6jvspe5CRi
zNb4uxM5bZFgu2nZi5YEVa3getePmNSM1SR/tqLGHv6WKt4eVHXEMf91+hs0
uy+Zb5dEP7rTGdd0i30A8SiZcPYwd+IBxen5sI+8dztsgHzurzVkcvpARccq
k888OtiEljifS5j+2YXuHXOfB+OnzMoWQv7fSnlJwPhHBqR//HPOPw6m+z+r
se7NlXXdeCVTpA6+VYR6v3k5atsNIbWVFST+Vwrc1iTWBQlL8JLrks7sROqx
yhuPwoGXil7+IPVYb+5ALNRTR6fOSNB1E3qKnFAfjfp3esP5Kv8tKUe411i8
pXofnK/yXOkg9cOa3xII9MnCXdtI/ZDNTe4jJDC3j3AqfR9ZLv7IAfvOI+P2
Cdh3GfOMhGHfKd3X0Ac+CbStEoV1H3odaQTrXuBfOwX8tiDSuIngN5yxqzwA
+O0fPsQMPhyRqf9DjMf7J9bUwvhFRyNIPuQ7wX8cxrN0WucAf1ZqeC2A8R8v
54jCOl4dFpYm1hEbZOi0wjoqxLNnRFN7sJAOc959gWIkeNtA8tWGQRSpfGcN
MR6nR9tJwfja12ubYHxb2K93MP6Fl2E+MR5Px5dLwXgB5j2fPJdSsa/ZO3et
k82Ys3WleNq1blQtm/7mdEg77grrz7xl/QzbxZ9Ylmg8jDy2SCaDfdjuxAew
O8dMLgH7P+MRY/wNN9WzcB4u5mtaAffOV9WOy8N5uMm1ll+Qh6vbwjqhLqw+
VO8HeZhcapIOca7zNWqFON23Om+GOP95L2K8V0OEOwP20b2sniqoI58sIpxh
H8Uue0muo++poDPEOiLqDkVyHVeYiiUCDgPly+QAh0kR0w6AQxXZ9FM/H1Bw
1Ur/R0WlGYh5nan1ES0qynpXPgPnxuiUojGcG9ssytaGc+PDo+KPoA6iAxWH
gc8du6VfAZ///vNBTE6Zhp19fmdsjyxDI8sX72Su60AlWZcT4L3u2PIA8V4s
W8FKvndFd6cJ7F//qurvDb87cXCTAAfsX/Olny0IOw7XqvkC9lM7XFjBzrUl
hFc2gYYmWRct9d2dj1rKbhk5RHSgkIJr/IQdbz7Pxw92h21yemCvbXCZWhpL
w9V+V9ZMdhYi7YRVP533diAr68r5570/o6vLDr0I7utBuexcAXLtfcigZeuJ
KNs29KaL2iug0Iu4ZRLLd2v0oTtPjTcwm1PxTe2KtZrzm3FIfSRzo1I34hi4
uhjeO+0nOnljdz6WvX9AH96731x4b4AkDamF2/DD/Y7j8+tNcL/DI/50FZEf
VGLqiiE/uh5WuyE/P/mOGsD3BrdXuGhA/309Y2wI+m6NikcXrDc2o5o9p3MS
dIk6OXGtrr+5D/kbimvD/dFUy9sR7rQSnFRTXQ3+j+J74pD/fXEdYYR/3F4u
qwz+g9o0YhSy2lFO9tV809ke9Hnn907z+X1IpWXtE7hXdVA9kQD3qvuVTr+H
e1ULcz1FOB/+GmX0Au5VG/JlNsD5sI3AIlOog1bNvh1QB4NNin5AHZR0zLwN
9xHnWIKay8yrcJIBhy3cR7Cli4Yb5A7h0rhtDR1/qnBW2w29Hdc6keKIITfk
f5Wd7BMi/7hVzu0+5F/jYrc15F/tzIp2Iv/YImu0GvJvluSzdYF+N05yrzyy
+XEpfvxeM1hDbAixR98q5EnpxvfFMn23vijGF3sK7myaHUS3JWJI/RD6OfM4
4L9eI5TUD7eTOPxeOdGwZrnzm8yJQiSWdWWlIFcnEs7r//r7EQ2/s+VtWPW4
EM1OLB78fqsDFSkaPzjdT8Nxl59XLwzPxeMVDx+e3dGBJrJ3zFtxqREdmDFk
d0zrxbsO6ZsmVfajA5Kpu2Ljm9ADI8klRTwUgleHz7bJ9SOR/aduwnuVH6cG
E+/Fa862i8B72a74/AgwpOEA+ynqe50SrHvBTqJ+rAOt69T9/oQyhLvUV+i/
u1aOY2PeuVGbiPoW63vtbtEQPpP3TupJbyX2H2TTOZLSiTKzDsZxN9Cw1sF1
obbjeXiXyLyE+2s6kPG8fpmSbd1426r7sk88SpBCfvmXyxpDaGGz+NAZnc/4
tefGGMoXgkcdTng3dfehUmHPOwtye/FvLgGdJ1/yccMSPcef8QT/H0JcdX2E
Tv5+qC9QLgeFCm15nVRAQz0bjRV/lA7iFEvvBuXJOrzVrzo9/FQXyjj9yGWc
bxjrZI1kC+RjXP/2dohnYjsSXcqe9u1nB36t3Z6/WDwbC2ylNIzk01CUZeYL
tXoadi+Pb58/m4eYI68vuCDRge6H5baOHezGCvfCQ9ZWlOJdPnXRbfD/Qd3n
SBnT7cbP687emK4uRbJa+0O/rxpC+x97lqQ6UrDeNgWl+IIsfPS4sLWSCRV5
+EfojJ6i4HuLH3W7mmWjO+Zd2T3HiTprPlkaZVOF4t4/2Dwc3oc5jiztlNHv
Rw7uRW0B/aV4JKSc72NZH3ZXk+rYd70fBS9e3vZdqRvfPO780/R8KdJwWuB6
RHYIMVvM8kkOdGALNMW21z4XTcWVpqum09Biaetp+xYa5ve8Zr/tZz4e70jN
oQ0SOvNU3a8CGg3TaJ++pL/IRb5cZU/2EuvlaLba2oSos1XW+Mv28nok9svS
3OxxFxLmLnrNztOGmoZKN5816EWRJcNtY/v60EqF3m8fDnzCZ9V/VEl49qJz
7edtBdn60a+9C9WieftQY7JRI791B65yCft6520P2hnINvDu+xBqcpUrDwqp
RImFIaLBop2o3lgi59MmChaWuvj4wEwuWl9SOG/4HBVVHxTxGSXyH9sgLihS
UYpovmvEO4j8G9P95LiTfnBNwZyf8zcv8HME9OBDa/90iAaXIKMcwc9qRwZR
edQBx8Ajw+is2+TSrcrJOFPR1t/tRDtaaOmtPP2kB8uo6dw7LVCC9cQKnjnq
D6Juejxx0mQ8mJkeD7dPaWRTbDOK3D2klmpNIfqB4alNEX3o6/B1rSjnz9j+
wJs/7oM9aJP6JW4Vgk8Uc5dqrYynIdOEO5GKZ/Kx3c/wFw/CO1DBXDyY5k7G
g8ro8az/ETY033cYsZ52/JNbHIXLH9lLMHW3Ia4Kq9/KwcNovsuO6VCRJ/jR
ASmu7Jw25JB3rHm+MAU1V0yd5iH2p8OO5l8r1vQiWakJNx33XuTt+c2kQ7EL
FfLIrFe53YsOb3qfsuYLBW/6ufWginEsEkmebUpdS0U598qsM1O6UfjcE1cN
58pdG+1F6qbWDsys3ahuvf4lUzifkG/JLlWnIIVXGnbbB7qxkNKvwDTREvQy
R1prtp7QhUOV8nr5FGwSekMh+GwK/pEyHrNXkYr06O/1mSLfi4Xp73Wgj4+l
j/9JH+88qzntm92Hgr1D2G0WtmO0SPVMjUsP2v6HtOOtl+fsnQvn7Ofki5JK
Ajpxv6F4nFlpLt7x1mDI7joNjYW2xJU0dOLL32plP6V/xMUvBGzrTtHQmrl8
YhEDMp9Il57PBcECBVXGXTg7RsPgsHoBXlfsX7aSg4YWpD43k9rRhUO4Hsy7
fycfG43zVP+SIPpTepzFc3EiDnqczicW2GvWUzC/2g8b7Zgk9PGejqO4LBUx
dxjsj35IwZsfc5wdfp+O+hZF3pY/QEW8q8eN91j0YllfveAd7oXoxufji9J7
qSiv/vAqmjwFy4//DBu5k4v0x47zXHOnomUrHG+KXerBd+0S7fJzS5DAFcGU
NNNBZHnj2Fot2w78IPNXd/PtDGz28ZKt1hQN7aLnIXlyLg8sEXN5KFt3Ydvl
qiFUaGeC5tVXoXfCLe8zzDrRaXEP/m8jXVhj9seqrvdF2Eb+0aGhO0PIt/Ls
OwL/+Dc23Q34v/R7+w/Av+GVnljYF/eVL+4i7Pj+gQd/wN7eevuxIoETFc9t
piWiJfiU6udfvwicNI51J0mbUVF4p6jMfKZm1MPecLBPlcDXOvRnt3Avnhz4
8+VNfxHalWxVPck2iA6dPzqkV96Dv7wrenl6vBj53HL/9Up2ECnU6J/bEkLB
+snP0uQ/pKOA8Km16fupyJqOT2c6Pq/S8Sk/h2c8Modn/JmO5yj6us+PnVv3
D0Vz616bMrfu0wvm1v0yfd2bFeU8OHUHkFwyKp5u+YQ29W3iT0rt/j90fXk0
lW3UvqFBhqa3CVEkoVQoSrKlDKmoUEkDMkZEigZSSTQYi4qEhEKDkFB3ZkLm
zMdxzsEZjNGE+D33c8671u971/f1z1nttdd+9n3tfV97X8/zrl7wuyYqg+v1
/mLzfVwvkXLzubheM1TGu1heNDRTuaua/qMcmmr233O3YsHQu7VL/ozTkckb
6z3OVwoh/mXnjohQJsjcM3Pd48+BqVMypvdflyH99Lxb4R4UCDsvNC1/gwOH
coR2l60oR/wdXuEpVhQwmT/T4nBcHzASf++L125Fv1YnLUm41g0KSRcdwrxp
6GHOi0nJ6jLweBjVWuRO6P+vbd581nRUI0iNcjlMRbSq6qG4W3TQtG1XENnf
h8aHtjxntLSixuI5nGziXOcNsk7vWERDv6JZIgp55SgA1fifSGWBz7MZOl2X
2OBXwThmvKcWqs9MyvkIUmEdD8/QFySeMMLD8z0Pzx3cewT3eHguKyxhrHjX
CpGUYPcq/O+hSZ+RaSPulQzvXvQHkPcC+fDuxf2hOjy/IHlDLzm/hhdz55cE
Z2N0klI/6ipputHTkQcNiXznLoR2giulYlM7MTfVl2UnBl2rgG0bJUKFiLl5
T/oDU21rCSprB78N33rQp4+rIleW90JjbUge7nNO/ogm7uc1Ot0TuJ9lufFB
tZSMj97x4svwnitYzrVH8+yvePfuA5d/oJnHP2/2U3TKrego9tDMBrmwEvTY
YD39OHEul6o2/d9RdcB8u1YtTqMHlBQuaQ8Z9IIiL88ibp5QzsvzS6fXT7s+
gleLpu8NnUiHW1ZXNmcqMOFzQPUfnWOdaGjpYw2+TzT0dceiV5PWxN4umhj1
KIXQuVr2tYqpJWj9SLd5eBkbgurtTkxVUtFSu92PFdVLkfqtZxcNX7Lhgs3F
G/V3utHsz09sqofKUfrJtR7bZrFhFe9+HdlO3i/0jHe/KDI+e4h+QB+DHx3c
T/RD/aBt+BWiH1p4fX7nNdnn6BOvz89xzwWId64K3rnCuDgg4QwSByTIw6Hu
eqxssGg/KEZJLuqqQ3DMJOltc2EniPDqMp9X9+XPufg7rxionVAndESQ10dF
v3JoyK4t3KLHhkBe/O88nCV58Zfx+o3N7Te4weu3ozy+3etI8i1awuPbcF69
xrlx0EJeHN0171fANRr6LKJy9kN2OeIbPMl3nfA3Wj1r5+9HNMS/zzm5X64c
JSioP1Yh9g3mhtExrSVsxDyive9TTx2Kmd718RMxt4uqxEvrb/dDvQF/8kKd
W1pnFv2ZSR/qgBf6fsG/F7LQKv5io92Hm2DDozMjT0upcJY3dyp4cwfx5s7R
saZi2+XdKPDGlZSPjG64sez+MyV9BkRaGvfp3mSBub3d7T2JDcgyULlrIJYK
aSra7+kH+9BlYRlFyaxWOClVcGHiYzd8Xz931+F9DKQU9UVwRcsnGP/+9mq5
KzHHZadG1A7S0aYzIyN6mSVQbOyiUdHPhHvXqI5Hj9LRCe9k6Wj9UtB/yffB
isKE9ujzdtLEnhyk/ri/rSofWgKfMSKIPfmGeMrLPJEe1FChOifi7psPZ858
WzgtQewPm/3cnM4yUJ1kw/xfOflI4shzyQ5LJliobOAfHulEutvchp5mv4HZ
eYNKKpv6Yd7bw5sTL/QjgaQXm55veoGODotqOv7TCWc25w7vKGdBbvtAUsmv
erCcKytp5ESFsHoxlzlL2XDmXmChf1sdWPmcU7+nRQW21Nri5FIWGlO9a9w4
WQ+KV3vFj5ymwsaxMbJe4UM7cb1ALVaHrNcLXj9n8PikntfPFjx84k6T+KBf
PHwyefh85eKDZHj47BK9tzw4i4pS6euDZiaUAEuVvfsHYoO57c8DM5qpSJlS
vGhSrBTSRHo/Oj0n9n+erjnO0zXSPF3DfkPiABHxJA7wk4dDHg+3BTzcBnO5
uF3mxQ/tIuOja7z4Erx8tHn5zFHj5rOR5y/Iy6eU5+/CO6+cC/e8jbzz+m54
8PKgBR2JzUl99ki3FNWfX3LAoYsJe3j+l7n+wOT5S/hz8dnox+2f9mQuPq95
vHejmOQ9FMvjPfMtUg4vCRxuqL8/xyf7ER7s/rtakNCJGo5dDibE/OpM0Dw5
9b4cUrNDHW8S8+vZi43Z57v6kL/RKqbeuRaYZ7zBT86zG257atAuuveiVivn
GR8S2pGC8aCvoDwNFDWHah+cYsD5W0s/n9/eBaohKrpqS+hwTCVj097zZbCq
f8a4OKMHNVNOO1yL6gWd2X4FS7YVwBfD6ZV6cr0o981zx4SMXrh1UvXih8/Z
KNNof6vujl6kenHGF826XvDjPhc6ec9V5T237tfPe4aVdHTwzYqHZz4XQdVQ
eYp1MhM0no/vSVLpQgrxq5Hy00/I+7hVdSyhNxyTuHZ1nl2WZ2/nxXnCjYM+
8+LM+Ol29u0yBhoMkJjVXFSAHiV09NT7MeHv4fNndc0YKGxBbLZM2yfk+2rR
yKQjE9Sdl9mFBjPQBuVrp088zEUe53YJyhB71/L3Wn8E3jTA6Gii9bG1PaA+
X771Aa0HMrh6Fnq4eha8eXr2sBWJA9zn4gDGPBysubihDi5ukMzDLY0bH7Vw
4yMVXvyFLwrPbt3dDxknNa7mf8tGX7tulV8i9BQf144muXZYROXaM7i6G73l
6m7g5+luKV+zbq8DLBA9tkPq4J1GRLcT+mScQoXQXNkl3xexIHTD4rwrZk2I
5bZvOKSYChIvyf6BkoNk/6BAI27/XBpj3ML9pra81IjoN3TTQtsU99tRBYXW
VrkuSFsSM8FfT4NgRes99FQGKDPfypeGU0D1qMR4O5sGpq/r+p9WMiB26NMP
+889aOuD9XeUZndC6M6uTJo7DST0SH2N5uaT+hr28fT1rK8XvZwPMdB4vuSK
24WfkN3FCPNkByY8b4mtvwRUlLTo2ZrEoCJw/fvP5UoZDtzaeMvwPZGvUKWW
+Irn3Ugt47XNQ1UGFCCvsbuqNBSxa6Nrblg5mLepM50fsuC+3suOR7EMlGMU
tHeH6Qd0zJd29OdOJowZZZuJ7OpHkb9uRo6ZfECD1WkR46adoP1iWWZbRy9U
qOvveZTeBvqvOmf7THTDSb3TUYH1DHTkxMGruQYZyOK12DzmRiYETuy66PeL
gT5n/1UNFU+C1GOONT6yTMjVqc3Ts6yC+eKUqw9CepBHXzGtN7gXzIM8S0sa
KGg+bWet30cayvQ5WJ7WwQBr3rk0uecCRd65QnjxmR/I+CieFz+El88zXj4b
ePnUcM8FMdxzgddX7rm2Lu0J2SLfjf6E7Boe6SiFbdoJlu8d2HCRF2f5cTIO
6PHiXObZlbjxYQfPPsWd+/CWN/eDeHP/QHenSH1eL9KQDLhzJ7sNAqVOn6PL
0ECHp6ONfnF1tDJPR3c/oS19StxHu0h6sEd0LpK32LBsNnEfQZOrp1Kspkk9
ZfaEq6dirfcIHXXpgffj/pPbWjphQdGmjDo/GmyPdPJX30AF+d8/xZz30FAa
o2WJYRoDvrmb/ai73gVDJ/qyXn+goU/5kcKWsQxYdq8+1VuSgcZKX1u0V3Wh
n8zj273X0KFj1t2sPBsGyqwQqDyl3YXUClNrcgmebLIin4uKJ8jnomDec8u1
ihvo7b2w8qedTc67NsQI9z/hPt4Nz7l2pPSLa3/Fs98a6zws2ERDZXpXJvyd
ypCP0HXxS2osqDdaVPTnBw3NFhOvYk2UoqrwvfuFZVjwvMNjToICE5X+ZatS
Pzaj7VGts/r2dcPNkO8XCro60Y6cLM3VR+NQQHlqtJhhPyiHcu3CWVz7MZ49
Vns6ougbHQkmvg85U9UFAT4eaqWudIjVCB9YRORzbUTlcLVdGWKY2aomEvnI
7OHm80qYm08GL5+0KKlT7Tq9sMd0dbE5ox2ePa3XfmFIAy0e/su5+EMWD/8X
lu++vYvvRLv2vD5pwfGHyGURkZHHiL7clWrqJURH65R+mCxllcLRkyO3VxA8
FcuziyuSduTIsxvy4tzYR8ZBr3lxPshvvGES1Y+Erjmerjx+C/VE/ro2J78D
qo9y/QdNuP61PP83XH8IfEj6g2AU15/F8//N9YcKnv8dXj6Hefl48PLZKM69
R65h3HtE1eLeozqeXmjg6QXE0wureHNqfiB3Tp3jzanLx15araP2oYgDx35a
P25BN4bmLnSw64bsZ1my1NO96Fq/j8AF03Y4315hM3MvwZ9Lil3UdTjo+dd9
HU30L/B17cm7jfkUyFF5/l1UmIMGN7zakFpfBQLbjXSSRLpg5dy4Xs/9HPQh
+HfZOfkvwFgXvuVvKgXO8fjkexaXTz7x+MSTx5Oye7g8eZ7Hk6eWy/VT13aj
GDb75saOUhSRmblvkS0bPo6oqd/7xIE1X1vmF48Vwz7LGXq50hSo28J9r3XA
gvteK/A1972WWGirfzph9/C6ljBU8RnmjLxXdiXslSM7pjTsu9DDsZ4DRvs/
g9XopdR7DzhQldhyTGGyDba5mv344EGHMcOwDwWBPaC/YwocWjtg4Eb5xRn7
6OBp7lGYPLcHBi9Om6cP9cA77dNP3zzoQKpy0o822tOgejGJG8S0c3GbpcTF
Ta997rc36zlw8uJ54zlelQC16cV72ijQsbDp+U93Drxbs83fsLQcFo4/W77X
hwKpq1ybDhS1QkzIFa38eDqiWe30TCD0fjdvP0nn7Sd5vP3kNTcOilcg4yA/
Xpz7Cz9aa9zkIDWJ+Z+k+8qA0V5obmVLga10X1owgbNqrKqu6lQ5kldwsTYg
dF/z0svWT+Z3o/C0tCH59WVIVFDIyNCdDYYesxb88WIjPsqmwOPmtUjqlaRs
zkwqWFU4pOV9Z6N8m7CHM59Wo8iK2s1R67ogZmyv8GR5ByTqLht6IUNHvzJ2
Mp9v64Fp2QgzcZNutFRdxjDtYTkqnXtqSb8aG9wvhZi5aLPQkf06Z+UpjehE
R2GEdyoV2nPvJqYuY6GWMY66X1gTMP31NR0I+2XefivM1fWomrffPpDk6qPK
L1x9FOvM1Uf7ef5fufswDPP8z7Q7qmsI9iDvL8GqKYFP0Pqa6vV9UkwI49nv
cu0wl2fX49kXlHPtB3h2NZ59FS+ONc/+W2PY484HBqrJXm9wrj4L5CvCzJ5o
MiGVq1vRIvMf1SbvBD9W8XSrzMYHfG5SVFQcFSJw4XQh8rjacjtCl0PMQa69
6xHXfpZnd5CjrV2/rx/qXosLFyvmoBXi62Zu0emEQ1w70npF2sGLZ//By+fQ
e24+a3j5FCpSupwKelD7Jnvj/cs6wa+O7+agEw1Uefmse0g+F2x5zz21U3eb
KaKjC2cWKouOFCH+rFsnb75iQsAahV1vxtgwpm2zvOxRNeSvFz+8cE0XIN53
q1/c71bQwftuddftpIWtMgMVpR079Ov3Z1BUTiyt9GbCyhrN8qsXm+CLXi7f
OmJfCX0nEDxe2AMzuXZUzrWjRzy7xPGYtug5PajxNF9oasQ9JBXzze29JBP+
OcuNP/SSjI9q1nHjZ/GeO8G1gwTvuegYN06zGxkHXHhxnlpy7V+cufEdn3Dt
eSZ05VnxfSi0zHiew9ZW1B/ka/Hwejes4L1vRM/J943A5L1vNOV+v0BWp8nv
FyDB+34hzXvuZVvuc8d5z/Xi+W935n7vCIri+q/hfQfJduTGqeHF2STlIfX2
DwNtzdL4M7s2EUY6HkXnyTChw7x09rtZRJ/7dDBzqiKQ7pauJZZEfw6Ycu2b
LnLto1u59sO8OAcyuXEaeHFmqNlQOT9pyMBebMmzpWVwbKltU740C3Yu4Dt6
x4SGNnU2Veb1VMDp/n71F64sUJDKuX2LONfpVPE2uW8B8Mzx5Cnt5UxokW5e
IVTUiWhxb5f5mzwD0Ya2nAKijyWWc/3vv+D6hzpx/WVWcP3Hn3D9J+q5/r/O
LlPsDmWg+G+MkPD3uVDgUGCWsJsJthHFLlfDGOi1a5ybi2QuhAw4eBTtYcLg
2uVHmr51IY13ayr85hfC7c0nhZNOcQBY5xfPcaah7tVvg+t/lqG3P1xjVlxk
Ab9sZpBAOx2hMzFXr90sBoEz/xgmEHPWgOcvqMj19+H5p7yb/JzzuhsNfrxl
KBBdhkIkF9lX8rOhadjqy0wPKpoVXbouKLsYiWQWGOv8YENb68Ftn7IZSEtG
30GzPQs9nFvYS9Mi9lWencGzh/DsindklddEU1FWiLA/7XkJMcczDTbUsqHq
C3ulK8E/gq6cR/wZj+G0rorEHWkmUHf3Z8/7y0ChvQ6Xre3ikbgsdfZ1oo6d
zZRXTyOoaL6p8xYDoxICl42jzq1sWGsSW/NVuAcJnXu5/72XO/rrhW5mEn1o
a8SNc5YX57kMN46SMdc/xY3rT/Hm+j+u5OZjwcsnewc3n2Yv97Nvj1NRi9n4
LPGoYnBwlNolJciBRXEeUkRM9Fshcl64aBGMuk10SW3lQB4vT/393Dzl13Hz
ZCYXzz1J7A8ZNW2+ggc/wJF5E37Kuwj+31/z3biwG9Wl5QntlCtHa/fLtG4Z
YMFkibF7yTgTeVa93sH/sAmNrIp6MdVEhYxrVe8POzWhIcclwvareuB575fq
lms9sHhU+aXJBBM0qZNJNyObYPPwb71Uwn+8jZzj6Ig3OcfR1TruHL8qo5O3
WJoD7k6nTZmLqtDCunWxG0Yo0CShXmL0uBu5ZWQpPF5CA69JCqc5lQ7Dm2Wl
Ks8z4LUB8wxNvgs98K8dHRChQxnXjvgNSTsk8Oz1y6JtDxI6+NSauZ4niL1q
avNe5vYZdPAyELy+jo5gs+HUWi2RXvS2rE+P09oLru5WDqX1H1DvBaG8fyR6
Udgq2tWN7F5odH07S12hC1S3DtmG99PQX/5TPcbhDBA7S/pDG9cfnvH8P2Ze
MRsODUTTb9yWmmr2QmLOIe8DM/ogyJB8LtrLfS7c5z3XNKHNaPHBfrTgUk6K
3esc5BBf/1dDvhOSDy8uPspPRb7nwjzy7Gmo4EpoV+57BkSLqwa+DKeimJpw
/TQNGpw7q+4Z6soA4MaBzTfIOLCNF8c2rN242qcLWcrNDW+Kp4FF7p6ZjVkM
2PSGzBNGuXmiN7w85/7plqp7yUB/CyWzj6VTUElPSdKkIB22cesOtty6oz19
3LrPcr+YlbiDjuZ6U/d6HKIipZerVh5PpoM9v+e8lak0GJgpM/ZsnIoki+7P
O51Oh6X7F2adfpWGXu/0MeYc74VzIZf+BNf2gr2v57jTqzRIveW7m7Cj8Cqj
aWw/861nIREHfZmQ/03Egb/OzUI4jnfSa//jed3okHprhJt/GeRfGJ4jN8EC
xYCk5RYmbAiUG+qiuhL6d/OKdQOTXbD8pIBSch0FHbZ4IhM6kQUvN/DLLWNx
4HhAtjS2z15obontXc+d5LGdfazy2PPbdFTvIqGv+6kYdlOM/1ZVMyHXYG35
2xoaMva0KjghVga3Avb5fNZiQfbDlg/XJjlwtiAxSKm/AF2I8hMVy+6EJ3f5
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
URF/6LyZDSlrZvTJjVBQYqTAqiPTjVCSHXdT+zcLAgOYmyNSqahl6mj37sw6
SBW7kKbZ/N+5/1Dr37kfJ2qcXVVCR8OPavn8T7xBksUnQ7P+YYGGBPOPtjgd
bbF+KLug+zP65XfGJdqUBbLtA+yAJTTU1FuWvam/An3R8Zk3EEns90PBx7oZ
rejP0isfTgy0olk6CwtOahHzOniFkOeFJvRZ/8gSSmYnemFDv0zbxgYnqnXy
OY12NC/GVGKA2Qif3S+zHQUIHbdgqkNpSRe6OxpjuPFXPbCUvMRT9rMhdcH2
rxdku9H1er/Sg/dqgX1lrp1BLt7T4hLxnmbO05UbebrSYWr1zZvenaihe+CA
gW4TGhItZl04zIZ5S+tYRj0tSJKv+tfQQAv6C7cEprPZcEu/TvNxaCeq/IB0
iwOr4abJmRkWBP/w8/mF4n01iacT9/N0orsnZWLbmyq0unVlfeKebvRDp8/i
IME/n5KT++O125DS7c/6L5upKMtj7gS7qQ8s8t12XlnIgq2K0kt1rWtQ7PM0
G089Gt6Ha/GeL8LTcQ08Hfe46LvB2LJapOElHLkithHZbdXQvb1pAKZ8s2ZY
y3SiN1vb5yygNKKb22pHHtxgA+TZBErspaP1NjuvTe9pRN9n2Mz5f3T9eThX
3/c+jotEUqQoFKkklamBCJtKcyRjRUVpLkOllIpSIikaRCKKMoRkjGxD5iFT
Gcr8ME9pluJ31m4/vD5P39/7L5f72td+7LPOPmvda+117rPyWDtaHtZv9G1f
DwpaInN3qaY3fqNqJh7qXIcE9+xizTbqRv2DVww0xZ7ip9J3fvE8aER+r6M2
9hZ3ovOvl8SkmL/EF730hsOLmpFZmsCx6hPt6OKblnKtjCQ8c7u7CPJuRX03
vy02/dmC5gnU1SaPz8Qaf8ZNnO5L8pfvkK/Rv6P5mmSPXuPM7lJ8V2pxtkLS
E/ym/Uvwhg99yCpVZ3JaRD0eicnPkZsRiy9KSwe/GO5GqTUbeXbOY+GHF1YL
pf9Nwq7zA0X+RHQgyZAifO94Ox78PXj7XH4qvvVwroHXpVaUZh7tsmNBN+KI
nfNy8V6Meh6MX692jsm7uy7oXXrZiea0dacERr5BqzfNWfI9vhmxfr5JZuZB
fr/iupl50MIrH0xgnoWHVo/smMdCyV7FZ5jfRS9tvcThd9l5WRXNy0ZoXpYg
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
WsjkHZqRmdXLIe/wuTJUl8DqQlv99q6xvZSJ/miaGxQkNCLL7Dkijr86kNzr
RUObd2SjkxPuxhzb2IIGrjsEXBhoRaZeyZuV+PLRUzn5cGXrNsQ7oWxcJ2pC
xevypXN7ilBGrN3svh+diOrusXX4EFt/zzJ4ZbPW1QYsafRkpe7qYhTnlXlN
C743/cdpvsVXFr5i82rGRMF8pDZ3sWGZWTt64RLr27u9AwcqT7c/6pmNro2Y
NooKs9DZi40axRe68CdXY1TbmIks69Uc3PSbUPWc8QPLW2rx40rX6cKfU9Ct
KxVDEyt7EC6M+Tas34pkA8xSZfmq0KJvH9y+t7IQ1Rlk6w4itt4g1Qdk6wUi
tk6gxOqolSnrW3D6gncBf85UoyLB3LRFR9uQbdDAkUW/2rDpujXdE3a9R/7r
KosmerYgq0DDaa/v1uKzfvtfRncVoB0JbxwVtvegvAFn0o/XK8LXBfowyuor
SD/ePC6l6ZinAc+tXfT93oNSFD5+i5nH6y40k//OfsOnNdh3/4RZM+QrkHdp
mF1zXDd6ZpxVybe0DrvYOe8RnvUexTX6B8fbdaGHSVV7C8Wr8W0FMWm/udWo
8mIsBh2njIv52zm7a3FD2rDBPVY1atvAuuuq1oWiLTYGGM7/gHnOaFiP1/qE
nhd33N7P8IdMFU6HZfEV2GxtcppjWAP6sIbltWdcF7px+pKlxK0WfO9sg3xw
YxY6/2b6R//3HaP4TYqfo/iEjR1DkkYs3HdJWaP6ayK6WXbqyxLXDsRD8cYx
+KCunsjtBBZWHX+ct3E4EMVlN94X3tOBflOccwxeEi5C8DDxSMDxw0pBH8CL
Kd5EcX+K83tes4B1uhrZKzDrxN6qZWSdkyjuOQZ3mCvhCPeLZ09CPdyvFbkX
S+B+Ud0oto7UqH4U1T/CVA8Js3WQ2PpRm8foR+27VUT2w+2HFY3QZ3g+OpDs
h+vDaaKwf55q/X4I+6eF4zLZPzoRqtMBz6+RfMTg2EMh9QLg73REZEf8a/Hk
kfvy5VUFeFVCf7uZfg8q7bPQETzWia4dlDY5klKOLLnvTj/L+LWT8s7PxO7V
4Qc8MSaK4/LRuSPcwa0vulGdS8V5WM/+2h7S9/jZYDq5XqqHxdbHQmxdLKrf
hKme06iO0wmq1xRK9ZqqqV7Trb4l+8DOCzMOqIGd7577VQN2vk1xSYrfofjl
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

    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{360.26096976317564`, 257.69242427783416`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-1.1, 1.1}, {-1.1, 1.1}, {-0.8912072887820338, 
   0.9812327106821167}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.30323774607269544`, -2.9421951462899236`, 1.643634567203047},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.624576627733585*^9, {3.624576690352282*^9, 3.6245767170760202`*^9}, 
   3.6245768554432592`*^9, {3.6245769387169113`*^9, 3.624576956523284*^9}}]
}, Open  ]]
},
WindowSize->{847, 877},
WindowMargins->{{Automatic, 224}, {47, Automatic}},
Magnification->1.100000023841858,
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (June 27, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 2911, 87, 222, "Input"],
Cell[3471, 109, 1667, 53, 124, "Input"],
Cell[CellGroupData[{
Cell[5163, 166, 2047, 61, 184, "Input"],
Cell[7213, 229, 2314, 66, 101, "Output"],
Cell[9530, 297, 367, 7, 50, "Output"],
Cell[9900, 306, 363, 7, 49, "Output"],
Cell[10266, 315, 361, 7, 49, "Output"],
Cell[10630, 324, 367, 7, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11034, 336, 961, 30, 113, "Input"],
Cell[11998, 368, 2003, 59, 101, "Output"],
Cell[14004, 429, 158, 3, 50, "Output"],
Cell[14165, 434, 159, 3, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14361, 442, 770, 23, 61, "Input"],
Cell[15134, 467, 21084, 393, 260, "Output"],
Cell[36221, 862, 4769, 86, 263, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41027, 953, 774, 25, 50, "Input"],
Cell[41804, 980, 393, 10, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42234, 995, 143, 3, 31, "Input"],
Cell[42380, 1000, 344, 12, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42761, 1017, 4789, 149, 120, "Input"],
Cell[47553, 1168, 1692, 62, 34, "Output"],
Cell[49248, 1232, 2233, 77, 62, "Output"],
Cell[51484, 1311, 2373, 74, 62, "Output"],
Cell[53860, 1387, 270, 5, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54167, 1397, 325, 9, 54, "Input"],
Cell[54495, 1408, 780, 28, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55312, 1441, 3997, 127, 249, "Input"],
Cell[59312, 1570, 997, 31, 54, "Output"],
Cell[60312, 1603, 1253, 39, 54, "Output"],
Cell[61568, 1644, 2244, 71, 56, "Output"],
Cell[63815, 1717, 1256, 39, 54, "Output"],
Cell[65074, 1758, 2244, 71, 90, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67355, 1834, 7838, 237, 203, "Input"],
Cell[75196, 2073, 2617, 78, 56, "Output"],
Cell[77816, 2153, 7430, 233, 112, "Output"],
Cell[85249, 2388, 7004, 223, 130, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92290, 2616, 266, 5, 31, "Input"],
Cell[92559, 2623, 580, 10, 25, "Message"],
Cell[93142, 2635, 278, 5, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93457, 2645, 938, 26, 56, "Input"],
Cell[94398, 2673, 1292, 43, 63, "Output"],
Cell[95693, 2718, 189, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95919, 2726, 4220, 136, 223, "Input"],
Cell[100142, 2864, 137, 4, 34, "Output"],
Cell[100282, 2870, 195, 6, 34, "Output"],
Cell[100480, 2878, 137, 4, 34, "Output"],
Cell[100620, 2884, 194, 6, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100851, 2895, 621, 21, 60, "Input"],
Cell[101475, 2918, 252, 8, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101764, 2931, 649, 22, 60, "Input"],
Cell[102416, 2955, 141, 4, 31, "Output"]
}, Open  ]],
Cell[102572, 2962, 86, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[102683, 2967, 608, 17, 37, "Input"],
Cell[103294, 2986, 76825, 1248, 307, "Output"]
}, Open  ]],
Cell[180134, 4237, 882, 26, 31, "Input"],
Cell[CellGroupData[{
Cell[181041, 4267, 2756, 87, 92, "Input"],
Cell[183800, 4356, 2384, 79, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186221, 4440, 4182, 139, 118, "Input"],
Cell[190406, 4581, 91, 1, 31, "Output"]
}, Open  ]],
Cell[190512, 4585, 88, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[190625, 4590, 1339, 40, 37, "Input"],
Cell[191967, 4632, 1923, 63, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193927, 4700, 2110, 71, 63, "Input"],
Cell[196040, 4773, 94, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[196171, 4779, 598, 19, 75, "Input"],
Cell[196772, 4800, 93, 1, 31, "Output"],
Cell[196868, 4803, 100, 1, 31, "Output"],
Cell[196971, 4806, 93, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197101, 4812, 2555, 79, 98, "Input"],
Cell[199659, 4893, 1918, 55, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201614, 4953, 1653, 50, 115, "Input"],
Cell[203270, 5005, 221, 5, 31, "Output"],
Cell[203494, 5012, 225, 5, 31, "Output"],
Cell[203722, 5019, 3416, 91, 77, "Output"],
Cell[207141, 5112, 570, 15, 34, "Output"]
}, Open  ]],
Cell[207726, 5130, 67, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[207818, 5135, 1214, 31, 218, "Input"],
Cell[209035, 5168, 201, 4, 49, "Output"],
Cell[209239, 5174, 231, 5, 50, "Output"],
Cell[209473, 5181, 305, 7, 49, "Output"],
Cell[209781, 5190, 305, 7, 49, "Output"],
Cell[210089, 5199, 569, 16, 50, "Output"],
Cell[210661, 5217, 428, 12, 50, "Output"],
Cell[211092, 5231, 413, 11, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211542, 5247, 1525, 48, 74, "Input"],
Cell[213070, 5297, 88, 1, 31, "Output"],
Cell[213161, 5300, 232, 6, 31, "Output"]
}, Open  ]],
Cell[213408, 5309, 260, 7, 31, "Input"],
Cell[CellGroupData[{
Cell[213693, 5320, 1477, 38, 97, "Input"],
Cell[215173, 5360, 604, 13, 37, "Output"],
Cell[215780, 5375, 1251, 28, 38, "Output"],
Cell[217034, 5405, 1246, 28, 38, "Output"],
Cell[218283, 5435, 2915, 73, 117, "Output"]
}, Open  ]],
Cell[221213, 5511, 1231, 29, 60, "Input"],
Cell[CellGroupData[{
Cell[222469, 5544, 1664, 51, 126, "Input"],
Cell[224136, 5597, 489, 12, 31, "Output"],
Cell[224628, 5611, 1212, 36, 34, "Output"],
Cell[225843, 5649, 1217, 36, 34, "Output"],
Cell[227063, 5687, 2972, 89, 61, "Output"],
Cell[230038, 5778, 2967, 89, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233042, 5872, 1626, 45, 168, "Input"],
Cell[234671, 5919, 319, 6, 35, "Output"],
Cell[234993, 5927, 323, 6, 35, "Output"],
Cell[235319, 5935, 319, 6, 35, "Output"],
Cell[235641, 5943, 319, 6, 35, "Output"],
Cell[235963, 5951, 206, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236206, 5959, 729, 21, 104, "Input"],
Cell[236938, 5982, 285, 8, 31, "Output"],
Cell[237226, 5992, 980, 32, 34, "Output"],
Cell[238209, 6026, 273, 8, 34, "Output"],
Cell[238485, 6036, 713, 24, 34, "Output"]
}, Open  ]],
Cell[239213, 6063, 113, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[239351, 6069, 2302, 71, 122, "Input"],
Cell[241656, 6142, 2519, 94, 83, "Output"],
Cell[244178, 6238, 1568, 59, 34, "Output"],
Cell[245749, 6299, 1612, 58, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[247398, 6362, 1373, 41, 74, "Input"],
Cell[248774, 6405, 191304, 3122, 299, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
