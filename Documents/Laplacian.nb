(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    248595,       5232]
NotebookOptionsPosition[    244996,       5117]
NotebookOutlinePosition[    245342,       5132]
CellTagsIndexPosition[    245299,       5129]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"], "+", "1"}], ",", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}], "\[LessEqual]", 
         FractionBox["1", "4"]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"b", ",", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}], ">", 
         FractionBox["1", "4"]}]}], "}"}]}], "}"}], "]"}], "//", 
   "PiecewiseExpand"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}], ",", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}], "\[LessEqual]", 
         FractionBox["1", "4"]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          FractionBox["1", "4"], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             RowBox[{"8", "b"}]], "-", 
            FractionBox["1", "b"]}], ")"}]}], "+", 
         RowBox[{
          FractionBox["1", "b"], 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             SuperscriptBox[
              RowBox[{"(", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox["x", "2"], "+", 
                 SuperscriptBox["y", "2"]}]], ")"}], "4"], "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], ")"}], "2"]}], ")"}]}], "+", 
         RowBox[{"C", " ", 
          RowBox[{"Log", "[", 
           RowBox[{"2", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["x", "2"], "+", 
              SuperscriptBox["y", "2"]}]]}], "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}], ">", 
         FractionBox["1", "4"]}]}], "}"}]}], "}"}], "]"}], "//", 
   "PiecewiseExpand"}]}]}], "Input",
 CellChangeTimes->{{3.5971233906462*^9, 3.5971234383782*^9}, {
  3.5971237402432003`*^9, 3.5971237703691998`*^9}, {3.5971238011442003`*^9, 
  3.5971240932762003`*^9}, {3.5971241529802*^9, 3.5971241533241997`*^9}, {
  3.5971242139322*^9, 3.5971242635262003`*^9}, {3.5971243647222*^9, 
  3.5971243764242*^9}, {3.5971244897302*^9, 3.5971244916071997`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]", "[", "r_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SuperscriptBox["r", "2"], "+", "1"}], ",", 
        RowBox[{"r", "\[LessEqual]", 
         FractionBox["1", "2"]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"b", ",", 
        RowBox[{"r", ">", 
         FractionBox["1", "2"]}]}], "}"}]}], "}"}], "]"}], "//", 
   "PiecewiseExpand"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u", "[", "r_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["r", "2"], ",", 
        RowBox[{"r", "\[LessEqual]", 
         FractionBox["1", "2"]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          FractionBox["1", "4"], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             RowBox[{"8", "b"}]], "-", 
            FractionBox["1", "b"]}], ")"}]}], "+", 
         RowBox[{
          FractionBox["1", "b"], 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             SuperscriptBox["r", "4"], "2"], "+", 
            SuperscriptBox["r", "2"]}], ")"}]}], "+", 
         RowBox[{"C", " ", 
          RowBox[{"Log", "[", 
           RowBox[{"2", "r"}], "]"}]}]}], ",", 
        RowBox[{"r", ">", 
         FractionBox["1", "2"]}]}], "}"}]}], "}"}], "]"}], "//", 
   "PiecewiseExpand"}]}]}], "Input",
 CellChangeTimes->{{3.6012965784166*^9, 3.6012966694356003`*^9}, {
  3.6012967002236*^9, 3.6012967289456*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FL", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Beta]", "[", "r", "]"}], 
      RowBox[{"u", "[", "r", "]"}]}], ",", "r"}], "]"}], "//", 
   "PiecewiseExpand"}]}], "\[IndentingNewLine]", 
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FL", "/.", 
     RowBox[{"b", "\[Rule]", 
      SuperscriptBox["10", 
       RowBox[{"-", "3"}]]}]}], "/.", 
    RowBox[{"C", "\[Rule]", 
     FractionBox["1", "10"]}]}], ",", 
   RowBox[{"r", "\[Rule]", 
    FractionBox["1", "2"]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FL", "/.", 
     RowBox[{"b", "\[Rule]", 
      SuperscriptBox["10", "3"]}]}], "/.", 
    RowBox[{"C", "\[Rule]", 
     FractionBox["1", "10"]}]}], ",", 
   RowBox[{"r", "\[Rule]", 
    FractionBox["1", "2"]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{"r", "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["r", "3"]}]}], ")"}]}], "/.", 
  RowBox[{"r", "\[Rule]", 
   RowBox[{"1", "/", "2"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"b", " ", "C"}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["r", "2"]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["r", "4"]}]}], "r"], "/.", 
    RowBox[{"r", "\[Rule]", 
     RowBox[{"1", "/", "2"}]}]}], "/.", 
   RowBox[{"b", "\[Rule]", 
    SuperscriptBox["10", 
     RowBox[{"-", "3"}]]}]}], "/.", 
  RowBox[{"C", "\[Rule]", 
   FractionBox["1", "10"]}]}]}], "Input",
 CellChangeTimes->{{3.6012965072506*^9, 3.6012965130576*^9}, {
   3.6012967445986*^9, 3.6012967462446003`*^9}, {3.6012970097176*^9, 
   3.6012970165425997`*^9}, {3.6012970605416*^9, 3.6012971118806*^9}, {
   3.6012972961306*^9, 3.6012974101736*^9}, {3.6012975400856*^9, 
   3.6012975407396*^9}, {3.6012976309476*^9, 3.6012976358185997`*^9}, 
   3.6012976703796*^9, {3.6012982660346003`*^9, 3.6012982776516*^9}, {
   3.6012983534856*^9, 3.6012983564835997`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"Indeterminate", 
        RowBox[{"r", "\[Equal]", 
         FractionBox["1", "2"]}]},
       {
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"r", "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["r", "3"]}]}], ")"}]}], 
        RowBox[{"r", "<", 
         FractionBox["1", "2"]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"b", " ", "C"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["r", "2"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["r", "4"]}]}], "r"], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.6012965147136*^9, 3.6012967532665997`*^9, 3.6012970172426*^9, {
   3.6012970692136*^9, 3.6012971125626*^9}, {3.6012973094756002`*^9, 
   3.6012973284066*^9}, {3.6012974005056*^9, 3.6012974127496*^9}, 
   3.6012975412176*^9, 3.6012976369906*^9, 3.6012976707536*^9, 
   3.6012983274356003`*^9}],

Cell[BoxData[
 FractionBox["6251", "5000"]], "Output",
 CellChangeTimes->{
  3.6012965147136*^9, 3.6012967532665997`*^9, 3.6012970172426*^9, {
   3.6012970692136*^9, 3.6012971125626*^9}, {3.6012973094756002`*^9, 
   3.6012973284066*^9}, {3.6012974005056*^9, 3.6012974127496*^9}, 
   3.6012975412176*^9, 3.6012976369906*^9, 3.6012976707536*^9, 
   3.6012983274466*^9}],

Cell[BoxData[
 FractionBox["805", "4"]], "Output",
 CellChangeTimes->{
  3.6012965147136*^9, 3.6012967532665997`*^9, 3.6012970172426*^9, {
   3.6012970692136*^9, 3.6012971125626*^9}, {3.6012973094756002`*^9, 
   3.6012973284066*^9}, {3.6012974005056*^9, 3.6012974127496*^9}, 
   3.6012975412176*^9, 3.6012976369906*^9, 3.6012976707536*^9, 
   3.6012983275966*^9}],

Cell[BoxData[
 FractionBox["3", "2"]], "Output",
 CellChangeTimes->{
  3.6012965147136*^9, 3.6012967532665997`*^9, 3.6012970172426*^9, {
   3.6012970692136*^9, 3.6012971125626*^9}, {3.6012973094756002`*^9, 
   3.6012973284066*^9}, {3.6012974005056*^9, 3.6012974127496*^9}, 
   3.6012975412176*^9, 3.6012976369906*^9, 3.6012976707536*^9, 
   3.6012983276026*^9}],

Cell[BoxData[
 FractionBox["6251", "5000"]], "Output",
 CellChangeTimes->{
  3.6012965147136*^9, 3.6012967532665997`*^9, 3.6012970172426*^9, {
   3.6012970692136*^9, 3.6012971125626*^9}, {3.6012973094756002`*^9, 
   3.6012973284066*^9}, {3.6012974005056*^9, 3.6012974127496*^9}, 
   3.6012975412176*^9, 3.6012976369906*^9, 3.6012976707536*^9, 
   3.6012983276106*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FL", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"u", "[", "r", "]"}], ",", "r"}], "]"}], "//", 
   "PiecewiseExpand"}]}], "\[IndentingNewLine]", 
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FL", "/.", 
     RowBox[{"b", "\[Rule]", 
      SuperscriptBox["10", 
       RowBox[{"-", "3"}]]}]}], "/.", 
    RowBox[{"C", "\[Rule]", 
     FractionBox["1", "10"]}]}], ",", 
   RowBox[{"r", "\[Rule]", 
    FractionBox["1", "2"]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FL", "/.", 
     RowBox[{"b", "\[Rule]", 
      SuperscriptBox["10", "3"]}]}], "/.", 
    RowBox[{"C", "\[Rule]", 
     FractionBox["1", "10"]}]}], ",", 
   RowBox[{"r", "\[Rule]", 
    FractionBox["1", "2"]}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.6012974573546*^9, {3.6012975300076*^9, 3.6012975307416*^9}, 
   3.6012976895376*^9, {3.6012982844446*^9, 3.6012982886446*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"Indeterminate", 
        RowBox[{"r", "\[Equal]", 
         FractionBox["1", "2"]}]},
       {
        RowBox[{"2", " ", "r"}], 
        RowBox[{"r", "<", 
         FractionBox["1", "2"]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"b", " ", "C"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["r", "2"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["r", "4"]}]}], 
         RowBox[{"b", " ", "r"}]], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6012974578866*^9, 3.6012975316646*^9, 3.6012976905746*^9,
   3.6012982897506*^9}],

Cell[BoxData[
 FractionBox["6251", "5"]], "Output",
 CellChangeTimes->{3.6012974578866*^9, 3.6012975316646*^9, 3.6012976905746*^9,
   3.6012982898036003`*^9}],

Cell[BoxData[
 FractionBox["161", "800"]], "Output",
 CellChangeTimes->{3.6012974578866*^9, 3.6012975316646*^9, 3.6012976905746*^9,
   3.6012982898106003`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"LogPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"u", "[", "r", "]"}], "/.", 
     RowBox[{"b", "\[Rule]", 
      SuperscriptBox["10", 
       RowBox[{"-", "3"}]]}]}], "/.", 
    RowBox[{"C", "\[Rule]", "0.1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"u", "[", "r", "]"}], "/.", 
     RowBox[{"b", "\[Rule]", 
      SuperscriptBox["10", "3"]}]}], "/.", 
    RowBox[{"C", "\[Rule]", "0.1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6012977320425997`*^9, 3.6012978702086*^9}, {
  3.6012981333496*^9, 3.6012981377956*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
1e0wDqaim0oic79/s6E1117WJ4SK/gdZIfwN
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, -18.00980943938883},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  FrameTicks->{{{{-18.420680743952367`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-13.815510557964274`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-9.210340371976182, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm]}, {0., 
       FormBox["1", TraditionalForm]}, {4.605170185988092, 
       FormBox["100", TraditionalForm]}, {-15.935774094164366`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-15.285186528023216`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.894320219336205`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.614018254182046`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.395329053217216`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.215988124561399`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.063971917262773`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.932044374220226`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.330603908176274`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.680016342035124`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.289150033348113`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.008848068193954`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.790158867229126, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.610817938573309, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.458801731274683, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.326874188232134, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.725433722188183, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.074846156047033, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.683979847360021, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.403677882205863, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.184988681241033, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.005647752585217, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.853631545286591, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.721704002244043, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.120263536200091, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.4696759700589417`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.07880966137193, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.7985076962177716, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.579818495252942, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.40047756659712525`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2484613592984996, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.11653381625595151`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.4849066497880004`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.1354942159291497`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.5263605246161616`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.8066624897703196`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.02535169073515, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.204692619390966, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.356708826689592, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.48863636973214, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-18.420680743952367`, 
       FormBox["\"\"", TraditionalForm]}, {-13.815510557964274`, 
       FormBox["\"\"", TraditionalForm]}, {-9.210340371976182, 
       FormBox["\"\"", TraditionalForm]}, {-4.605170185988091, 
       FormBox["\"\"", TraditionalForm]}, {0., 
       FormBox["\"\"", TraditionalForm]}, {4.605170185988092, 
       FormBox["\"\"", TraditionalForm]}, {-15.935774094164366`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-15.285186528023216`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.894320219336205`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.614018254182046`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.395329053217216`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.215988124561399`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.063971917262773`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.932044374220226`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.330603908176274`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.680016342035124`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.289150033348113`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.008848068193954`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.790158867229126, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.610817938573309, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.458801731274683, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.326874188232134, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.725433722188183, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.074846156047033, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.683979847360021, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.403677882205863, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.184988681241033, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.005647752585217, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.853631545286591, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.721704002244043, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.120263536200091, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.4696759700589417`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.07880966137193, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.7985076962177716, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.579818495252942, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.40047756659712525`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2484613592984996, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.11653381625595151`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.4849066497880004`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.1354942159291497`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.5263605246161616`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.8066624897703196`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.02535169073515, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.204692619390966, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.356708826689592, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.48863636973214, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}, {Automatic, Automatic}},
  GridLines->{None, None},
  Method->{},
  PlotRange->{{0, 1}, {-18.00980943938883, 7.105842922850749}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, {{-18.420680743952367`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-13.815510557964274`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-9.210340371976182, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-4.605170185988091, 
      FormBox["0.01`", TraditionalForm]}, {0., 
      FormBox["1", TraditionalForm]}, {4.605170185988092, 
      FormBox["100", TraditionalForm]}, {-15.935774094164366`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-15.285186528023216`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.894320219336205`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.614018254182046`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.395329053217216`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.215988124561399`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.063971917262773`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-13.932044374220226`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-11.330603908176274`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-10.680016342035124`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-10.289150033348113`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-10.008848068193954`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.790158867229126, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.610817938573309, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.458801731274683, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.326874188232134, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-6.725433722188183, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-6.074846156047033, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.683979847360021, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.403677882205863, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.184988681241033, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.005647752585217, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.853631545286591, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.721704002244043, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.120263536200091, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.4696759700589417`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.07880966137193, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.7985076962177716, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.579818495252942, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.40047756659712525`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.2484613592984996, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.11653381625595151`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.4849066497880004`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {3.1354942159291497`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {3.5263605246161616`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {3.8066624897703196`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.02535169073515, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.204692619390966, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.356708826689592, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.48863636973214, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}}]], "Output",
 CellChangeTimes->{{3.6012977450236*^9, 3.6012978706986*^9}, 
   3.6012981394066*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwV0mk41AsbBnBbEZElR7aUrZTQghbNPUjWRLYSE7JXlmhTWTqmskSdJCEU
KvsSypqsLTPmj79QmZnkCMnUkabd2/vhue7r9+W+7g/PSp/QPX5CAgICzD/3
/7Txm+htnXShfN7D1/8k1GIiYq4UxlHchATTypAh6inKxtyM7PuKO9BpcNch
mHqDMqaiGXdC2x7H62p22weWUmyZg9U3FZ1hXPXTdCO1nqKZrFo4r7YPcgFW
4WoN7ZSfNgeve2vTILjvuYhWIIMyFU92eKd7Y9P19nXyLv0UN19+8z+Kviic
bW5QoA5TOsyVHrRn+4N87KyjNMehGGhsr/ysFgS2QIeJVMNbSraQV5FW/iFU
Dpe4pLLfUcRGz9121Q6B93vvA9KB05QGbh+z3TkMfKXZUquSj5QwB18bj/Rw
lHtkqy9ymaWM6F8wv6QYiWBDTf4i6jdKWu6yVq39xxDGEHK1iftJsVlSbNKS
fRxvY6zKxOfmKXUzDEOe2ilI5MTfXtAgjMM0WvUF7ygEq7e1FT5aAPUent6K
/NMQMtzIobNFkVImu9pROxqDIpWLFwYuhoVqQcFkQAwU2hpV7/RJIborU/qx
cyy6z5+VNy+RxiYj3Uv70uNweZW4qrCLHPLkd59PVIxHaMteeWGqIk4zr3e4
NsRjeqBUyumlElzpXCGN/XTQa5QWmsepYPFceExj9nmId5vzhObUcJJMOzmt
loCqPD8XwQYNOCWP1D1sTQD7yXGbonpN6O3Qnov3TkQmmUa59UgLY/cfhKvm
J6Ehna8Rx14Fx6svg+21U1DQ6fZWIFAXurYaRUrdKTAVJ4jVmesgJnz43XhA
Ko5scGnO69PDgfrfVY+cL6Pur3ZraokB5HUu6+1NvwKxAFMlAZeNiBO7vypB
MQ3fPSIK5rEFayyvXKwOS8OPnSUrhlS2oo8eOvmqOw1Wy2pM/X9thaawbone
8WvoDdt8NP+pCbp+FeiRfel4/JPe5WBJxeLZdEO15Bto3cRzdvXbgdr1x9Kt
3t6Avu8/9aGfdoAW5sQP35oJC9GcjwdjLFDxYUl9x0QmfO/NDLzO24k9ExdN
gi2yccL12Fnp71bIGIkyr/2dg3fey6gxC+xhqrKvgO2Si87nZs8tKuwx5W68
QKwsF9ZFA6vfue/G8ulTB8vW5SH/QOa6kf0OCA0y0hJ4nYeLaw/b97Y7Qta3
4l7h5tv4lvnSenurM/buu1Xx8VMBwoZGV2ke2g/eK2fx20qF2O+vUyn/Yj/O
08T8nMwLMf3E1fCFqQfuHwxVqksrxE8Jf6MOZU9IhWynnza+gzcJrnLOwzR0
nht2X3j2LjyqkX1ruzc2lMosVBErhqXt1+v66/zwVK/Ti2lQjPTXF9dkhPrB
q+pkY/S+YhgPJW8LrPbDpTpO2JviYoRL8YYoW/wx0Vr26s6uEnQfVxHssg1A
zoB11fqrpeAbKYuaxAdBYj7Ow3J5BcKO3ZvsMgtBRpAbTXdnBZJyNYZTL4dA
k9T1kgmpQEL0gGkTOwSUosGDr5orYLx/JBpnQlFflF77QK8Shd0t/XzPMHxw
mm6y7amEzqeYfT/uhMPl3vXnEZLVmFU8P7ybFolsz3N2/iursetX+dihpEiM
yh5h7jWshsK2iNL6h5EIPWvG2u5ZDZEuZviU3DEk7PnQJ1pWjS2Kz/vzGMfQ
/NPsZZbdfcjXjn/2sjwBLceZifakGqS03SrR84mCUozl1oBbNWBkPTZl34iC
dFlekviDGgTn7qE96Y3CdzEnPcfRGjRrPVljZ3YaROuDCPbmWgzpCcrIap9B
lEHc76//1uLxhhLZ61/PomfJ0qV61AdoiQ2daxuLxYmeLcj4XA/rEZ8TpyXp
kNKr/fepWAOuKm6MsdGjo+CSQfIPlQa0ZTcLb9xNR6/dqmGaRQMGTwj+7XCF
jrXPl0ZopTdgIHaHe/Nf58Hp5t2pNm6EEvvBIZr2BVg+LpRiRjWB6HRSatmb
AIUaGbag4CPMWHvdmV2UgrpRcwbLpA3PonJLG56moS34pvK+6Q4oHr0ncc4j
C3Pa25eUHemGf+GF0hWrbkHoW4m0stYzRI93CJ7wKITRvFedUzkDN5V99Z7U
FIERv6mnaw0LGquNaEr7y6F2+f23ohkCUvMVP7a9r8J7Poc9YNAHBv+V+fHy
GhRMNT6TSulHdpxSoMP4A0ip3uWNjZGIyc3iLrRuRHJQrX+e5gt4KCf8t7iw
BV+oJWOBMYMIkymUVTd9jMgNHTV/tQ/BK+bTIUuddnDKO5J6V74ET7KUusyt
Ez+CySydqFeIbgtL+3q9G2tNRX/7N76GpvqV+u2Mp7C8vTKgSoENVs9W3Wg7
BjZlSGl3qbAhNTPhL+nKwIqUH2MvV7KRZVlEyTnAwPdTAz4iumyUFHl1dhxl
oMwxgeZGZeOSTrG+1g0G5AQ/ufwKZMN32b0TG8cZ4Bxo3WHdwAatevcAPY4J
hkuZMO0RG0XKFtVWSUw8tM1sO9rBhvkjO13Ja0z8YxxJze5h43DtP/zMe0xY
LFltwhtlI87z29RTFhMlLakbr0lw0JS93uLY8h6cUD2g/saDg+jBXd2CzT3w
cTBwfe3NwR2zWt2urh7Y/y2YOOjPARm7XC2Z6IH2ZP4nZhgHlONfilXGekDW
TLQ2xHNga9FEc5BgwcDu6IG0Ug7sI3ONhNxZUIkxv5paxUHnEs3DnIMsiFYv
7U6s44AaXazXcoQFtsIDvbhWDizIJvfYOBaS3/74dYTkINGXb69QxMLJv5jr
g4Y50MlInBa4z8JB6xw/XzYHz3LUFKabWNhaQWW6T3CwXGu3XDfBgvaojKDr
Bw6IgsmxupcsyMi/3eT4Hwd0Pt383hgLPy1rAu34f/araupnzbAwEUXPtvzJ
wbx8x93UryxMua4NvCXAReIp5S9UAQJeH+WE1IS5uHhtMspUkMCLhJ9Z2Qu4
yOk4PGQqRMBW419DJTEuGn2rpMyECbQ2MVnXxbmQ7WlXNRMhYORaFyQvycUK
p8oFZgsIqCdcuCkty8WTESsvU1ECGephxilLuXhzSLKfKvbnz5v29koocHFf
e2Q5dRGBbzM6C0RVuKDO9ZhSJAgQzozDv7S42B7tULd5CYGdMzULT6/mQlS9
/T8jaQJNF27mfV3DhfHC22KGMgTuNoSQs/pcPK0gWw3kCESvkDGZ2vKnf4On
r7YCAd1pF4nBXVzYufufE1cj8NDZ7lGiAxeSn1UfKq8gYN5sFkFx4oJzafdj
3ZUE3FP0XxXu5eJbhIe9vQaBBINFJZEHudhi3+ycuorAeGSTjewpLi5F0NUW
GRDI+6WeuKuAi6XNYnKvqQTklnwU6/jORdfVwQQhHwIij7IqNLLfYNaHMNTP
IXBoU+PwIttRvOGu5S0ZIVBi7ZPX8mUUIUmrAzOW9WLuvZL0ePpbqAVK+NrZ
96LWyVI4bccYMpmC1PLzvYixoufWjI9h9mrTtfL6XqwcsRnKp/8LX9/bXyhT
vdhqHJ+muGEcWrP8gFDVPngsZ30T7B/H2rQvBiO2fZh7dmk0LO4d3lqZ+JNn
+pAhQovcozmBzurNlW5FfZBj194W6piAiXnjrsn+Piw4G+e8JXwS093HYmcF
+iFQRKsYlZ3CyliJ0991+nE0s+KSbNsUmj+at/m59KN57UUxmZD3qHgfxV8Y
0w8Zm6O656Sm4bm4bUy4sB+v1xH9p5qmseZpapAzsx+VOdAco31A8YonVvr/
9cOzwkhG9fcH/DYsG7spTyKWfivudfEMaJJbTB22kSibUM2SsuNBumImvs+T
xMWbdC+2PQ97UrTXH6KR8N3zQavckYepc+q9wgdIqDQ1Ve5y40GqPGx6kxeJ
xNT9Xck+POR/Kbmc7kMi0OjGJ/FTPCTdeH7FLYCEevxSK9E7PPT8/nqBCCPx
e/MZycF7PJx7HFsVEE5i+MPbvjslPCSeVmb9/uPLbvc9d1bxIJNwdVw3gsT8
mj0R9CYeXhC95y8eI/G6NzVHuJ8Hcdf8lO1RJB6e5x/sH+DhjPuZ7/1/nLbt
gE7+EA/rOCnuwadJ2Bbq1ZixeXj5JYiffoZEw0nm07hJHm6pbivgRZNIX2eY
6jjNg8e4ejU9hkT4aLbzSh4PNtvcapRjSay2O8xp/cxDqUjFNcs4EiKCZMFl
Pg8ahoORI3/Mrd0W7PWdh6EgF6uIcySagvP1DX7x4D6/VnrR3ySuq0nMzc/z
UOjoycj54/8BMhQqJA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 1}, {0., 0.32053346593354554`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.6012977450236*^9, 3.6012978706986*^9}, 
   3.6012981394955997`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Beta]", "[", 
        RowBox[{"x", ",", "y"}], "]"}], 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"u", "[", 
          RowBox[{"x", ",", "y"}], "]"}], ",", "x"}], "]"}]}], ",", "x"}], 
     "]"}], "+", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Beta]", "[", 
        RowBox[{"x", ",", "y"}], "]"}], 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"u", "[", 
          RowBox[{"x", ",", "y"}], "]"}], ",", "y"}], "]"}]}], ",", "y"}], 
     "]"}]}], "//", "PiecewiseExpand"}]}]], "Input",
 CellChangeTimes->{{3.5971240965372*^9, 3.5971241111822*^9}, 
   3.5971242678942003`*^9}],

Cell[BoxData[
 RowBox[{"4", " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["y", "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.5971240544412003`*^9, 3.5971241668512*^9, 
  3.5971242320411997`*^9, 3.5971242699012003`*^9, 3.5971243811872*^9, 
  3.5971244964462*^9, 3.5978577215629997`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"u", "[", 
  RowBox[{"1", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.5971246134932003`*^9, 3.5971246179722*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     FractionBox["9", 
      RowBox[{"8", " ", "b"}]]}], ")"}]}], "+", 
  FractionBox["3", 
   RowBox[{"2", " ", "b"}]], "+", 
  RowBox[{"C", " ", 
   RowBox[{"Log", "[", "2", "]"}]}]}]], "Output",
 CellChangeTimes->{3.5971246186312*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Luxy", "=", 
  RowBox[{"Div", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"x", ",", "y"}], "]"}], " ", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"b", "[", 
          RowBox[{"x", ",", "y"}], "]"}]}], "}"}]}], "}"}], ".", 
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{"u", "[", 
        RowBox[{"x", ",", "y"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], ",", " ", "\"\<Cartesian\>\""}], 
      "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", " ", "\"\<Cartesian\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Lurt", "=", 
  RowBox[{"Div", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"b", "[", 
          RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "}"}]}], "}"}], ".", 
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{"u", "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "\[Theta]"}], "}"}], ",", " ", "\"\<Polar\>\""}], 
      "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "\[Theta]"}], "}"}], ",", " ", "\"\<Polar\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Luxf", "=", 
  RowBox[{
   RowBox[{"Div", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"a", "[", 
           RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", ",", "0"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"b", "[", 
           RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "}"}]}], "}"}], 
      ".", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"u", "[", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "}"}], ",", " ", 
        "\"\<Elliptic\>\""}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "}"}], ",", " ", 
     "\"\<Elliptic\>\""}], "]"}], "//", "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "==", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["b", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"b", "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "2"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{
       SuperscriptBox["a", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"a", "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"2", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}]}], 
    RowBox[{
     SuperscriptBox["\[FormalA]", "2"], 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Sinh", "[", "\[Xi]", "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], ")"}]}]]}], "//", 
  "Simplify"}]}], "Input",
 CellChangeTimes->{{3.5973549785889997`*^9, 3.5973549790550003`*^9}, {
  3.601898365979*^9, 3.601898437017*^9}, {3.6018985035620003`*^9, 
  3.601898558373*^9}, {3.601933734366*^9, 3.6019337346940002`*^9}, {
  3.601933769052*^9, 3.601933769717*^9}, {3.601938965795*^9, 
  3.601939009672*^9}, {3.601942426795*^9, 3.601942473592*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["b", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"x", ",", "y"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["u", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"b", "[", 
    RowBox[{"x", ",", "y"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["u", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "2"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{
    SuperscriptBox["a", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"x", ",", "y"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["u", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"a", "[", 
    RowBox[{"x", ",", "y"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["u", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"x", ",", "y"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.597355009373*^9, {3.60189853331*^9, 3.6018985594189997`*^9}, 
   3.601933736219*^9, 3.601933771328*^9, {3.6019390005959997`*^9, 
   3.601939011825*^9}, {3.601942449992*^9, 3.601942475678*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["a", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["u", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"1", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "+", 
  FractionBox[
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{
       SuperscriptBox["b", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "r"], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"b", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "2"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "r"], "+", 
    RowBox[{
     RowBox[{"a", "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["u", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}]}]}], "r"], "+", 
  RowBox[{
   RowBox[{"a", "[", 
    RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["u", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"r", ",", "\[Theta]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.597355009373*^9, {3.60189853331*^9, 3.6018985594189997`*^9}, 
   3.601933736219*^9, 3.601933771328*^9, {3.6019390005959997`*^9, 
   3.601939011825*^9}, {3.601942449992*^9, 3.601942475825*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["b", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"b", "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{
        SuperscriptBox["a", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"a", "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}]}], ")"}]}], 
   RowBox[{
    SuperscriptBox["\[FormalA]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[CurlyPhi]"}], "]"}], "-", 
      RowBox[{"Cosh", "[", 
       RowBox[{"2", " ", "\[Xi]"}], "]"}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{
  3.597355009373*^9, {3.60189853331*^9, 3.6018985594189997`*^9}, 
   3.601933736219*^9, 3.601933771328*^9, {3.6019390005959997`*^9, 
   3.601939011825*^9}, {3.601942449992*^9, 3.601942475836*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.597355009373*^9, {3.60189853331*^9, 3.6018985594189997`*^9}, 
   3.601933736219*^9, 3.601933771328*^9, {3.6019390005959997`*^9, 
   3.601939011825*^9}, {3.601942449992*^9, 3.6019424760179996`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CoordinateChartData", "[", 
  RowBox[{"\"\<Elliptic\>\"", ",", " ", "\"\<ScaleFactors\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.60194236874*^9, 3.601942414707*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"CoordinateChartData", "::", "csysdim"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Coordinate system \[NoBreak]\\!\\(\\\"Elliptic\\\"\\)\
\[NoBreak] of metric \[NoBreak]\\!\\(\\\"Euclidean\\\"\\)\[NoBreak] is not \
known in dimension \[NoBreak]\\!\\(3\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/CoordinateChartData\\\", ButtonNote -> \
\\\"CoordinateChartData::csysdim\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6019424085039997`*^9}],

Cell[BoxData[
 RowBox[{"CoordinateChartData", "[", 
  RowBox[{"\<\"Elliptic\"\>", ",", "\<\"ScaleFactors\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"f", ",", "\[Xi]", ",", "\[CurlyPhi]"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.601942382394*^9, 3.6019424085109997`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Grad", "[", 
  RowBox[{
   RowBox[{"u", "[", 
    RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "}"}], ",", " ", 
   "\"\<Elliptic\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Sinh", "[", "\[Xi]", "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], "2"]}], ")"}]}], "==", 
   RowBox[{
    RowBox[{"Cosh", "[", 
     RowBox[{"2", " ", "\[Xi]"}], "]"}], "-", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[CurlyPhi]"}], "]"}]}]}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.601933806865*^9, 3.6019338884519997`*^9}, {
   3.601933927615*^9, 3.6019339281689997`*^9}, 3.6019339684449997`*^9, {
   3.6019340763310003`*^9, 3.6019340777799997`*^9}, {3.601934237533*^9, 
   3.601934299792*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     SqrtBox["2"], " ", 
     RowBox[{
      SuperscriptBox["u", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], 
    RowBox[{"\[FormalA]", " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[CurlyPhi]"}], "]"}]}], "+", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", " ", "\[Xi]"}], "]"}]}]]}]], ",", 
   FractionBox[
    RowBox[{
     SqrtBox["2"], " ", 
     RowBox[{
      SuperscriptBox["u", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "]"}]}], 
    RowBox[{"\[FormalA]", " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[CurlyPhi]"}], "]"}]}], "+", 
       RowBox[{"Cosh", "[", 
        RowBox[{"2", " ", "\[Xi]"}], "]"}]}]]}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.601933889375*^9, 3.6019339298970003`*^9, 3.601933970987*^9, 
   3.6019340784890003`*^9, {3.601934246488*^9, 3.601934301047*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.601933889375*^9, 3.6019339298970003`*^9, 3.601933970987*^9, 
   3.6019340784890003`*^9, {3.601934246488*^9, 3.6019343010629997`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Div", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SuperscriptBox["r", "2"], "+", "1"}], " ", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          SuperscriptBox["r", "2"], "+", "1"}]}], "}"}]}], "}"}], ".", 
     RowBox[{"Grad", "[", 
      RowBox[{
       SuperscriptBox["r", "2"], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "\[Theta]"}], "}"}], ",", " ", "\"\<Polar\>\""}], 
      "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "\[Theta]"}], "}"}], ",", " ", "\"\<Polar\>\""}], 
   "]"}], "//", "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Div", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"], "+", "1"}], " ", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"], "+", "1"}]}], "}"}]}], "}"}], ".", 
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["y", "2"]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], ",", " ", "\"\<Cartesian\>\""}], 
      "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", " ", "\"\<Cartesian\>\""}], "]"}], "//",
   "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Div", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"b", " ", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "b"}], "}"}]}], "}"}], ".", 
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         FractionBox["1", "4"], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            RowBox[{"8", "b"}]], "-", 
           FractionBox["1", "b"]}], ")"}]}], "+", 
        RowBox[{
         FractionBox["1", "b"], 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            SuperscriptBox["r", "4"], "2"], "+", 
           SuperscriptBox["r", "2"]}], ")"}]}], "+", 
        RowBox[{"C", " ", 
         RowBox[{"Log", "[", 
          RowBox[{"2", "r"}], "]"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "\[Theta]"}], "}"}], ",", " ", "\"\<Polar\>\""}], 
      "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "\[Theta]"}], "}"}], ",", " ", "\"\<Polar\>\""}], 
   "]"}], "//", "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Div", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"b", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "b"}], "}"}]}], "}"}], ".", 
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         FractionBox["1", "4"], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            RowBox[{"8", "b"}]], "-", 
           FractionBox["1", "b"]}], ")"}]}], "+", 
        RowBox[{
         FractionBox["1", "b"], 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["x", "2"], "+", 
                SuperscriptBox["y", "2"]}]], ")"}], "4"], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["x", "2"], "+", 
               SuperscriptBox["y", "2"]}]], ")"}], "2"]}], ")"}]}], "+", 
        RowBox[{"C", " ", 
         RowBox[{"Log", "[", 
          RowBox[{"2", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["x", "2"], "+", 
             SuperscriptBox["y", "2"]}]]}], "]"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], ",", " ", "\"\<Cartesian\>\""}], 
      "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", " ", "\"\<Cartesian\>\""}], "]"}], "//",
   "Simplify"}]}], "Input"],

Cell[BoxData[
 RowBox[{"4", "+", 
  RowBox[{"8", " ", 
   SuperscriptBox["r", "2"]}]}]], "Output",
 CellChangeTimes->{3.597355013054*^9}],

Cell[BoxData[
 RowBox[{"4", "+", 
  RowBox[{"8", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"8", " ", 
   SuperscriptBox["y", "2"]}]}]], "Output",
 CellChangeTimes->{3.597355013057*^9}],

Cell[BoxData[
 RowBox[{"4", "+", 
  RowBox[{"8", " ", 
   SuperscriptBox["r", "2"]}]}]], "Output",
 CellChangeTimes->{3.597355013064*^9}],

Cell[BoxData[
 RowBox[{"4", "+", 
  RowBox[{"8", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"8", " ", 
   SuperscriptBox["y", "2"]}]}]], "Output",
 CellChangeTimes->{3.59735501323*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "4"], 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox["1", 
        RowBox[{"8", "b"}]], "-", 
       FractionBox["1", "b"]}], ")"}]}], "+", 
    RowBox[{
     FractionBox["1", "b"], 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        SuperscriptBox["r", "4"], "2"], "+", 
       SuperscriptBox["r", "2"]}], ")"}]}], "+", 
    RowBox[{"C", " ", 
     RowBox[{"Log", "[", 
      RowBox[{"2", "r"}], "]"}]}]}], ",", "r"}], "]"}]], "Input",
 CellChangeTimes->{{3.5973585835699997`*^9, 3.597358607347*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["C", "r"], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"2", " ", "r"}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["r", "3"]}]}], "b"]}]], "Output",
 CellChangeTimes->{{3.59735858963*^9, 3.597358609099*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "4"], 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox["1", 
        RowBox[{"8", "b"}]], "-", 
       FractionBox["1", "b"]}], ")"}]}], "+", 
    RowBox[{
     FractionBox["1", "b"], 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        SuperscriptBox["r", "4"], "2"], "+", 
       SuperscriptBox["r", "2"]}], ")"}]}], "+", 
    RowBox[{"C", " ", 
     RowBox[{"Log", "[", 
      RowBox[{"2", "r"}], "]"}]}]}], ",", 
   RowBox[{"r", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.597443655988*^9, 3.59744370148*^9}}],

Cell[BoxData[
 RowBox[{"C", " ", 
  RowBox[{"(", 
   RowBox[{"-", "\[Infinity]"}], ")"}]}]], "Output",
 CellChangeTimes->{3.597443704657*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.597443657863*^9, 3.597443658727*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"8", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}], ")"}]}], "+", "4"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.597857266416*^9, 3.5978572824189997`*^9}, {
  3.597857331212*^9, 3.597857366609*^9}, {3.597857398189*^9, 
  3.5978574040290003`*^9}, {3.597857529703*^9, 3.5978575382130003`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx9nXucVdWR77kORMUHiCCIIq/DSxRR8YEi1U4nXgkRE4mK12AQfKCxJxGN
T3CUuYboyGhaDahEIyr4ICIdByF03HhUfKCCraKCD2wFFRTxAXG4o0zSp761
7/51L/nnfPrHOmvX+q3atWrVqlqn5/hfnnT2Dq1atbptx1at/unvnz3fPuHP
27d/lvE5penz0KpzLn7ktoU1GwPve+e/fjJn7cFVD+6y59U1a9YH/h8T/zpn
XcfBVZtm//qc0ojGwM+9fPenLh16YNXZTf2sCfzgw/4ybPTm/b19Q+CXtb7q
sbGjBjheDnzYh6cNmTG6f1Ur/1eUsx/tTdt7/6b9uzzWsjyNpvL7eE3H6/yY
8uN/m/LJ3/BKe/7m886/jh85a+pBwTN4zUnvZHtvHBg8gy/eduHhy7b1D57B
py7sNv/uBX2DZ/Dnr31vwLx2fYJn8Mq4SsEz+IozFvQZ9UTv4Fnbw7P2D88t
y9NoKj8863jhWfmBZ+UTnuFP5itw+udvPov60xj4b2/89MHqCTGuwE8aeVvv
7l17B8/gM7uOvXPAZT2DZ/CffXPkPhOm9Aiewe/88oDblw/oETxre3jW/uG5
ZXkaTeWHZx0vPCs/8Kx8wjM88b7AM7jMb+DIw998vnrENT03T+oVPIMX+WkI
/LkmfesWPIP/pImHfYLnYv9dg2dtD8/aPzy3LE+jqfzwrOOFZ+UHnpVPeIYP
7BU8g/N+wTO46EPgyM/ffL7U9L4HD4FX9LBL8Az+QXlzx1XT9gqewc+d/0aH
uWs7Bc/aHp61f3huWZ5GU/nhWccLz8oPPCufRX1uiPWiqM8NYd+K+twg73tj
4KI/gRf5bAh8wx1L2182tJPoc0M26czL2m6s3lP0uSHbcsK4nepndRB9ztsX
9Tnvv6jPKk+jqfxFfc7HW9TnnJ+iPud8Fnkuq/0JnPWlyHNZ7GFj4Ly/RZ7L
qm+BF/kpB76t7+DWZ4zaQ3guZ1P27LLDQXPbC895+yLPef9FnlWeRlP5izzn
4y3ynPNT5DnnE54ZB/4SPIOzvsMzuNi3wLGf8AxefN8bAhf9zOVxPlu1+C/n
WdvDs/YPzy3L0xg48sOzjheelR94Vj5Fny2hz5bQZ0vosyX02RL6bAl9toQ+
W0KfLaHPltBnS+izJfTZEvpsCX021WfkSthnS9hnS9hnS9hnS9hnS9hnS9hn
S9hnS9hnS9hnS9hnS9hnS9hnS9hnU/vM8xP+hiX8DUv4G5bwNyzhb1jC37CE
v2EJf0PfF9P+xd+whL9hCX/DEv6GJfwNa9nfaLSE/2wJ/9kS/rMl/GdL+M+W
8J8t4T9bwn+2hP+s75e1LE/4z5bwny3hP1vCfzb1n+kvsR+0xH7QEvtBS+wH
LbEftMR+0BL7QUvsBy2xH7TEflDfR1P5ZT+o65cpP7IfNN0P8r1EfMMS8Q1L
xDcsEd+wRHzDEvENS8Q3LBHfsER8wxLxDUvEN/T9NR2vxDcsEd8wjW/w/4l4
nSXidZaI11kiXmeJeJ0l4nWWiNdZIl5niXidJeJ1lojXWSJep++7KT8Srws+
n+r/r33XLPw04/OxO4bt+sTynH/w24c9/fO16w5xOZcHfu+CGZtem4Y+1AVe
eS76WWeKez+m/fjflpDHVB6e26Pp/9/1/XKXeK7iyF/hb1X2wH0v/K7d9E7R
D/jDV82avmB4x+hHceTXfpCP5zAu2oHTHpznS//R/tFTL7hu9OYOISf44sHD
rt1y9x7Rnv8HR35tTzs+s513vWbG6PYxrsRzLdVen+vjssR4TcfLvCtv8El7
9Id5BWd+BTdw4dmK81uOfsZ2ubO8bWV75dMYV9FPqMvebf2bpcsHtFc+DX6K
/kPev/BpCT5N+VT5fbyW4MGUB3hWPoVnAxe9teL7EryZ8kZ79Ed4M+WN9kX9
DN5MedP2orfxXNFDk/fUdLzy/lrRvpUDP9VeWjamez4u8NUDFz414LJcfm0v
eh79i12yhF2yhF2yhF1q1g96kbCTqifYc0usC5ZYFyyxLlhiXbDEumCJdSHk
4W/WB+RBfuRVOcHP//L+WzvW9w85wT9996ab13UM3BRHTu1H5InnoifYp8c3
zXlz+/bO4ievyn40fdCKjvUdxU9ela24fK8X13UMe2XavrifXR7yFO1eOdqL
PmfoZ9HulbOEnmdFPa+L9sX3NPQ/+inavbLaW9PnFu1eWcdrOt7ifrMu5gve
GQf8w0/EwZxn+gXX8YKLHTPFGZf2w7j0ubyHKmdx35ePS8Zr4DLvBm8yvybz
EnjL61RZ7bxpPzJfpvOlcoremsyjKS7viyXeF0u8L83awzc8i91oZt/AE3bD
EnbDEnaj2XjVrn4xdf0FNWs2ZXx+e+WjH85ZG7gpXhnnMp/H2dm87udOmNdu
D8UNnHYVuZZkg3Y98cwpE5n32ZbAo/9f7VC9dl3HZriB+/eN/6cfwU2fq/3w
fR+Hym+KC2+W4C1w9mXMj9iBiB+Co7c8568HXHPC6F8dKu9Xg9jthrC3gpvi
8tzAmUfm5fwBF31QPUHnty4bfc/yQ9schF+0JEvwH/182un0xo71zfhPzG9d
1vk3cx8ZPkTb5zjzq/0X570uW3Xjnw9eNa098ltCby01XvoDl3GZPDdrWd9i
XnTeM513eV+a6W0CD/uc4M0SvIX8woMJD/G+iP6HH4J+ynuUJd6jwOENnOcW
/fYlMY/Il2gfOPpZ9Oeb9RPr7NbrD7yw7Rm6z5otehh4M57p58h/hF3b6rrW
rB/TfuCZfi6+8wcXDW3TjAdT+fme8gae4EH7Me0Hu8O6wfzyN/MPLu1FH8oR
t7nkvuOnj+neN+Tne5cdO7LHvHb9Yt0sxmf6BM+0r6xffVUeeW5d2MlXT1r/
7LRl6h8qPtv3KSuyD4f9+/pJbQPPFC+u7yuyR5act3X79j1ifef/kR/56A/5
0Ved96I/vCQr6ufsaI++MY8t63ND2EPG63KHfhbHG+0t0d5oD85zhYfwq5l3
9IZxMe/F+EDZpH3ov+oJ8sADz03wH/LDf9GvW2bwL+tv6Lnop4l+Rnv6B0dP
977zjIFD24SfGf6YvBfxfjFecPr5evYHG1sf1F/tcMjJvPD580tf+WT79j3B
Q58FN8WL61q+ngr/GfwX14vcTxD/wVr2H+rCLomcIb+8F4aey7pvLa/7dWoP
Y/1N2AfBww6Y2AdL4JnaK9GHLKEPaidN7aToQ4Y+iD5nuo7o+ijvnb6nmb6n
xf3Ukngu9jRhZ7KEnckSdiZTOyPvbzP7Dw6fYm9N2gde5D/8BxN+Yr+ZsGPx
nsp6p+91lnivM32vZb1Te2It25O60Leaq/72zA1bIj5mLeOzY7/Q4U+vPzpr
6h7CW120L/LfDI95TLQPXNZNY70o+rfLDXmKfvLswIv79yXBG3yiR3OOm3Fu
2zPy+AP4jUs/W7h8QP6e/ujU7395fO2r1jhhyYaVY8LuxXst/QROP/TL92hf
1Oe6aA8/6NuRI0+9u3pCv5AH+3Pgimu+HjRX9b9s9dcunTh8SL8Y105L39u1
tvRxdviAz969YUvPwDnPHH7mV22GrOod8ifam7anHf3RvphfURftb32p89rj
az+J9736m60zpy0r0Y8l+rFEP+En9NphymmjN5dUHkvIYyoP8yL9WKIfS/QT
/gPjYpw8B5zngfNckacZrv3zvjDuZ/rO2z5nbc947hFdR4wujdiQLS8/XLtt
Za/gh+/Rnnb0T3veN7736LAdG5fM6hXrEfhvBi+6eviQXjEu+nvwmSGjl23L
nxvnet5Pcb7K0Q/fj32M94M8zGf9xbvuNGFKKdZxvnfey1Wvjh3Vu2pKzw/q
t2/P6z7+0vffhw9tM7jqzbOvWLZ9+4exzn615cCvX5uW47QfWpON37bygKrD
Hmy/cvv296P9yK4zOs8YPShw2v/hjm3Xreu4f1Uvj/fS/kennnX1uo4HBB51
Fm8888Whq/pVrW567uvR/pPZT+4/Y/T+gdP+mFK/P6zr2Leq5HaD9p9feXPf
oW0GBE77K6/qct22laWqfk14Fu0n3tfvhQ3V+AMz67UOZZ9KeyvyVqraz+0a
OHr4ekXO8Dc2uvzgKn93j3sqP+DBp/MzpMKzKf/gtJ/l/L9RmUfT+QWn/ZE+
v5MrehLty21+MmJLz0MCjzoa1x/0iryPf2783eefTTog9Ad8px2Ofv3SoQNC
T8AvGHzJt+On9A19iHqQmupzFwwvxbyD77Z49h4TpvSK+QUfsect31w6tGfM
L3hpcueBmyf1iPnV+hfmV9szv9o/8wi+q8vDfKn8zAv4L3y88A++o/MDz8on
PFfsQ2P2H9f3mThr6oDgGfynD750QmlE3+AZfNEbO/+63fTewTP44k6vvz12
VM/gGXxB+YL23bt2D57BB1564kfH1+4bPIO/d/wp1UPb7BM8g5O/B8/aHp61
f3gGf8TlgWeVH57BH/PxwjP4aOcHnsGnO5/wTF7SmONeXnvp0H7BM/h+5/zj
797BM/jUW/7z0w3VPYNn8O/d0+ZPk9ruFzyDf/+op/7Xqmldg2dwzkHgGfzi
pX8asnnSXsEzOPmo8Kzt4Vn7h2fwapcHnsFbu/zwDH6Njxeewbs5P/AMfqrz
WdTnhuyuTreePnVGH9Hnhuysw4Yf2/aMXqLPDdlNz3yxckN1d9HnhuzmY6fP
nrasq+hzQ9bwxsi/bajuLPqZ17MU9bMhe/7tPY+qLe0p+tmQvXX9xk2D5nYU
/WzIXvb+i/rZkNW6PEX9bMhudPmL+pmPt6ifDdmdzk+Rt3L27BHjxk2dURLe
ytnnv//6xZVjegpv5azL9AefHzuqm/BWzvbZ8Qeztq3sIvzkdShFfsqxLy7y
U87O+vE9H929oIPwU84WdL2rR5uDOgk/5ayrP7fITznr7HIW+Sln/bt0fbx6
Qs/gAf9t50E/fXdDdc4D+CHTP/nR0DY5D+CzLq99dtDcfWO8rQr/8vGCDF0x
e/Gsqe1jXOBDdpy236ppHUN+8Nu9f+QHP2/33Y+Z166nzqMl5tEYr8yjJebR
EvNoiXm0xDxaYh4tMY+WmEdLzKPpPLKPS9gBS9gBS9gBS9gBS9gBS9gBS9gB
S9gBS9gBS9gBS9gBS9gBUzvgdtUS65Ql1ilLrFOWWKcssU5ZYp2yxDpliXXK
EuuUJdYpS6xTllinLLFOWWKdspbXqUZL+F2W8Lss4XdZwu+yhN9lCb/LEn6X
JfwuS/hdlvC7LOF3WcLvsoTfZQm/y9TvIp86sY+wxD7CEvsIS+wjLLGPsMQ+
whL7CEvsIyyxj7DEPsIS+whL7CMssY+wxD7CdB9B/EbjAOC63wfXfX3UEcj+
HVz36eC6Hwc/5cM7Fk5qWwqetW5C9uPRXvbj0b/su0333TEu2V+D6z4aXPfL
UX8h+2Lir0/6PlriLcZ+XOIqxr5e4idGfEDiJEacBN60DgLewLv+oHv7Ucf2
D97AiZ9IHMOIY0i8IuSRuETIL/GHGC/88Fnx33I9JM637oa+y+asPTD4+dOV
I/+ptvRp1n1kp+4T5w0Mfjif2dr594tv2DIg+HnrtboRpRGbsl94fhf8nOtx
jJWiV1e5PKcd1u3qWVNzvfq9y8M5JvwgT/bKsYdMnNcv+EGeLS4P/KxxeZ47
f/LUjvUHBD9f+vnAMS98dcP27QcFP08sOu6ehTUfZvf/8h8JQLk95PPVffe9
Ykz3/YOfzzs8/PHxtR9ld7k+w8/OHl+srO99g58eNZ0Gr1n4cbbL5Nfu71hf
ivf0SI8fzp9wxPq9N/YO3h7yuMRdYvfKLufo355zQ82a3O6tdjnnDDxk6aS2
vYI35DSPG8MbcrZxOeENOcnTgzfkpL6J9/HHz0y+pGbNhmz3pfcNnDoj57PN
jx+4rmZNY3Ztp9Fvzlmbr+Pdvnlr3sKa97Njlw4YPLRNv+CTz8p+oRR8ntB0
DvJBdkuTX9cr+Dyr9WV71ZbWZfu7fwufkxc8NHTNwnXZWK+nw+7dfMa7PyuN
WJ8N+vzjxes65uvLZx6XeE3W8e+5/Cu8bhSe93P527j/A8/IP2yHbM2guT2C
Z+S/2eWHZ+SnXg+ekX+fT979avyU/sHzLS4/dgCeb256X97K3nlpyYWzpuZ+
6ZNN78Xb2QFN/kYpeK7o/zvZXoN+/ccx3XsFz3yyzsLz/Xes/u/ja9dm1zXJ
2S14Xnr87j1qS+9le5x8370La/aRdWRNNlH8z1tdzj1X2CWjN+f+51Mu5+r2
P+lWW9o7+ETOC5rW5X2DT5UTPpGzt/2wfPeCXsEnch53238NXLOwT/D5xpZj
q9csfC/igfC5b9P8vpItdPsDn34e53GGfH9Uma/Xst23/vKKBcN7BJ8PeT7y
CZOe6zdl4r7BJ59/afLr9g7eNnv8Yavsj/ZzeZ6YeOxDs6bm+6MTXJ7n/3jc
y9UTOgVvyEMdNLwhz0iXB97edHnQW3ir2Ic3s82nDTx76ozcbx/aZAdWZ1X+
/sLbD5vkeSp7ZdufF929oCT+5LJsp25/vKrd9Hx/3bap/+ciXgdvE/28Zkzp
vO5PLM/5+TwRJznRn3vI/T/5auWYfH89z59788++GNG9657Bzy7+3L/Nu/WQ
J5bn+2uee4o/F36ebtLPF7PZTXUZ+wU/vAed/D2Ch3ea5KzNNE7C+dj5HpeA
h39peu5D2YarTz9v7TqNk/CZj7f1PZX+X/N8EsZ1kffDfhn5H27iYWHc94Kc
Je9vjK+/xf3skvCfkfO+Sj9eJ9st5NyYiHvweZHnezAv47z/TiNW/+/Nk/K4
x2zvf8mNF87ftjKXf2xlXPax84P8lff6ZVvavt0dC2vy95RzcOwb8i+tzKPd
4/OIvo33871TRd8+ScQrHvfn7vLqjou3rczlz7z/W5f0u7g0Yq/QK/o/WfSq
TUUPYx+NXs3xc8VLur9/xpa787hN5ZxxtfHeMd4dK++p8Z4yXuTivWa891MX
IHbp8ordiPsT4OEs36efI/b8MJdn1YJ9vrxhS6eY3++5PFNfnnrK0DZ5PIHP
RW734Ad51C5d4fLs5nYVfn7oeRG/czuMXepasZP2n2634e31ip2P/Sy8ZZV1
wVgX4G1uZR0x1hF4Q15dHzdX1iljncIuPFFZ1+xNX9fg81Pfj78i/sYql3NC
Uzyqa/D5uMvZztdZeETOab4uIx+ff5D18XOXE3sFn8i5v/sJ8Pm7ynptb7tf
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
l2pmvf4uFfpP3ixxQnDyZtk/gpM3Cz88l37IS9b9PnnJ4JcV+zHlmfih+p/k
hTNfkk8e8z5Ofi9J7Q955No/LZFzaOGcvS7ak+dPnYD6t+u/G2/mD7NO6fsC
z4n5yhLzlel84UeFn+N5ztgr1auJ3+mfNGSqb0/LPKL/rONht/19Yd5Vf6gr
UD3ZlOCN/mnPuMgzRh/Ilx4rOPnSZ/p7R//g5yVw7BI4v2tD3TvykL9NvAj8
9vev/f6Wnv08/rkk4ufFc/+6sJ/kJ8MD7c8vnHPVmbYnHxf+iU+eIzj3cD4p
doz9OOcL6A/55JzLaD/ET2hPnrbfqxj4i563HHm9zs9jxf4DJz+EvGdw8p+R
R9uTjw4/5DOT5w1OXjT3P6qc2Af45x7y4u/OzKwnL5r1MfJO/V4y3ndw7nXn
3kP0s0p+hwh5yIsmvx+8m+dFezww8M6eF40fyHi3Vs9/Yvv2UtVq93t1Xea+
TuTk3s5P3L6pHp7l74vqM3zG/TEex+O+SHDyFS/w+QLnvjLuBQPnfrCyx53A
iStiP+NeBI9Dko9ezLfsW8X9ieDcA4mfCc79XdRvxD1DHkdlvSMOxj2l5KmD
cz8n9zOCc8/kA37PIDj3InJ/FjjxZO6HAueeKOKn4Nx3xP2PUUficW/uMQTn
3kXubwLnvinuGwInD4R7MNFD7sPkHiXwl/y8g3taw39wu8E9dOoPc38rdhj/
gftJwTnvQw/ZD3KehR6Cc/51sesh+Br357k/Dpx7P7j3TeNC6CFxmC2ih+Bt
RA/BOdeb4Hqo8Xn0UOP53EvL/HPOiB6Ccy6AHoJzjsl9l+CcexJnBn/W38ef
+T4F/CN/f7/n+w5w9AR9BuceNu4RA+eeKOLJxP8558V+Rl0O98e6noNzjoye
g3Pu3NbvuwHnnPqXvl6DL/K8JvYj4JX3omfEmcE5HyfODM79crxf4NyTxvsF
zr1e3IdL3Gw3P/fn/lZw8gS4hxScfBXu2QSnf+65A+e+O+5rA3/L8yW4Xwyc
e8a4Dwt8judjcH+Q5kVw/xH2hHs/uOco7tvw80ruOWL95TyXOj3ac78K960o
zj0jieeaPpd7oDSuzj1QyMM5Mvc96bkq9y7pOSz3j+i5APeP0D/n5twzoufF
54qfxnk99zrpOSn3Xum9H9xnBJ75fB3k8oF/4fH5gS4HOPeTcP+L9sP9DrFf
8DgP9wLo/QMTE/Ef6nt1n/hJYr/D/VDwtqvXdZJHxHOpl+R+OsUfkjwB8h/8
3D8/H/H26D39kC/k73m+T/H8Gfwqvtfum0m3rByT36MOPmngw0uWzMrv8we/
eOKVpbZn9I/7QMA7PLr6pSWz8vv8wSv1Qfm96Nqe9Qb8Iu8few1+ocuD/Yo8
JZGf8fF7oMgf9Vm/LbWtLeX3jMW96a/826PVE/J7BcFZL9Bv8Pvk3nLwN7wf
xqXPLd5j/GF2hMsZdt9xvQ8QnPEyrqiHWvjzg6dMzO+lBD9G7qUE/2LRuBun
LcvvpQS///pzN1w6NL+fM+q/vH/kB79D7o0EZ1zID848IifjmNyUH57fRxr+
9iH/b1xpRP77OODIw3PBj3SeeS74JNcr2sf8+3zRHhz9LP4+1Mx66uCK9+3M
rG/5vp2Z9dQZFe/Vyc9Nir8PNbO+5d+Hmlmvdc3gO8m9zdgH/ArkB3/A5zfq
yhyv+PP5PW/gbWcc9eN57fJ7p8GP9vbIDz7X+w8/KSFP3Kfoeog84Ft83pEH
/OSnD92yZFZ+bx74Tx1HTvAvRX/iPMifi5xxHi33zPOcK1w/kQd8sdwPDH65
t+e54EfLveVx37DoITh6yHN5zhXyvkSejIwXXN8XcH1fwHlf6D/u5RW7Aa7z
Dq52ABw7QD/hJ3scI+69d3w3t3vYffS9neDoF+sX7cBZF3h/tL417rF0nPcF
/Yjf03AeeC76wvrFc8GPcp75Pjh2u3g/ybsZ+o8egDPvPBe92NP1hOeCsx7F
fbCOHyP3bINf6f3Hfa2Oq57HPdyi5xofQB71Q5An7qUTOwC+VewA+CliB8BP
FjsAru9F5AP4c5Ez4mAnLzu7NCK3V+D3i/0Ex34yj+B/fWF4lxG1+X2Vcb+I
2FVwtav6XN4HcOxq1LFLvCLuFRd7Qntw9IT2yKX6rHYj4nFiZ5BD7VLcn+z4
5aLPah94rtoTngt+h/wOS+QBujy878X2+fuudgz5wVmnIj/A8aPl91OiLsaf
y7iYN/y38Bcd19/rAT9C/Fhw9WPjPmmfR8ar9SyMV+0t49X7tEM/WK/Ev436
FPFvwQ93+eEBu66/6wSu/jy47kfAL5L9CLjuR8DZj/D+6H4TfnS/CT/gnWVf
o8+FH/ALZV8D/ivZ10QcxnmIe12o45B7pOED+4P8isMDPGE/414j4slul4q/
0/R62NXi/TArsr2dB+QEV56jHtb33fTDc7Q9OPaT/rU9z2Me8APRf83nQY7I
c5bxaj/Iw3weLTyDH+U4z9X7HCK+wP5M5FH++Tvu4XOc8YI/7vxE/bD/P7wV
74vLz/GLv1f7d7vo8tCe/upl/dJ9QcSz/P/B6VfrQ4v3EM6spw6dfvn/i+Q+
sZbP2WfW6zk7uN5LUPxd4Jn1O8t9d1oXT7/8v/avdW3Il8griOeSH8Lfmkca
de/+vd+M7NZ/1bT/7/eVvP21jtOO/6c9/WNfD/VzRvoHp66W78fvnrn/A671
aIxfz2dpx/e0PbjeM6znhqm4VvF3nGfWc34KL7HOvHDbSaURfar+BxpzuS8=

   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNmwf8l9P//t/3+z73fTJSRhJCaaAkFCEVLSpKJERoSSqSVUqKhkI0NGwJ
ZZNdkb33JjN7b7J+19N1vo////H4nM+53uc+9zrjNa+7wYATe4+sViqVj0Kl
kquepnpD1V+rsSq8dVaprNaBI1UuVvuVaj9KeJbwVcID1aeP+mSqN9HvjVVO
17H+6jNb9dX6fbTwHOFrhAcJLxS+Xniw8KXCNwgPEb5MeInwIbpefZUL9fsY
tc9VvUjttxeVSm/hl3Wvp0s9h/Bq4ZYqe6j/r+p7h/rcoXpMrFQ2Uvvv6nOn
fu+pcpjw6brOfepztPCHOn6v8BHCbwuXKkHXeUh9b1P7MWr/WG376/epwtN1
7qk6fopKVWW8jq2nthNUL9PzHKo+rwsfpv7nC1+qY4cKTxdeILxQx7YT7qtr
Z2qvJ7wb4yy8uXAb4SmMuepzVd+qfgep/SXhSSqbq/1s1X+rrqP2lqrX1bnb
CncUXk+4kXAn4SC8pXBb4Vx4C+E9hfsKzxBeKHyw8GThS4R7C58rPFf4AOFx
wjOFJ+k9N1A5S7/rqa6tMkG4h/qcqfpC9TlI+BzhOcIb8Jzq85raagnXEX5R
OOd+wluq/KayQuUglb+C19JUvev2wluo7XX134z5EF4lvKvwWvVZJnyXxnmw
8OdqO06/bxa+X9d+Wec3VP+XVA9V+y1qf0Dt/YSvEr5Z+AjhK4VvEh6pvtuo
XKTfh+iaNwlvrXq66o1VTlb7F6qHqRyosjJh3u19XedyHV+q66zS/SYKd1Hb
q5n3y0z9fif3+u2m56xZetymqO9c1RNVOql00bFBqiNrTOVczld9uM69Qufe
qOs/oLahKhuqvKX2C9S+VRpXxop7v6H2KaqPYF8UHuMZqp8p0j5S3VrPsJHw
bqovU32pygEqFd3j38zP/pPOH6+mseq/QmWI8Jdq66TrDxeeor7Pqd+xKrVU
+uhaQ9X+rfr8Erx+Jui83YRr6PjDOu9jZIPKiTq2TvB7PKf29YPH+QXhn4PX
z1k69xe13auyP+uM/rrnaNU/BK+3M9Snl45tqjJJv/8sPBb76HjPzJgxeaLw
+DPm3XSP84Tn6Vq765m7q+8MyYf71HczlTE6dm/pNf+jjq2j/g2F90VWlB4T
xqaOfi9X/7rMn9q/VN1RdQ31b6A+++h4IVxfuJ3wXyqbCLdQ/TXrVfiZ0muX
NXy/8InC6+s6T+q8UmUntR+o/j+r7WaVDip75D53ktp3THLsNOFdhPsLn8m8
6DoHCA/SNZurva/wqWpvrfO/F+6nsmtuuTdO7b+q/X6Vbip3a4xGq72xzm2W
W46doj6tdOw79gfnCn+r+mCVQ3WvD/X7ENaqzhnL2istT7n+bcK9VU6gv+pn
kZWZ9/NYlTMyy9lNguXog7rn+8Hvcrf6vyjcS/hW4Ta51+FEPc/J6vsn76hy
gtqvpo/ahwtfw32FRwgvEr6ddSO8VPge9rvwtcJ3IMOFbxK+T/h3lW2E26vu
pfs1QeeoHqDSVHig6j+qnt8Oqk/RuTeyXoTPFL5d+EHhcege4YeExwvfKbxK
eFu9y+567p/VtldmfTSwYn3E3jlHfTZUn594fvZ3lnSZfl9c9Vrejv2hY/ez
rtU2Q3iV8AvC3wt/gw5F56g8LPwi+kP4AeEnhR/UOzwmvIfm+VZde2Aa/zrq
007tR6lPbeE2wocJ/6ZSU3gv1b+gV4R3Z82orM91Un902f7od13rC2SyynW6
R0fVj+qZbxC+Ht2pvbaT6m7Mm/q/oOc5UPh59VmqPkt07DT1aap6H7Ufqz4t
hPcXHsY9hRsLd2ZfoPOEW6u+RvddI6xTK2v1eyPVO6j+EztEuDnjw54U3rHq
ecS22U71d+hI4Waqv6n+JwYrTfXvwmC9fAC6V/gt3aMne0vlWuEdVX9bta20
veoX1e8D/Zigh2jIHKv9SNaU8B7sC+HGwj2FMbSa5F7bJ1b9vuj3k4Qb5R6T
EayZ3Ht5uPBmaUyOqVrO7CzcS7iW8O7CfdG5wruxL4WjcEvhnsJ1hTsIHy28
s579K+FOKvXV3kX1ELVvJdxV+DjGT3gH4e6Mn3Az4R7IMOHmjAnjJ7w9ei09
G89zkHA94V2EewtvndbS4QnvJzxUeFPh9sL9hTdHryMf2FvYZ8go5lTjebV+
n6Lx3KC0jvpKbc/mtkH+YV0X1s+jGHuVv4TvUn2Pjh2OjtB1Hte5XXTup2rf
Pbe8PZs1oN+d1f6J6hrqszf6XHi16vNV9sy8JpF1S7BJcsu/k3XuTYXl4Y2q
f2Kdq+/HqrfLLRdHqc+WuuYN2AmqL8a+UGmr8ojKdirvsN+0hr4W7qf6O+xN
laYq5+k6L+j4u+zBwue9hz5Xe2e1D1b7brnl3wThrPTzrlaf3wvbFGtU/10k
u1f1SWr7umK7+brce3Ogzt1BuI/waOFbCuuIm1U/WtjOX8uYq7zLuGsunits
k/yg+pHCdtNTqp8vbFP9yLjqeV7X/dqoXl5YPzcR3jzYXnhG15qqenKyZ17m
nZO9tby0DYAtcGSS7bdUbT/jL1wnfIjwfOFrhdtklpnHquync6/X73qqW6rP
kWoboz7XCu8rPEC4Zemx+Av7RPUPFdv3H+n3j+xH1X3Uf4HwYvWfK7wamSY8
RfhZ4beEpwk/L/yO8FTh54TfRv+WtqV/RU4U3muLVM9Dtwl/qT7NS+vcHVU/
XHisGLNtSuv6Bqq3L23/7KC6KK03N8VOiLYLpwufHG2DvlDYbxuJbBE+IdrW
maI+o6Jt3/N572jbd4bwV8G+zCnqXy2ti+sw9urTWX0ml/azGFvGakj0urle
eHD0mC5mzavfPek5/ynsE/2rek/9fk/46NI+FGP7jupapee9NnZomeZd9fHR
+/Ye1lrheeU67NMhwo1Kr23s5G1L77tjhBsKX6jzXtP1P9TYzhf+QPgr4c7q
8xJjrrYTuAbnqvRXaabyUcU6lD7vqf9M4ddZC8J769yn0OPsX7W/KbxG7RcJ
vyH8sfB04ReFVwvvpOt9JryOyhVq30D13mq/srA+7K36B/VZxLyrHKXrRh3v
qfqKYLnaT30WYv8J76RjJ6Zn/Zh9pXqxSovMPjn6q4nqq3TOVun6l+jc94S/
oF24lfAhwv11wXVUH6R6i9yyf5B+X6FzNkOPYxcIv6xjczUPD7GfhYcL31na
32oVbXO1yyx3blM9OLOsQcYgP7Fn6qS1lHNNlbp6t4nR/trduk5r5pn1L/yT
6g+Qu8m+/Vvnt1d9fMX2D3JvgPAm6neaMANzu+rjMsvup/ABdf0Ldc3dg+V8
G9XnYZ+p+yPoCJ5D9S+qP0XeZ/YpsOdXqv2v0vvqP7u0tI/bPbOOwVfrkdnP
/Td3XU/Xv0jXP1u4pvDnzHuyn2/J7BOhD57Utfro+HQ92+3Ct+r8n1WvyL1P
16r+orBPdKbq+Zn9O97rAR0boT5/qN6wtN/5tfp8qPJv2uNrgmVeHdWfBo99
ZJ5LP/OX6rMWPZCe5350ADZGYd+WscI326e0L9NCdb/SvlAz1a+iA9T/lfSM
+2b23Sqck/kdLtDzvar6A/Rs7jH/S/XnOmfdzLKlq+p1MvsVT+X2of5WvZ7a
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
         "]], Polygon3DBox[CompressedData["
1:eJw1m3f8j9X/xu917k+kIqJCMloaRihNSSIhMyqFSMiOUlbIToUS2oOmSkZp
IVK00KKib0N77yG/6+m6f3+cx/tc9zn3PON1va7X612956D2A5MoihanUZTp
d1EeRS/rd4sOnl8SRZcKHyG8W/hm4dH6PSmOohkqDXTOXLU/pvZndby52l/S
sVJqO1tlqo4t0kUbqn0fHa+s9hnCQfhHtW3RuTOFSwv/KvyO8AvCrYVrqn9N
9X9T+GLh+sJHC89RnweFl6n/mcIPqf0E4f3UXlX4QeFGwvsKVxGep/6PCz+v
/i2EFwqvE94s3Fn4cfU/TfgA9T9E+Da1LxZ+Tu1nC3+hh/1XuInarxWer/Yn
hF9Qe0vhc4Vj1VO979fqe4vwQ2pfrmPN1P6krn+6cEWdX014jX73Ut/mKieo
bZdwK9X3VXlV9dk6f5H6L9X5TdW/h/r8q7Zf+UZqf0Dtq1R/Q+0d1T5LeKHw
U8JnCN8l/Izwy8JthD/UM/0m/KTOvVr4TrU/LbxO7a2F7xBeIbxW+FzhDbpf
F+Fj1f8o4dvVvlz4JbW3Er5A1ztauJXwx2qrof49hE/QM9ZUfZ3K8ar/pPOH
q/9F6n+s2lur/yfq/6razxc+Ru1Hqv274O9xtvAo4Q+Efy7m41XCy9W/ntp/
EL5SeIGusUzta3S9c4R75Z4vA4RrC0/PPI9/EN6sth4qVVTvr2PtVb9X5XnV
N+pYO/V/X537CDfW9esKLxFuIlxJ+FDh+9X/ReHX1b+D8LVqr6T6Th1rq3od
1Y/R830mPF/n3KP+z6m+QcfPU//7mNPCrwm3Fz5Vv3XV/0sdu1P9p+ka+om+
1/FN6ltPv8eq/T6Vo9XWVN/jI7Xfok4XM9+EDxQ+Xv1mMT7qU1k4TT0e84UP
Eo6Ftws/rPK68AeJz39b7Sfr2n+qfaTwP/o9k+dX6aK2y9W/VuJ73Kl7jVH9
FLXdpNJQfY9gPqh+ovpeo/P/0u805oPaGgv/q98Wat9b5WXVL9Q1jlH7ubrO
/3TuI+pfW3h/tX0pfJ9wDeFSwp8Kn6n+24VvFb6E9Sn8k/CjwscKb9Hvgbr2
M+xBuuYrOr+z2o/m2dT+lvAlfB/hY4THqs+pvK+ONdKxR3SPN1T/MPH1v9f1
z1P7eNa86n+rT1PhWOV51c/SsY/VdpvqPdT/HOEDhI8r9q9OKvuoPkD3PVHt
Z6t9f7UfqWNvsTdmfv8KOv9r4ZZqr8D8L+bn/WqvKVxa7Z8J/6XfM2IGUHsq
31L9ywvWLuZHeZW2aruOb6j6oypvqv6R2rvr/kN1vbKJ5/z1Ko+p/S21b0/8
/OP0e5rO/4c1q+s/rP5HqV5O9S/Ut5nut0N4burrPahj64Xf1nldhDur/TDh
ZsIfstcI7xZ+Rv2PZz/R9aoIZ6nH+3y1HyncQv0/Eu4QPN5nCG8VvkTlQNX/
07GTVO8Y/D2a6tg23jV4fp8o/K7wecHXP0n4Pd4/835UXvf7Svgm4TLCvxft
D6m8IvyOcFc933/qd67ev6zKa6rflnk8dxXv01PlEAxi6udtp/tVFTxFx94X
XqD+Bwsnat8hPEt432It99T1O6l/LeEz1f8DtXcNnu/nJO7fJfh7t0y8Pqfr
9yqeX7/Dda3e7KmqX6NST9e7Wcf2Ufsfxf136z6t9ewLVA5X262Z58c/xfe6
M/PzhtT77TzhisJ99HuTrvdA5ufbW+2fq32KMK/7XTFfdwSvF9ZNA/Wfm3m+
/lu8z43Cewv/VozHLZnn+9/FeD6v80vr/LW6fiOd/3HwfGPeNRR+T/0vYzzV
Xke4TfD3bFTY/+4qhwv/J3yj2oep3wrVH9GxQ9V3tc5vq/phOn6Y2l/RsT91
/Ut0fDrrL7e9xG7OKOwz4824zxSOdfwQsMqlqp+jsiX2sQ/U502VTar3USmj
tp6Z+2Z6httVqgmXE35LpSW2jO+XmANcpnp/3S9XfVzm579Iv9+p7/cqF6v+
j553IPspNjX4mlz7HR1ro3v3VZ+SxNdgzH7XsV/U9rBKXbhQbvvzc7H/XyG8
l+oTM/Mz7rdV1/5W/bsx1mq/TPXTdZ3JfB8de1N4Au+MLVB5TvUDdI2rVe+g
8qFwz8j87vjc/TlvvM6vhw0XPkt4qnAJ9lZ4I5xG9Y065w3GW+Vg4ReFN6g+
QqVCZv6zTPWlKo2EG+h643Svs3R8AvuXnuNBvpeOHZXazmBvlhV86XOVx1Wv
r99J6r+XfofAP3XsJNU76npldI2Tde71jL+O7aX2+9Xemr5wUtW/Y49Wny06
9ohwPf1OVP+nUr/fUJX9dew8lVLqu1W4nerH8gzC7xXX26fE8/NhHSur8dxX
+OlivpYT3k/4ReEn4RTC/VNzRzhkRWybyp2qd9XxQer7s/BdwhcIDy6J9pCZ
jrrXzMjzc4LKuzr/VeE66ltWfVYJLxE+ENsjvF54ZbFeDhI+XfhQ4bv5Fqn3
XvZgbG85ta8Wfkr4INaicBPh6sL3qr1Xai4Lp90veD3CLeGY1YSnp7Yt2JhG
wd+bb/M+8xluwxqJ7SP0gUOn5q5w2MPh1iqD1d4ejqr6SPZF4R+F66rvBTr/
a+EqKu8JVxduHHuOMlfhYHCxbcX43KHz31Z9t0rb1ONH2wfcg/HXPYaq/5TE
6+FCHTs89hplvZyemw/Bi6bxLYWHCQ9LPN8r4JOovlrXOELX6piZX3+iPp2x
JXAQta9hfmEbVa6M3Qcu/p2u1xdfRHhl5jnGXOtV8JO/EnMH9lT21n0yr48X
1OcUnk/XWKX6qapP0b1Oy4y3qc8snT8mM9ctp2uM5dvrfvupPkT12eo/UXh/
4SuF5whfB39MvOfUx+cQXq/r3YxNE24i/BLfT3h2aj5dGk6I7Szuvzr2N+SZ
+qq9IvYL26T2/pltOzZ+dGZ7z/gyznPZr4QrYAPVdkuJn/8g4UfVZ2Li56uk
8w9WfXzmfZW9sXKBsRnYDjgvvuQwvlnsa/D+fDO+3cH4WJnfZ63qR7Ansp5z
c8mRcLLc+yj76aEqk1Svjb+ELVA5UvXrM7eVSszBsdPY6+rY69T8+Qtd6xfh
eSXek9ibsBmlMnO42sX4wv2/Vf1wlbLCtwdfH+5drbg/HBOuiQ3Gd26m8oqu
9QtjXDzfCuG+7Jeqv61SNzGnWZybY8I14Qj4Rth45le5yLa/be6xx+7cruff
qfq62N+I8cbGw72w0dh+OGJX4RMjc0ds/hnFfsF8hYM0LfYXuAnzuUmx/8zO
zCHgRnA8uAWcvx3frtiPWH+fFOvl0+D96jy11y32o66co/ZBkf0VOBtctFZk
LgenglvBOfGFPmctxp6jswpOii8CZ4SrwvHgpmgccD84GlwNjgbXg0Phu8Lh
4VZwSrgnnBSuic+FLwzHwxeDo8EV4ahwNzh9e9ZWZK5fQ3hx7D3ml2Af6AK1
N47sG9Ur7FHjwt5jv5/E3qr8he+Xez38lHh9ldU7dUmsgaCFHKNyr/piOo4u
ML4kNqt2Zh/kIuxjZN8EDtiBuRyZG9YUfkL9m+Ez6X7V8WFir+FqcHX8gsQ+
Mr4ynPtC4ZMic3H6s3b7YX9U/xZOzb4ivDSz3cZ+wxly1b9Rew+1n6H2p3jf
zL7m75F91ANLvD7KFfPnAPW/NbbNT3Lb2NtVvyy17d2k34qxfbrZzMNgf3wE
vlyJbfC9wlekts3b8fNjczL2O2watm1oav0Gm3qf8IDUthYbeb/wwNS2E90L
21ZD51+e2gZiC6el1mdOFX6fuZDa/zhZ+F3WUmp9DRsNV7gyte1+MLUtrI8N
VP0ktb/D3pZar2oY7O9NTa1HNAj2Z6ek1hfeDd6Ld+J7l5iTLFB779RchW/I
Wvwz8bc9IdhWzVB7pRJzErhJP+EmwocE60VDUuttBwTraX2FT0dfw89grmFD
Vf8G3Uj12irf4mPA01Xvypiz3oSrxbbR2OqqwfrT4NR6FxwDrnGp8Gn4k6n3
0zpwQoQStd+mn458G7VXDtanBqXWvxLhecKdhE8W3jdYL+wpfKrwhMz+HRpH
A5UywXpbD7WfwvfTbwXmgspRmW043Gh0att+ivB7rP3U/vBbHI/tk8/CXql9
Enuf6rtz21nsLTYJ23RcsD96XWr97ZhgvXVsan1tZGYuXim2TcSOYk9Zv3BP
2vfYy8h8HbuOfcc+DVL9At3zGrU1TW3f18Bh4VrChwufhcYQ+x3X6N5Xq1yr
9ht0jb9y+1H4UzdG9keeFm6uelW4l85/Rvhs4UOEawi31jkhMUdrpvo7weP9
GdxN7ccG6wfjUuuL3+v8yxnvgo9cofYrImsV8Ak4IdzwmtT66mHB+tvI1Ppt
feHXhCel1tfgYHDfUam52fHBetfk1Poeew5728Gp9yI4M9x5fGp99IrM/gL7
G1ylfzB/gnvgP4wI/tb46X/o/HrCG3lend9W7bWC9b2rU+vFtYP15TGp9cma
wXrjVan18Y259cYJifWidrm5BHv6HWglmedeGzgYe0tq/asR9kL1jWo/h/XA
cXxd4QnC7YQzXW9tKPY/4bTEY8rYMie6qv6f+l+vege152r/W3iUcGvhuNDz
mA/nstZKfI+rdX7XyPf+UfiqxBoxWvHfwjMTn/NT5sJ4Nkvdxp6O7Tso9V4f
dM171H+2ju1S2z9oComf4encxyaq3j51X57xXrXPifzsXwXr5ejm/6r/bzo2
XG0thf/DFw6+9sXCpZkf+FGJ1wBr4Qf16Z/4Gz4n/LPwpMTPvF34F+GVqTWt
/xGoyO27zmFOC/8q/HhqjfqT4D1zh87fFHkvPSKzNrM/exy2CA0mts8RVP9e
pZ/6txR+Vn1Tvq/a52Kj0TLQq1Kv5+Ny631TY2vkaOUnpZ47zCG061zto9X2
t/BOtf8mvC61BvOl8O/C0xJ/o28yz2Hm8gjh11SvqmPj1XdMZD2MOXS32mdF
nlslwfVuaiultlLBY3GJ8N4l/ua3JB4zxmKX8JzEc/K53HsgeyFz7vXc9g3f
Gx/8OPXvrbZmPJtKFa6ZWzuYr/JN8Bi/kFqPZezxmeBKh6b2pZ7W767IHLhx
5jFDP0VHZSyZo3zr41LP3SdSc+cT4ZiqJ3qHBXqGGTr2Qu45Py+xps1a4Bui
Z6Nr820Zc/RhdGLmAmtmvvpPj7yWGFO4UPXUY80cg2vVSD33HmAfiuzzls38
DZ9MzDH4tmWElyTmGKWD1/Bdif0x1vZecITENj0L7nOL6t1Tn9tZvwsT20Bs
YYmOLRKeL5wGr4knEnMg1grHePbzU/flmnyLLqnvVRafB1uNPVfbPrm1IzSh
F4Wr4fMktgnYBubI48L3RJ47zGH0JXQm5vYq/bZRWy2dVwv/T7+L1f9ullrw
HoV+fWbqvetl9W+g838WHqH+vdXnzMickv38x2B9BJ1kjNo/028S2+f+j7mA
fVQZIFxH/a8Nnkv4EE2EnxXOY68h1uc1rHn4oH5+0XmrhcvHXoPo7VfoHm+k
1mPWo4eUmPfB/zbD9djDY/vMTVTvpfb7UsckV+A/BPue+Oz48puCz0UjKa/6
FpWaqtdi/1D9Uva/1O+8TOdPCtauD4p9/35wUh0fy/wV/hH7oLaVsf1Z3pe1
3apYP8TY4Clti/3kT/VvHzum8rLw6BLzZvgzsRFibvekjuESixsVfC801VK5
x+QhuHXksRobHPsZXuwHzVPbMexZOeZScKyTPadM7hjhotR7ALHDtZm5L2tk
YfCYfqj2OyKP9WUl5sX0oS+a+12pNW+0ePQk1jc+cl18zczrbHCB0XzQfvCp
8K3QEENmvRNt8TRda3JiHwhfaLCuNziyz4bvhibUKbOPiq+KJoQ21CmyNkoM
Ay6xQ+2nqP4pe1Jse/GErnVy7raPVU7FlurY5/B1laa51wt7P8fOwPdWeTc2
J0PrPkx4SeyY9HK4fm4tlZg78auZKlVjrwm+10A939bUxzYKDyixjoaetgEu
pFI5NodFj54e3NZB5QfVh8J/Y9+Te/8dvJbgGOxH6Bf4APrZoyfQf1hkzZZY
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
58rcsQN8dnz3/wOeNhzO
         "]], Polygon3DBox[CompressedData["
1:eJwt13e8FcUVAODLfbxHpCVSVFBIkJIoxQSkt0gJTUDpASlSA1KEAKIUBQHp
9VEEFJDeVFqASA09gNhALGgAgwY0iYSgP6Mh38nyx+HO+ebM3Hd3Z2eWEt0H
tRqYTqVSO0WmqJyVSr2bI5VqmjOVejMjldoP+4kHtJ9Q2EzNSX3z1Q1ju9gf
RcNcqdRsdV3ZK/J56nLLZ4kubDnLZrfJ/2X8QO09fG/MYa6NYoH2FXWf6Kuv
bhNbyK6yT1kD9nt2B+vC6rDXzDWRNWUL2CR2RN0qsZJ1Z/XZavkQdYVZZ1ab
vW7sNTFA+w2+W+xU84Jopr1Q3WR936ipz664Lh2139F32HwzRWftZermqvuR
fLRoxKqo26a+jHFDxZ2sq7q66jbrW8NmsovsDKth3BjRmB0UQ9l1dX1YCXkn
dTXZbtaLFWWt2YNsO+vJirBWrBLbFvdPdNb+FX9B+7Tv7K3uZ/KO6mrE7+br
+Tz2BfuYPaRmHZvNPmPvs1psAXuK/ZntZveyDWw++xs7z+qxtWwWu8TOsprs
cVGANWNl2Ubf250VZA+zcmwT62fst3GdxE9ZNvudunvVPcZqxbphVdQVcH3P
xJzyqvImohA7y3qypvL+4qZxjUQZYx+J+2u+R9S8LZ5n38ca4FnyFuoqsOWx
Rlku1pI9wJaxHsYWYs1ZefYq68sqsH6sKTvBFho7gp1ge1hJNYPZj1l7VoWt
Vfcky8/ascpsDVugdiDbwlaxovJ5oj97na1gd8lHiPpsiDH92dfxXLIBbLO6
layIfI7oxlaw+SyPfLpaX51axBeLVyUfsTxqRvscFeuHPaG2pv7+t/pas0+0
z4tx2rX1XfPZXjzJqosd7kEH+XhRT/8043axTvK55uvF1rIlvv92efvYeOJe
GFsk/iafN8Rw7WHxKU4ZO108rm6rsav15TPu36KGuUezTHXXM5P9KPalC2pL
6Ovj8zL/zpgH1VQWR8yVzXrrW6f2JX0F5Ff1XRHP639I3w2fM0R37W3q1qjL
G88+68G2s7UsP2shrsd9FHnYTPOcjedVu2rUxhzGva3u5XgG1F1k78gP8Mvx
nKv/0t9ch+1nn7G/inPqa7MtbLO8jboL6i75fC32T7Yp9hh1b7FGar8y/8/T
/7+0qSmskz36ffk58Tk8q2ZR7FnaB9g2dffJB5kvH2vL2ojL8sb879r3CVOl
pvrnUfZN7EsiP5vDWsY9kVcVedmseA7ZP+N5SSdrLtZeE/aP2AvSybkzjS3W
mOZ732IHWTX5f/ho7eOx78R5YYLq/L2YJ/YYsS8r2StjzzwiPxp7OXtE3Q1z
VRf59M1WsyzWpf5j7Lho6ZoUZWtdyyHyLfHcGfdrdon1jvsnjmcl+2Lsj9mx
38U+zdrF82vcIDXH2B75JNFGeyVfoD6HcXWykvvVTl3bqJVPFm3VrVK3MJUc
wA+La/KRaj5QX13NHDFI3Z/4dmX3xBoXaf2F1BUUh2L9xDPN7vJ5pziclZzT
wzOS3xq/uaDfO5KVjTNG3tZ8R+PamS+3sXsyk/V/9da1mpCRrJdYN3cYO4wV
Y73jzDd2h7oZmcnzE8/Rh7HnyZerm6j9ATsRZxA7yhqq38q/ZT+wFZnJvhf7
34q4ZnF+quumrkKck/6mxvJVYor+8+pOx3uKumdZJTaKdWGnY8/mN7V3+bwg
vyiKZyXzDI59XF5Mnkc0ZzeNL8Jyx1yxzqNf/ETfPnPMZv3ivhr7mnkLs77s
a3lFkUt0lr8S54q6D+Un1VWMa8KeY++yI6xcPPdsLHuPHWXl4xlkz7BTbB8r
fesZzMsast+Iu1370aw8Gy5vH8+EvzObDWaH2A5WzNjm8Y4VexrPzWaoG6Ou
onxkOnkniHeD4aw46xPfEe+A7DlWjY1NJ/tW7F+jWDk2jLVjx9imWKva/dmG
OD/iXSAzWROxNtazjfIlxj4bexw7rO/+eLcQDbR7sXX61sd7orq+8dyyV/UV
YovZmDin2SFWNt7p4rlhH7M3Yz9nUzOTcy3Ot3OxT8gnxFrTnpVO7nN++bQ4
a9giNk19TnnrOBfk98ezweb7bU+pLZmR/Lb4jfviPUrdbaweK8lWsmGZyRlR
1b35Uv6VGGFsKTYgvlfdXvaiulFsP9vKfhHvxPG8sfqsFFulbjrrEOcxmx7b
gfxp85Vm8ZLegu1XNyX+bjafTWQ3476xJmxKOjk34/wcG3slG8d6s/fjXIv7
xmawUey7OK/ZDjaCdYx1EN8b94hNTCfvx/GePD7WFpuZTvbk2Jt7avcQr/Ar
7G6fk9W18jmPT2D/VTeJPcqy2fh49tlgVjfW6K196w15V5GHNVBXOt7b9X0u
tuivFO/Ucf77XUvFOO0zsa+pqxB7tjiorq66L2K/VLM6zm/tC+nkzIizo6PI
YDXYPewl9VPVdcxIzuQ4m0/FOxcbwg6nk/8fFWfPsDJsUJwd7ICx3fjtrGms
I7aBzY33oTgj2B/iusQ1EcW167Cl+pbKfxv7uHa1eMb1LYl3RzaU7WQbWYk4
F83XKc74GBvPb7znZSbvXxWtv0+N+4t4jGVmJN8R37WUdWA5WBVWlC2ONWm+
p9lJtpeVUtNJ5GS1WDH2sro2cQbLy4lCbAFrx36Q/zLOBPZinGnse3kFUZgt
ZCviLDTfR+wUq6Tmf5AJ0+Y=
         "]], 
        Polygon3DBox[{{1674, 857, 683, 682, 988, 1484}, {1388, 828, 1130, 
         1738, 1245, 1246}, {1248, 1247, 1718, 953, 954, 1719}, {1447, 934, 
         611, 612, 935, 1448}, {1395, 832, 950, 1717, 1256, 1257}, {1643, 766,
          582, 581, 1128, 1614}, {1250, 1249, 1712, 942, 943, 1713}, {1487, 
         991, 682, 683, 992, 1488}, {1261, 1260, 1739, 1133, 1134, 1740}, {
         1257, 1256, 1722, 964, 965, 1723}, {1441, 928, 596, 597, 929, 
         1442}}]}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0rtPU2EYB+CvWFAoVWdjJCQkBmq5DI0abTQOTVBiYl0AhYFNB7vCX4DG
1cCoDjIaBxgNibeJCS9gi1LkWpW2o4mLzxeTvn1+73e+c/qec9o9VSo+SIQQ
nqrnQswlX9t8lAzhJJ+wKx5nP18xz2WOsNwaQs45d+R8WwhV+aracPy+tQP5
umrqZ/RF+Y/8UE44d55pLvA0l5jhO35ij/3L6mOck6Oq2uKYfouf+YNfuM01
7nCdSb8zZv9XeVKuy+Pqjdq1p2y9GWdX79WetYq1u/K+vBHn5zfW+J0/uclf
rPL3kRD67P+gtvTPOKEKZl/VX+Bb9nKRp/iCKc6xwdv2z8oFz++vfEtN66/p
9+Rh1TD/PWtX5LI8Lq/wBl/zMl8yG58Tz8RZXLvGBeec4GMOqrzZj+svMc2L
7OR5pphjB+vubcD+9vjeXLMi96tj+pv6dTmrhuw/au2cPCAbO2TZGt8lk/H+
6XLhLH3CoSaT+P+/+wdnxVJX
       "]]}, {
      Line3DBox[{1161, 1436, 748, 1160, 1744, 1351, 1162, 1745, 1352, 1163, 
       1746, 1353, 1164, 1747, 1354, 1165, 1710, 1748, 1355, 1559, 924, 1615, 
       1629, 1641, 1942, 1560, 1437, 1617, 1630, 1938, 1356, 1593, 1438, 1640,
        1945, 1357, 1166, 1749, 1358, 1167, 1750, 1359, 1168, 1751, 1360, 
       1169, 1752, 1361, 1170, 1890, 1439, 1362, 1440}], 
      Line3DBox[{1172, 1642, 1816, 1171, 761, 1173, 1753, 1363, 1174, 1754, 
       1364, 1175, 1755, 1365, 1176, 1756, 1366, 1177, 1936, 1614, 1643, 1935,
        1632, 1616, 1644, 1937, 1635, 1634, 1757, 1367, 1178, 1758, 1368, 
       1179, 1759, 1369, 1180, 1760, 1370, 1181, 1761, 1371, 1182, 1762, 1372,
        1183}], 
      Line3DBox[{1185, 1645, 1817, 1184, 1646, 1818, 1186, 776, 1187, 1763, 
       1373, 1188, 1764, 1374, 1189, 1765, 1375, 1190, 1766, 1647, 1819, 1191,
        1648, 1820, 1192, 1649, 1821, 1193, 784, 1194, 1767, 1376, 1195, 1768,
        1377, 1196, 1769, 1378, 1197, 1770, 1379, 1198}], 
      Line3DBox[{1200, 1650, 1822, 1199, 1651, 1823, 1201, 1652, 1824, 1202, 
       792, 1203, 1771, 1380, 1204, 1772, 1381, 1205, 1891, 1441, 1442, 1908, 
       1206, 1443, 1444, 1892, 1207, 1653, 1825, 1208, 1654, 1826, 1209, 799, 
       1210, 1773, 1382, 1211, 1774, 1383, 1212, 1775, 1384, 1213}], 
      Line3DBox[{1215, 1655, 1827, 1214, 1656, 1828, 1216, 1657, 1829, 1217, 
       1658, 1830, 1218, 807, 1219, 1893, 1445, 1446, 1220, 1894, 1447, 1448, 
       1909, 1221, 1449, 1450, 1910, 1222, 1451, 1452, 1895, 1223, 1659, 1831,
        1224, 1660, 1832, 1225, 1661, 1833, 1226, 1776, 1385, 1227, 1777, 
       1386, 1228}], 
      Line3DBox[{1242, 1464, 1463, 1897, 1241, 826, 1240, 1840, 1665, 1239, 
       1839, 1664, 1238, 1716, 1838, 1460, 1237, 1585, 1929, 1735, 1533, 1459,
        1236, 1913, 1458, 1562, 1564, 1563, 1235, 1924, 1565, 1566, 1561, 
       1608, 1607, 1932, 1234, 1457, 1532, 1584, 1091, 1233, 1455, 1837, 1711,
        1232, 1836, 1663, 1231, 1835, 1662, 1230, 1743, 1834, 1636, 1229, 
       1896, 1454, 1453, 1498}], Line3DBox[CompressedData["
1:eJwNzrtKAmAYBuCvTL2BbC070ObgBRh1CSbttWrawQPY0hJBV9BtuBgkbREN
XkJE2VGiJStt6xke3vf9fhWzO7VidSoiStzNRCykIrLMU+IkHVFORmzqRbY5
d6u43fv8l72rP+gX+ohHu8rArWN/M7BrFPRbzvzGmnxyG7Go78lLrvVj77My
eHabsKQXEhF5OU2GBC/e/ljWT31vX++RtOdI8WrfyLb3VXlgr8iufOPI/VAO
/eee+w/vdp0Pt1+7oX/qfX1M096SV0zIsU7LfUP+A0s9MQ4=
       "]], 
      Line3DBox[{1263, 1577, 1578, 1576, 1624, 1623, 1939, 1262, 1621, 1848, 
       1739, 1260, 1847, 1667, 1258, 1469, 1846, 1722, 1256, 1717, 1845, 1504,
        1461, 1255, 1715, 1844, 1503, 1544, 1543, 1254, 1733, 1921, 1540, 
       1502, 1527, 1526, 1253, 1926, 1524, 1525, 1501, 1537, 1045, 1252, 1534,
        1535, 1500, 1912, 1714, 1251, 1456, 1499, 1911, 1712, 1249, 1465, 
       1843, 1718, 1247, 1842, 1666, 1245, 1738, 1841, 1637, 1639, 1638, 1243,
        1742, 1943, 1631, 1594, 1596, 1595, 1597}], 
      Line3DBox[{1264, 1580, 1581, 1579, 1627, 1668, 1940, 1626, 1625, 1785, 
       1400, 1265, 1786, 1401, 1266, 1720, 1787, 1402, 1267, 1721, 1788, 1513,
        1403, 1600, 1737, 1934, 1612, 1514, 1545, 1404, 1470, 1898, 1546, 
       1547, 1515, 1550, 1669, 1923, 1588, 1551, 1552, 1516, 1553, 838, 1473, 
       1554, 1555, 1517, 1916, 1405, 1574, 1468, 1518, 1917, 1406, 1268, 1724,
        1789, 1407, 1269, 1790, 1408, 1270, 1741, 1791, 1409, 1628, 1941, 
       1477, 1603, 1604, 1613, 1410, 1606}], 
      Line3DBox[{1272, 1478, 1670, 1899, 1271, 1671, 1849, 1273, 1792, 1411, 
       1274, 1793, 1412, 1275, 1726, 1794, 1413, 1548, 1922, 1587, 1471, 1549,
        1414, 1479, 1900, 1472, 1589, 1590, 1591, 1931, 1480, 1592, 1605, 
       1474, 1611, 1609, 1610, 1933, 1481, 1475, 1531, 1089, 1583, 1530, 1476,
        1795, 1415, 1276, 1796, 1416, 1277, 1797, 1417, 1278, 1798, 1418, 
       1279, 1901, 1482, 1419, 1519}], 
      Line3DBox[{1281, 1672, 1850, 1280, 1673, 1851, 1282, 854, 1283, 1799, 
       1420, 1284, 1800, 1421, 1285, 1902, 1483, 1422, 1520, 1918, 1484, 1674,
        1903, 1521, 1485, 1675, 1904, 1522, 1486, 1676, 1905, 1286, 860, 1287,
        1801, 1423, 1288, 1802, 1424, 1289, 1803, 1425, 1290, 1804, 1426, 
       1291}], 
      Line3DBox[{1293, 1677, 1852, 1292, 1678, 1853, 1294, 1679, 1854, 1295, 
       868, 1296, 1805, 1427, 1297, 1806, 1428, 1298, 1906, 1487, 1488, 1919, 
       1299, 1489, 1490, 1907, 1300, 1680, 1855, 1301, 1681, 1856, 1302, 875, 
       1303, 1807, 1429, 1304, 1808, 1430, 1305, 1809, 1431, 1306}], 
      Line3DBox[{1308, 1682, 1857, 1307, 1683, 1858, 1309, 1684, 1859, 1310, 
       1685, 1860, 1311, 883, 1312, 1810, 1432, 1313, 1811, 1686, 1861, 1314, 
       1687, 1862, 1315, 1688, 1863, 1316, 1689, 1864, 1317, 1690, 1865, 1318,
        891, 1319, 1812, 1433, 1320, 1813, 1434, 1321}], 
      Line3DBox[{1323, 1691, 1866, 1322, 1692, 1867, 1324, 1693, 1868, 1325, 
       1694, 1869, 1326, 1695, 1870, 1327, 899, 1328, 1814, 1696, 1871, 1329, 
       1697, 1872, 1330, 1698, 1873, 1331, 1699, 1874, 1332, 1700, 1875, 1333,
        1701, 1876, 1334, 907, 1335, 1815, 1435, 1336}], 
      Line3DBox[{1350, 1497, 1002, 1349, 1889, 1709, 1348, 1888, 1708, 1347, 
       1887, 1707, 1346, 1886, 1706, 1345, 1731, 1885, 1496, 1344, 1730, 1884,
        1495, 1343, 1928, 1494, 1883, 1729, 1342, 1493, 1882, 1728, 1341, 
       1881, 1705, 1340, 1880, 1704, 1339, 1879, 1703, 1338, 1878, 1702, 1337,
        1727, 1877, 1491, 1492}]}, {
      Line3DBox[{551, 749, 1744, 552, 761, 576, 1818, 775, 591, 1823, 790, 
       606, 1828, 804, 621, 1834, 1159, 817, 634, 1841, 1130, 828, 1944, 645, 
       1138, 835, 1785, 653, 1849, 843, 664, 1851, 853, 677, 1853, 866, 692, 
       1858, 880, 707, 1867, 895, 722, 1878, 910, 737}], 
      Line3DBox[{553, 750, 1745, 554, 762, 1753, 577, 776, 592, 1824, 791, 
       607, 1829, 805, 622, 1835, 818, 635, 1842, 829, 1778, 646, 836, 1786, 
       654, 844, 1792, 665, 854, 678, 1854, 867, 693, 1859, 881, 708, 1868, 
       896, 723, 1879, 911, 738}], 
      Line3DBox[{555, 751, 1746, 556, 763, 1754, 578, 777, 1763, 593, 792, 
       608, 1830, 806, 623, 1836, 819, 636, 1843, 953, 954, 1779, 1017, 955, 
       956, 1787, 655, 845, 1793, 666, 855, 1799, 679, 868, 694, 1860, 882, 
       709, 1869, 897, 724, 1880, 912, 739}], 
      Line3DBox[{557, 752, 1747, 558, 764, 1755, 579, 778, 1764, 594, 793, 
       1771, 609, 807, 624, 1837, 940, 941, 1011, 1911, 942, 943, 1780, 1018, 
       957, 958, 1788, 1021, 969, 970, 1794, 667, 856, 1800, 680, 869, 1805, 
       695, 883, 710, 1870, 898, 725, 1881, 913, 740}], 
      Line3DBox[{559, 922, 923, 1748, 560, 765, 1756, 580, 779, 1765, 595, 
       794, 1772, 610, 932, 1893, 933, 1040, 1091, 1092, 1041, 944, 1013, 
       1912, 945, 1108, 1110, 1109, 1930, 1019, 1112, 1113, 1111, 1126, 1125, 
       1934, 1022, 972, 1053, 1096, 1922, 1095, 1054, 985, 1902, 986, 681, 
       870, 1806, 696, 884, 1810, 711, 899, 726, 1882, 996, 997, 1028}], 
      Line3DBox[{561, 1067, 1068, 1066, 924, 1129, 1127, 1936, 1128, 581, 780,
        1766, 596, 928, 1891, 930, 611, 934, 1894, 1008, 936, 1070, 1120, 
       1932, 1121, 1012, 1059, 1058, 1015, 1045, 1046, 959, 1044, 1043, 1920, 
       1061, 1051, 1052, 971, 1050, 1898, 1049, 1023, 1062, 1063, 980, 1900, 
       974, 1098, 987, 1024, 1918, 988, 682, 991, 1906, 993, 697, 885, 1811, 
       712, 900, 1814, 727, 1883, 998, 1115, 1117, 1116, 1118}], 
      Line3DBox[{565, 756, 1749, 566, 769, 1758, 585, 784, 600, 1826, 798, 
       615, 1831, 811, 628, 1838, 949, 823, 640, 1845, 950, 832, 1915, 649, 
       963, 840, 1917, 659, 977, 848, 1795, 671, 860, 686, 1856, 874, 701, 
       1864, 889, 716, 1874, 904, 731, 1886, 917, 744}], 
      Line3DBox[{567, 757, 1750, 568, 770, 1759, 586, 785, 1767, 601, 799, 
       616, 1832, 812, 629, 1839, 824, 641, 1846, 964, 965, 1781, 1020, 966, 
       967, 1789, 660, 849, 1796, 672, 861, 1801, 687, 875, 702, 1865, 890, 
       717, 1875, 905, 732, 1887, 918, 745}], 
      Line3DBox[{569, 758, 1751, 570, 771, 1760, 587, 786, 1768, 602, 800, 
       1773, 617, 1833, 813, 630, 1840, 825, 642, 1847, 833, 1782, 650, 841, 
       1790, 661, 850, 1797, 673, 862, 1802, 688, 876, 1807, 703, 891, 718, 
       1876, 906, 733, 1888, 919, 746}], 
      Line3DBox[{571, 759, 1752, 572, 772, 1761, 588, 787, 1769, 603, 801, 
       1774, 618, 814, 1776, 631, 826, 643, 1848, 1133, 1134, 1783, 651, 1141,
        1142, 1791, 662, 851, 1798, 674, 863, 1803, 689, 877, 1808, 704, 892, 
       1812, 719, 907, 734, 1889, 920, 747}], 
      Line3DBox[{573, 926, 1890, 927, 574, 773, 1762, 589, 788, 1770, 604, 
       802, 1775, 619, 815, 1777, 632, 951, 1897, 952, 1081, 1136, 1939, 1137,
        1135, 968, 1784, 1083, 1144, 1145, 1143, 1941, 978, 1114, 983, 1901, 
       984, 675, 864, 1804, 690, 878, 1809, 705, 893, 1813, 720, 908, 1815, 
       735, 1002, 1003, 1004}], 
      Line3DBox[{736, 909, 995, 1877, 721, 894, 1866, 706, 879, 1857, 691, 
       865, 1852, 676, 852, 1850, 663, 842, 1899, 979, 652, 834, 1940, 1140, 
       1139, 1151, 1150, 644, 1925, 827, 1132, 1131, 1149, 1148, 1943, 633, 
       816, 1896, 939, 620, 803, 1827, 605, 789, 1822, 590, 774, 1817, 575, 
       760, 1816, 550, 748, 921, 1005}], Line3DBox[CompressedData["
1:eJwVzT9LQgEYhfFXrczBvoBDuLVEJU5RbgpRGRgFTYEFbkpQDUH0vwQHo6Gp
panBb9DU2tAYNLZEY7g0ij+Hh3POc997b77eqjUTEbGNn2TEQyqiNBaxjHY6
4tf+4m/khv2uH+tl/VVv6Cm3Z/a33uN2ZMtO8Huo44mv8rt6x7NV+WlPySVk
ce+mzF15vmJP48POyEVM4s5NiavoabzpE7KAW++Ny1M3RX5Tz+Nfn5cLuHYz
Jw/czPB9HHEvcp/LyT8ccs9yi8vKnF3RB+jq575xiYvRv7k+HvkTexbrWEMV
Q4c1Js0=
       "]], 
      Line3DBox[{742, 915, 1088, 1087, 1000, 1884, 729, 902, 1872, 714, 887, 
       1862, 699, 872, 1907, 994, 684, 858, 1904, 1026, 989, 669, 847, 1933, 
       1124, 982, 1065, 1064, 657, 838, 1056, 975, 1036, 1035, 648, 1927, 831,
        1034, 961, 1048, 1047, 1921, 638, 821, 1060, 1016, 1913, 946, 626, 
       809, 1010, 1910, 937, 613, 796, 1892, 931, 598, 782, 1820, 583, 767, 
       1937, 1156, 1158, 1157, 563, 1938, 754, 1147, 1103, 1105, 1104, 1106}],
       Line3DBox[{743, 916, 1001, 1885, 730, 903, 1873, 715, 888, 1863, 700, 
       873, 1855, 685, 859, 1905, 990, 670, 1090, 1089, 1039, 976, 658, 1916, 
       839, 1078, 962, 1079, 1080, 1914, 1077, 1076, 1075, 948, 1844, 639, 
       822, 1042, 947, 1093, 1929, 627, 810, 1895, 938, 614, 797, 1825, 599, 
       783, 1821, 584, 1757, 768, 1155, 564, 1945, 755, 925, 1006}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJx9XXVcVsvTBzuviord3Y316Nhgdwd2Y+e1sAMVW1FUVGykQXooFVRQFBEB
pTseCzve596dOX6e/d3z+s/5uK5zZmdnZye+c54Gs5ePmVfEwMDApqSBQVHd
M3Lf52lfzmYAP6Mtmhz/cvYaHGnRd+qQiDR4XvwxxgzIguDzn77GDLgBJUc5
rJp6PAVeat6VsDTMgdbHBg60NLwF2yfvN3/sngij25553jEgF15PNDbuFHAb
op3635vc6hVEfI6s2Ht6PuxNaTex9/Q7cHhnRlLewSjoPv/4/gueBeBTvf3z
C56OEDPqQu0+lYJhffmqHdtf0EKxkIQt7S84gYH4Y7ltg19h2bdacDQ361fu
rRPPR3k+0UeZPvGDMj/EP8r803pRXi/JB2X5kBxRlifPY7ny/EaHg7ppz2Qo
z4bj/SZUm34LQsIsT7ZdkwZe/hE1llhlwcxFfinXLzvADUdnq5C7yfCr+P7R
V4/ngNvRe1tPGTqBs4Vpj/PWCeDy7zMPJnr2S6x10xkyPs4Y7d0+GqYu/+tb
1cEF0Mn5wOjLt1xgTa/HU5r8DIV20zqW8tqkBW3R9fGW010VOTscGll8ZI4W
at2cfbboBVeej/J8oo8yfeIHZX6If5T5p/WivF6SC8ryIXmiLE/eJ9ZT3i+m
y3Jl+uXS7zU6cjJDebL+tNhQv47Nu1TodGrh3N/5WWBvN7LR/NUucLT/jPXa
xUlgVuv8yrRpuTBEE5O6tJkbjJg6umyK80to6NrkcM3z+XCh1anv93zc4W7I
zRJPioTD1c7jwnb018KWLmZT1qZ4KHJOWlbhalSSFj62e154bJQnz0d5PtFH
mT7xgzI/xD/K/NM6UV4vyQdl+ZA8UZYnnxM+93xeeF9ZT3l/mQ+WK/OTPErb
zdw6Q3laaBpsX+3vBnk3lodvqZ8KGVZw97pltiIf16ONCsZvTqBnHrzvV3vp
ozwv+Pql6eYyiZH0LIAB380tWhT1VeTctmHssuVPtFCxsVvI9he+PB/l+UQf
ZfrED8r8EN8o80/rRXm9JB+U5UPyRFmebKfYjrK94nPF557PF+sB6ynrA/PN
cmX+j7oYj6u4I0N5TphZ5tLCfj7wc/H85sUuJsNmOxvNnmU54Bt57ohpTABM
qvu1Vody0bDzTuHNwUYFsObzroa3DwQpch57f3HFvre08PTazvrXNgTzfJTn
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
0DrMOBYyVgs1rywsei73Abx2bvKiWYE7XKw+0L5tSS3sWxa619fxMTx2fz8m
rbo3+JfpfHrUtgIoGnxvlU9QFDzrPe54icpIehWseUj9E0i4/T43Ov/u752K
w1s1K1PMOBOyNg7z7t8pGoJiS7V9VToXx00r/6bJtETY/rbC3EsrHsHbs16a
ynvy8XvO/B1B52PgRPl920s/DOH3YjF6bwy994LgEw8QnxHEZ42lCw9vGqPF
WR8mG9coEga3i2Q1iTH0gOelSzxukKv4bwYfnu14FdHPFbwGnZ12PPXPeI93
G7/fGuEBnea2L74g5s/4gN3BVYuHekORf//2QmOg9+ctdEiyevl8Tx7nxwzu
nPA/cOl3ArhWHfy1k7WSNzPoGNuu+q+W95i+Mj6Q6F/z21tvSuqf8RKesZ5l
5nrI+4i8j7ReMBfrxVu0XmkfUWUfUWUfUWUfUWUfUWUfUWUfUWUfUWUfkfdR
sgOoYgdQxQ6gih1AFTuAKnYAVewAqtgBVLEDqGIHUMUOoIodQBU7gGwHpHsK
Ve4pVLmnUOWeQpV7ClXuKVS5p1DlnkKVewpV7ilUuadQ5Z5ClXsKVe4pVLmn
FHlKfheq+F2o4nehit+FKn4XqvhdqOJ3oYrfhSp+F6r4Xajid6GK34Uqfheq
+F2o4nch+11SHIEqcQSqxBGoEkegShyBKnEEqsQRqBJHoEocgSpxBKrEEagS
R6BKHIEqcQSqxBHIcYSUB0DOA0jxPnK8L8X1yHGlFL8jx+9SnI4cp0vxOHI8
XqyDl+Xfc4NhluPDw7tParGyaXiVw0u5b+KMRu6b+Nn+3/nI86vQ/KKCPsr0
pbgbOe6W4mvk+FqKo5X1SvEycrwsxcXIcTHF0UBxNHIcLeVbkONxKa+CnFeR
8ifI+RMpT4KcZzAkuVlSH4QT9UEMChnld90RsdHmTk07uGgxwL/5qg4uTlBO
5E9wkMif4BbKn0h5DIW+lK9AzldIeQnkvISUf1DWO25pQPEeNhnKs9fhGwHn
42+C3Z73hqcPpMGmwW2y8jdmwQnHi4dmWt2GA0Waz/cukwKGwRa2ftNzYPbk
sJ1WDe+A5bYQY7Mmb8Bo74MDD1rkwZJFDeuMtXKE11NHvxs05iW4f29e+71v
PnS4V5Cdbcd5nrNKnqcm6VXG5O8uzWsF47TkGQMMbbRQvKV3anoFV2j9oNva
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
T0EHz+jTYT4VOtK6UJIP84/MP9VtcZWo2yLXbUluuFHIDVlu4pye/R+7cW6C
Vc+I0UHokzF3hc0lLXj/WlzR3txFrrcqeCdpXcDrkurIMj+8jwo/Qm/tNHI/
phi/oOCvOD/P4zy/A81/khObO2nbM5x6MsDY0aoADA/Ostl+2RUWVLZwLl0i
FB/Gz1h6a7sW2owqtta1nDu4FzfOWRwYjKeP7cnvelQLzw48fvrgqY7/1BKa
0w4haLdy2+V+e7TQ7rRRh70X3YDxSTkCr6TglLhPkvGSjJPkuJTjVI5Puf+N
cayMX+V+LcYRM36Y+4sYx814Y+6HYVw84+EZHy+PM/5bpsN4Zfm9jK+V+WQ8
qLxe7g9kfCjjQrmfkPGMjOvjfjbG7TJel/uvGDfNeGnuF2LcOuPVuf+H+wAY
/099EUqfBPdHcJ+APJ9x3jJ9xiXL/DCOVuafcZ8qckBZDtyHyfhZxpFy3ybj
PRnnyf2BjGtmPDP3szGunPHk3H/FuH7G83N/EfdJcH8B9/9wHwn3j7BfyP0x
3BfDfSbyfO5bkOkzzl7mh3HhMv+MY5bXy7hbFbmhLDfuj2U8MuOQud+Y8bOM
m+X+UsaJM76a+yEZp8/4fO7f4z4J7o/gfjPuO+F+E+6n4r4c7sdhOXP+hvM2
3Lcjz+c+Fpk+92nI/HBfgcw/4+Dl9TLuWUVuKMuN+64Z3824bu7TZjwy44S5
X5dx94y35/5S7nvgfgfuh+S+E+434f497uPh/h3Ox3G+ivNULGfOh3EejPNZ
8nzuC5Lpc9+LzA/3acj8c1+BvF7GwavIDWW5cb864+UZx859ztyvwH0E3JfL
/SLcJ8J9pNyvw306nA/ifAbnMThfyXk+zu+xPDlePkj+LecB5fmcH5Hpc7+Q
zA/3t8j8cz+GvF7G98vy4Twg5wU5H8h+Kvut7K9yHMVxlYKTpz5w7v/gvg/9
36uy03DfB/c/c18O9+Po/46VvYb7cbiPl/uluE+K66+c7+Q+Kc53cHzJcSXn
izn/ynlX3i/OA3H+h/Oz8nyOV2X63MelwifKfHI/koocUJYD99WoyBllOdM+
oryP9B0H5O868Pcc+PsO5cQ48jj3+XO/DvfpcF8690txnxT3UXO/Gvepcd+a
PM59VjId7guS38vnnftXWJ+5zsF1D6538PcIuK+IzwX3z3NfF/dzcb8399Vx
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
v1Tp9lmbZPz0ImZqtwdBMEuM4w8a/0LjP9oNsJ26LQ+9Xle/WtA+QRdHbgj7
bOQPtat+XuJjm4+XZv6d/mz7S2z9++zy6MK7EOCGzstMC3BakUqHwo2i0b6D
pmgv3Xl3Pboyq2BBNox/OTGtdYdUHFt+2MfjB71B23t/tZt/Z0C9jyPLFl+X
gZOHPrxu0CgAdt4I6Lx2TzZ6BvmY3yueikOP5BnblPeBdO23/LDZuZif4+2W
NjoJ3+/5UMW2hSfMrjzZQnM8D09kY+P4BQn4+fy3y+kt3cBgrKN3FfN8fH/m
+ppu5V/hCZN6E27o7OqQYY+WVOmUCq/3Pf20ZX42Tu5gesZTx4+l7eVivqkJ
4DSv2LcS4/LwQ817hk2c/eBev+MeZd9nYfdRBo9ap6TitpcDuuzX2YcDD50m
17HJwYzfM6Z7XUvGqduav7uis4dZmcH+nsG5OPRL7f03Tibi3YDw44WRTjDb
5/vosWVjoUzXdrcubs/Hook7J13T7Zf142s7DS6Fw83bh54v6aBFr4GL9nfU
6VXjQcucxx/Owl0zJ79tuzgN0eLhrXI6O7z354/G1UrkIFRcVaTd3hS0TX/q
YaO7X8obf3sx0OIetPq00qbdCi06G0+MstXF+3dm9tpcwjQL7eNanxxyPw09
Gwweba67p2gcaBw8aJzoA9GHs0Sf+IHdgh/wJ36quoU7dNedZ7m/dbdYF94S
6wJPWtcMIQcsK+QAxUgOmUJuMEzIDTxIbvuFnCFTyBkmk5xDxb4A7QtsoX35
W+wjuoh9hPe0j2Zi3zFR7DtMon3/PeZfPYEPQk/gGOkJ6RWcEXoFn0ivSA9B
K/QQ3pIekt7CXaG3YEZ6myf0HBsKPQfWc2dxLnCiOBfA50Lt+/zsh+RJffS1
xHkEe3EeoSWdx+/i/IKvOL/Qhc7vTLIDv8R5h0I67+ZkB37T+GcafynsCSYJ
ewJA9iRO2B+0F/YH2P5EL3nzzk1nPzN6/l1yd9178HHW0093i3jAFGHfwFLY
N1hG9o3sIUwR9hC2kD20qVSrq0+hTg6L4rqddoiHdz8aDay4/TGkCbuKr4Vd
hUtkVweSXZ1KdNiuNhN2G02E3YbaZLfZrloJuwpsV9XyFWvFvQaO4l5Dvtfo
HoTP4h7Ej3QP1hP3JtQW9ybeoXuT7lm4L+5Z5Hu2nbiXYbm4l5HvZVdxj+Nq
cY/jbbrHK4t7H+nex0p07xvs/9dPgGvCT0D2E5YKvwK+Cb8C2a+4KvwQID8E
2Q8ZK/wWiBZ+C7LfEl/vRzUz3f0q99FsEP4Pkv+Dp8j/WS38Jfwi/CXMJ3+J
/Cu0E/4VLiD/yl74Y7hS+GO4ifyxAuG/AflvuJ38Nw/h7wH5e5hG/t424R+C
nfAP0Y/8w+rCn4STwp9E9icnCv8T7IT/iex/9vgSdqWKzr7J/SyLkpZWLpkX
iiFDnCYdXavFA9cTDpar6QE3hd+LxsLvRfZ7fYWfjN2En4zsJ9sJvxoLhF+N
d8iv3ib8cCQ/HNkPV/te5WThzwP583iK/Hny/yFN+P/I/v9XES9APREvYHuK
F2aI+AJqifgC11J8IcUjyPGI/N1LjjddKd78KI3fFXSws0Tnd8V/4yCkOAg5
Dlog4iakuAlHUdxEcRaeEHEWbqA4i+IyLCHiMuS4TO070o/PjezaV2cvRsbs
n19ZZ4divu96nqqzG4FiHEfR+Esaj/3RN99fZx9/d+gZ0ldnR79c6HS0e1gQ
vHIaadMv7TnUOFPf1kjn9w0O9Gq4VGeXXoj5aNBRf/4F5x8LE3Vx3YUxIz2a
6uRaw/uzUV+dHGgcL0rjMRRvR1D8fZHibqZzTsxHnn/GbuZRE8d4yJ3ccOpA
nR2de3VA+Xyd/WT6ttL8OFrXL7Eu/EZ8vjswf9FkA1eNjOeJFuvFmmK9OJzW
+1J/vfid6DzVlzO+Inne05czxtO4/N1RjgskfpTvDzzT5weGED/p5IfH033B
fvhZcb/AbLpfCuh+OSDkhlohN2C5yXV8xivq/16ts4blc47ur+mCPn4k+hQX
YAzFBVeInwTSn+okz6HEv/x9TiXe0fsOYZiG+9BZP1hfWE9WqNTZ46645Q0u
E6bhOrsj0eF1yt8l0P9d4HNK3BRPdDoRX1eJTkeiy3kkpv+ygeG04ga2Grmv
Tc4XMZ+36DurnF/i76xKfCo40q6vXeouLpoAN747vLfO+Kd/KjYzruZj6CjG
kcZxCI13KPG261HdvHpz7r48o/v3OgGuFuV04zUin7cppbP/XGfsSXXGRqUH
nJqk2+eqlXPa1tT5O72n5lW+pvMfSqZuHFS23j08sGzpIEfdeM+xE6b76vyf
TJV+NLX6LM/Lov/H82X8LefxGpU3/FZMF8fKeB61vJb+7zhf0HD99Ji/Tcax
Y1HY5Xc41tDZlVNdTI3iD7nA/wH1KyY+
    "]],
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{-1, 1}, {-1, 1}, {4., 19.999995428571754`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.597857545733*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
OMSOZw8i0w4s8XqicQixP0KMRYgxCLFfjgoLC7yT2Mrw+66ogi5ZBMnw7zwZ
fqbmZBYhvWKiBOmVqvnXy5BcuVpwowLBVeiFLbxZhdSq1aKs6nBeJH2L2hY7
cVupJbfN/vM/Gl16h+Uvvet4rDe15I5szOI7phHhSh2taikTxgOZG//Thmmd
L1xn9Xo1nE/0OStTa9Qcwp+IOCkdlJbnNPxt6mXjcVOQZVKaT5q2QJyALCcg
y/GpPmkiy9HIctQpnzSR5TBkOfSY7ZmYfPrHKgYj64eR9cHIojGy3iTdXlSD
PZFjj21WksixC5VgZyTZyUqyPZJs55NkKyTZEkm2CJIkcmy06GslaTTlGGdw
7jXlxxdWpkrLVEt0FHId4ciUGIpUh1RYmVIUDkSqAygKE0jB8UVudyQGpfbL
tYnjXQXam7d+HPDRZwHi/BtPnJ+redeKiGJEWYIgS9XCG2WIsVwtksgym7Y4
qwoVVqslOkQ8aBD13RYFIUS17I45LMvuqvpq+V10sjzb0SNTvK7IVjLlhIVp
2V33Mp0sZokJlr9Ylr9IO6pWLCpdYCJC53bJ98ZRPWf8MZWqVWqGcdIUZDrD
kWq6keo0ZDr1kk+qF41UZfMnIdOJfqki07HIdAwyHX3KvV47DNMcctQYp167
aPTPVQKeGU/yjSP59if5Oprti2b7oNnoAM12Q7NdfZrt6NNsWzTbppZmm1vN
NhXNLvlIzb6/XgzXveYIz2bHObXKF95Q/4hqn3aJIZVWu+T8geh3APpNQL/x
6DeOvN+fvB9rRnCChPvHoYX7uREpa9ZfBPuOOdIIjQy4HJ2gMrXChsmLK7NV
PbXynqsoJtUqE/zFq/7UYcoV5F3RmxYiEjT+qa1Wu+ctK8MI8WSnHnBH7eb7
XHIudeEc9Dc702hwVobVoWjwitFgMvqbftnVYLiaoodxkqz8EnFLJFjX7o9r
jhjjCIxx+HGnh/tf9eyDyNUDydUDaukuFt3FoLt+Pt31Rne90F3PWrrrgu46
W911QHPt0VxbNNcGzbVGc62IluiuhaM7fLIJumvs110IzUkfJaTuavVRRHSR
E1zhWdMkRutLh849o5FD7CWpQaT3gWhuAJpLQHNxaK4/motFbzGk936k9776
duDA70H5dadPpvPVar9N/qVnk99SC68XqkU3irDFYrX4ZolaklWqlmaVqaW3
ytWy28Yml9+uQppyS9CKO9IZEWmutPK09zevvsfpXX2fxa6573zznSn7nlGm
aNar+bSgV4hjilLriFK13YpfLhWXRKsRtlPlapRkvkB6QVaf89Dm3GtanywR
hbI5Wp9XjT5T0OaMdK3PcBGoDHhjj1PT/PZaXyWKPWKNE7DG8VjjOKxx7Glt
j1aYf69GkL2H44/D8Mah9kLGYJ9QExBqPEKNqyXUvgi1D0KNriXU7o5QEWln
RNppvSfUdgi1LUJtg0hbI9KWiLTFctOuGUJtilCbOEJd8JFCDdGZDiVUk92V
dUhiGDG02qQM+tQDEGwCgo1HsHEItj+CjcUgYxBsPwTbN1/m1LdK6DY2pQd9
l/W7AVo1V98/Mdn6RiESLVJLkOrSrBIkWqqW3SpDnuVqxe0Kp1+86m4VclqV
Xa1WOyHuuMYz0LX3lVr3QEeYvfDCpPOp/uShDvngIR/wVh219oFzgY2pCFfn
4aLrcDFpWw0IHctNOL2XZUbT2n6X2MpXNL3optW01fN89Oxoei5eO4eYnaFc
Tc9Ezynp7o3D09Dx1IueVYuOJ6HjiamObv9KjcVoxxCjMdtRmO1IdDyito7R
8CA0PBAND0DD8Wg4Dg33R8OxaDgGDfdFw33QcDQa7o2Ge221OkbD3TDbrui4
i9VxR3TcAR23r6XjVui4ZZCOF36EjkMPCsnN3hPlMRSujmuaLR0p0TExXDk6
xnmJwfZ68MBKr3fvihn3jUHQ/RB03wLbW3xXvH8UWtffC9D1X3geXF8tvVmI
oIvUsqxitfxWCYIuRdBlauUd59bMOmr13Sq0XKXWSNyjL7X2nljxuvvVhJJw
u0MbEPCGhzrItrxqvdRTGx8h2w2PWO0GEfX6h061ylRdC4Og4Xk04ODjPt/W
sdKpUKRakd7aMlMv3zLiXoKwF8s41KKbyunai7DnI+p5jrAznBqsgSNqNYPi
IZmYjkM7yp5ywV5h+aGahDlPxJwnYM7jMedxImxEPfpETWEPR9jDrLCHIOzB
PmEnIOz4msL+he35vW+ESPQknfOv15QymkJPkYNcTWGSREJFmHtDQSy6ikFX
/dBV38KQmvq3oTUV9B2PP/c09TlaKiSK0FMxWipRK9HUyjtlatWdcrRk8vqa
7Eq1Fj0hJbXungwTISfRA6Ja/6BahOSKaiOC2iTxSN7bJCraLHra/NixQabs
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
STAQCmMIhdGBUBhBKAwnFIYSCkM0FAYSCgMIhX6EQl9CoQ+h8Cmh0FtfAdaD
EaNHYMT4hBGj6wxvzPBezvf+kDAvc5BPc3NihBN6Y6INiY4yQtr5v/2OeDAH
gQ2Kn2ooFDJEFBEIxU4C9dqGgkSCk0TZUCh33lZUSCBU2qnhA9YPNSRBrZNe
Y/fQzpQ0qK2XIGiQIGCQyDFh0OTkhoaBCYI2CQJ52quQNUZh4zszQRS5p+eb
3FuRS5vc9URganDdu1lQ0ayzgsHfWc3LR6tIgSrzI77t5FQ1u2cw+J5XVm2V
DC6V8htXyiKnQs4UVJiokomiXCcI+W+ZnhwoM0NEqYRCiTyvXCyXB8gE/gEL
9VxAAVGQL1VuIyGvTM8B5kggZEsgZEkgZMr74DMKzTkCTQQ3GFNYWSTnssLI
0RWGpkIiifDapoJcWEyXpekrEiEu1U+FWBLhBfWcVHimuxI9IREeJ7oTwR86
D5gQ7rOsuEcq3KXukAy3SYZbJMNNkuGGJMNTnRRIhsskwyWS4SLJcCGQDGdI
htMkwymS4SSpcIJUOMaEcFT3GDtMMhzSZNhPMuwjGfaSDHu8ze//s/MNE8Fm
ahNTwUbWEhtIhfWkwjoSYS2JsJpEWEUirCQRVlDL9VVKS0mFJaTCIlJhIYmw
YLufCnNIhdmkwixNhS82azKQCtNIhamkwuR1JAOpMIFEGE8ijKPGaip8RiqM
0he9SCoMIxWGkgqDSYVBpMJAUqE/qdCPVOgbSIVebjKQCt1JhW6BVOhqUyH8
IajOGv4hVws7Hh/CYyHkyqGbCx8PsO8S/K5ciHjTkW4bT0LElxRFyS46xbJZ
HgmRSEIklZd6CfGWhEiuqNCTgL90UquqnDTmhnRNiQwvJeoIiHriQarByTEx
0UhE2JjIq7f7F+QzM+Q3tEpItMkNPu/k9h++KW58Z8YDey9ziRn+S5vc7cLM
YqLCW2jomkHavQmFTpoFbjJUt8hnVktkVDd7t25WSyw0mXJjoUoSoVISodKc
NqwI2Z2wXKaEcm8jgzJWFFKlctqw1Jw2JB6ckmpTstBwtzTobHKikHyQnCgo
Nzkh9ySUubu15rKiyGE1kS3FaiJLihVFphTjQ4aUhkUaI0QqYZGSGxoYbwiL
JBsYskdKhvyBEhghiAwJDFlepArBl25gvPUD42mS/lH/wHnEiuIhFZIXZMWd
2PZ5cZ28uKY7GF0hKy4/9PPiPHlxjrw4S16cIS9OB/LiOFlx7LquLq7avDhI
Xhy4rP86/6uzmyFiF0PEToaI7QwR21hMbNUtg7cQG5uJjU3ExkZqQyA61hAd
q4mOVRIdxMZy3bV/GdGxlOhYTHQs0uiYT2zMIzbmUnM0OmYSHV8SHTN05/7p
Gh1TiI7JRMdEomMCsTF+pY2OMUTHaKLjM42OEUTHcKJjGNExhOgYrNExgOjo
r9HRh+j4lNjorW9i60l09CA6uhMd3YiOTwLR0cWPDlkzuG8W9aeLCfoYxC/M
6QoTIXqJwJsszL1Izv8f8WE/9GM/PkqLCI8ioqOY6ChxkqSIjzc2Pmxq/MpJ
rawkOSpJjionXdMjg8rU9MgiPbJr60x65Eh61DWQGjY98qQ0PQoYNgoaWskN
qTanyJTMGLLA0gxh5tAcidKrgWVGfJldXZgZQ1cJ/mmISokTc2qiUmKjSk5c
VHuhUq2hEi3fRjs1LSxsa5q9hYEkS3WTKfkU+S2rJVRMvFSZZKnUZKk0FyQq
JFkqTLKQL0653r1UJslSZk5XkC9OabUtkzB6DxMZ4xQTLkXmdAURIxcvCJgC
BpB8cztjXqn7ytNcwiWn2FZ2kQ2YrEITMNHakdLJlnSyJY1KJVtSyJZk6m12
IGMYRhJZnpAwJl8SGEbiqVcMI3Fki+TLS/Il9q3JGO8e6CcsTx4TLI8IlocE
ywPqPuFyj3C5S7DcIVhuEyy3qJuEyw3C5bqGy1UNl0sEy0WC5QJ1nnA5FwiX
U4TLScLlBOFynHA5es19eOp/d/YzgOxjabKXVNkTSJYdJMt2kmUbyfKtbna6
xU0WUmUDqbKeWkeyrA0ky0qSZQXJ8rVuSL6MZFlCsiwmWRaSLAtIlvmSLKTK
HFJlNqkyi1T5klT5Ql8y8DmpMo1UmbrWJsskkmWiJss4UmUsqTJGk2XUV5ou
mixDSZYhJMsgkmUgyTKAZOlHsvQlWfqQLJ+SLL31tT09SZYeJEt3kqUbyfIJ
ydI1NFlssMQEgyUqWnc/DX+gyn+K4qPQdPESxkuXaIkXOe9BuHzc3wbMv/lh
AWMuY2rkxRMwCaWFzuvSomjSpZhPTSovIVtKnbflpborwk+dlMpyqoKQqSBg
NGSqqwmYag2ZmmDIMKPXyk6quZoxeVL1TUwmfsYUNkjJgoaEYQHQKKuyksY2
Ey6lOqSU2iuPJlvMNQ3v7IWdVCoDF0sqm+2Q8oGGSo2exeC/dOga+UCNN97w
PVMmW2rM1zfp0mhKfmQu1FQTKVUaK1XyyGWlfFNhnrusqPVTpZwoKTNXTMrM
/QwmVjROJFZKKm2kFFeYWHGKiJNCefqyQM5w5Je6t5BInORqnOQUaaTorU6Z
zCqZZEmG5kk6WZJGpZIlKWRJMvVWb3V6Q54kkSWJZMlrmyescxhV/sh5RZTE
JftxIp/+PImRhXqqmzGFRApxcv9lhEh5Fhop13QftitEymUi5ZJECnFy/q6N
lLNEyhki5TSRcuqmNtj/0znCiHKIJc1BljQHSJT9bqKQJrtJk13UThJlhybK
1kCibCZRNpEoG0mTDaTJOtJkLWmyhjRZTZqsJE1WkCbLdePVZbuYVzRRFpEo
CzVR5pEoc0mUOZooM0mUL0mUL3Tz1emaKFNIlMmaKBNIlPEkyjhJFNJkNGny
WSBRhpMowzRRBpMogzRR+pMo/UiUviRKn++ZKF38ZY59raWmiu6mbF8I9kG7
WxvM3DLSPRtAlsjdTkMd/2Jq5DSJNK78tOM0+UngJGlCSYGbJoRJEaNKMVFS
4t3ekFJRZqLExIhGSTpRklFdZaIks7rae2Iom7klh3lFKpeZRbIkz1QjOdJE
hjSZ37PQZonEiDxZUcy4UmxSRE6ayrdy04KXKDZNzOXSTvasR6WXCVX+1VVd
2dR400ktH6NgXytBUtvs3hnJ9/xq8gOlk1Mjk0m1d1eUiRIzmdggkZOiFWYH
mIoaP0TK5TxIWbV3owbZUWoe0SyRc6TFckt1kXm+orDMDiQF5iGr/BL3zyPp
kVtk0yOnUM+YZJntHEx45NlywyON8EjN1gAJhMcbwiMpXQOEQSSBQSReivR4
leyeAfldJ5aFzguS4znJ8ey1niUhPR6THo9Ij4ekxwOS4z7JcY+6S3rcIT1u
kxy3SI6b1A3S47qmx1XS44qmx0XS4wLJcZ7kOHfbv+/6JMPICYaR49dY8egu
joeJkENEyEGNkH1EyF4iZA/xsZv42El87CA+tlPbiJCtumfrFiJkcyBC1hMh
6wIRsooIWakR8rXu4igRsoQIWawRsoAImU+EzNMImU2EzCJCZgYi5HMiZBoR
MpUImUKETCJCJhIhEzRCxgZjRF9WNoIIGU6EDCVChhAhg4mQgUTIACKkPxHS
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
xIDGgbnb6529UcPkQK1p8/bbOp0k6tzTk+ZEg10gxJg5QWeGKDNDfCRxoL+v
BoJNhA9sIjSFhEGjiYFGOZ/ZUO+tREiA+jo3EVhUaBq43iQRamVGqDE3hrC0
kjhwqs1KoUouqlRWeEsIUqDC3KRaXuZt0iPPyhABZGQx80FRoa3CQALk57lr
h1yzbbgNACeb+SAL+ZmqP4P5IB39aenyO6SmyYo5Bf3JzAdv9Tl8LwGSbAIk
oD8e/a/cBIj3E+AF+p+zVnjmvsX3j51HLBUeIv8BdR/998L1I/8G8q+zVLim
22ldvmX1X0T/BfSfR/+5MP0nkX+COo7+Y7oZp9F/1uo/gP796N+H/r1Wv/+e
AN2WdwtjwWbGgk3o34j+9Xv9BFhDAqzWBFhBAizX/f6XkQBLSYDF6F+E/oVh
CTAH/bPRP4v6Ut8bNIMEmE4CTCMBppAAk0mASWEJMJYEGEMCjNa3DY4kAUZo
AgwlAYaQAINIgIHoH4D+/lS/QAL0JgF6kQA9SYAeJEB3WXMwP3Rlfujirzf0
/8FHHV7S1RSwN5h9YM9pDgneZGZCIFpSQOYIvX7iLjU+7mMebXtPBIS/Kyiq
A/+Rdvj7K29QMNbfGe+1xnWttOw6r/Pr9QgpcyKxkwGuqqXdm8VCk3ygWeaC
Zm+VwPf0R81ivtlsrNkM9abA1QwbAk1mr0/wO431ftk/XYOsD+q9N4LVQ77O
VrTaN2cJaiqNe9e+nCWoLHdnPNybku+XmwupZSK/tNhccUW+6C8W/QVWfyHy
C8xlDPzrF8mFvVROtuGvY/q/cTKhn5FhK53mn0bzT4V+OP838E+Cf2KSRoDL
P8Hyj4P+S+jHWv72X+cPnMesCjz6sL8P+3uwv0vdgf5t6N+KQP8K7C/D/tKN
UPpnoX8G+qdd+hdD6R+B/mHYH4L9wTP6x/gvzm76/U76/Q76/XYWBK78b8Lk
b0D9etSv2+3LX4X8lchfofK/UvlLXPmoX0DNR/485M915aN+5hpf/ufIn478
qcifovInon4C6sdT48Lkj0L+SOQPR/4wlT8Y+YPC5PdFfp8Zqj9Mfjfkf4L8
rsjvEnK3ut4oNtY9UO23Af3yecPN/aehc4DL395j+qGeZQjQ79vi8v//wr++
GICv8Dde1494+0OD8a9XBvyVv+3m0cFuru4/EvKCml/coiUfb3EfcomR70Y7
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
qvvcbaFJbgbhJhBupDYEIK4B4uoAxOW6j7dAXArEJQJxjQ9xPhDngXAuCOco
xJn6lgCB+DkQpyvEKUCcDMRJIJw4vz3E0XOckO45XCEOAeJgIA4C4sAwiH2A
+OkkO/+adkor7U4r7UYr7TpW74nsFPnZiJjgslPADfKezZRlZ38F+d0YIw28
dnepqN/3lp7/bWDpKed9HHNrgyO3KL/PYbTwUxCOuSFZWuS7Glttsp5sM+tJ
6ZCtVbaMzBZze2KzPrssQpv05uQm2cag0Wxj0FhqdTaY+5Tr5ealOhlikclf
y3Xp0q6iOVbqRZeKXNsky3NskywL8CzJNDyjxSf/C4zONKszH515KfZL5NAh
c6CZ7fJMMjydDDpkOjZDfGLzbZz1mfRSjeLzNT4TsBn/rJ1P6/KPnWfMsU+x
KT4f674Gxic272Pz3q1Qn7fweRObN7B5/Yr1eUU3YHJ9XsDnedcnNk+f9n2e
wOdxfB7D5xHdgEl9RnmPNdAcd9Ecd9IcdzDEBn1+E/S5zfpcj891AZ+r8LkS
nyvU51f4XKY+F2NzETYXhvvE5mxqlvr8Ap8z1Oc0fE4N8zlBjOJzHD7Hzgk0
S3yOVJ/D8Dk0zKdpluqzr/rsLUbx2TPg8xPWpl3No4xdRhuNn3lHmrelRgcn
iSzWnytWJxSsf/5WsTZ7WD/u2WH3VLB/0OG4G0q303fTjRG6mijQ9cvMte/M
pdJ3qG1zS9TCVzCjtkXL/N9oNk8ZNJcHENNXpb82enobSmQGqC+2/bWuyPbX
2kLbX+XXSH+txnCV3KlU6T1hVJFjGZdnG8bygGKWuW1RGGfYKkp3PMcFqcax
/Tf6kZPrMn7jM85MDDA2tyGmxsutJikwTobwWwi/cRm/CGP81DDWY+CPnFiG
3BfUcxw/w/BTDD/RR40f4fghjh+4jjF850Zkx9cwfFX3J7l8IdTxORyfxfEZ
cXyqveOjx/Qazz87B2mx+2mx+2ixe2G8B8a7Ybxzr6W8HcrboPyt7qO2Bcqb
XcowXv+tpbwWymugvDpAebnuoyaUlwYpw3gBNR/K86A8Vyh/bSnP1E3uhfLn
UJ6ulKdAeTKUJ8F44rz2lEdD+TOlPALKw5XyECgPhvIgGA+E8QCq3xRtt5OU
s1LuAeXuUO4WQrmzRzn4VJKNvp+2m35luRpsunINxjo2hqMFsbTw7034D79r
AP5+cGM8uFFu9402dmNs+602JfdJVMlEXOnd6kinbTG3ODSbjeGbQdpU5n4V
uIK0kSG4QQqoAra+yIKtK7Rg5evUyCBcLVKrjNRKvTUpoFUeKMySj5Vm2qZb
4muVS6lpnlFpuXm6IHWtZuM0y7X6Wn5BOlL/o5NGu03FaYhVWm1SrHrF6Wsq
Aavxen9SHC33JeOwsYrT5w9CrT6+q333trV6H6v3sHoXp3dwegunN6+2t3pF
twa4hNOL1IUwq6dxegqnJ0+qz67OEd1K6BBOxeoBrO7H6r6A1V043YnT7but
1a1hVjdhdSNWN+B0/TehVldhdWXA6ldqdQlWF2N1UQSrc75Wr2r1C6zOUKvT
sDo1zOoE8YrVcVgdqy/QEqujsDpSrQ7D6tAIVvur1b447aNWe2G1J1Z7qNVP
WKt2Za3aJfDssDEY8gRhjNd2o6LcJw0/Cnh1Ovba2ffaqwmzZidmb0/ECGj/
KMKHgldrXKXvX7V21HLtn98xp5Kcag+v867KtF2+alul23fl17ZawwzR5lle
6bvC2FAudb9co0zLDTIt15tX4NYp3Fq6bI2UeZC3Ok/G8CrwCuDKHEWcbQBb
vzHGb2mG8StXTtPlSlCRbvVjui1885Mt4Vy9AJPjEoZv5mtD2MlgWk6HrxLm
a6XEyW+fDOG3sZaxR/iZpsO/d16hNw69Lx+FCUbv03sRBKP3/s1QwbcRfAu9
N9F7A73XqWsIvhpB8HkEn0Pw2dPuDcXdnRN02uN02mNMzEeDhA+FEt4L4T0B
wjvgux2+W5mav92pjCMQXgfftfBdEyC8AsLLdcewZRBeGiC8EL4LqPkQnucS
hu8s3cX9SyX8OYSnK+EpEJ4M4UnwnTi3PeHR8P1MCY+A8HAlPATCgyE8aKoy
hnC/yYGWC+HeEO6lhLtDuBuEP1HCXdoTDhfs7gNizj8NCjlbo4oDkvuYE8bK
uMVru9+D8R93yLhzkKz7fVkBd9B0HXONxjG3FTq6A4/tvo6cfHonw3Kbd6FG
wJoqV7Q/cloUbHOph9ZpoudK720sNr1XhuYi7yxRHWbFbm2+sWvpdjZ0q3Is
3Ypst4+Xm75bJm59u05Juju2/twpxG0hbgtcu28DdnGbnejbzUzw7EY7aa/k
/0sqnTcFth5dJuQkdy+e33de03gTqHjovoJuHGxfwjaWegHd59B9BtunsH3C
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
3Q+jCctnt99L093Z6jZd9RZjsLC8AcnrkLxGXQ2yhOSFUz7Ls7A8A8vTkDwF
yRNHfJZHYXnkoM7DLktI7oPkXmpPOEtIboPk1q0+y82w3ATLjWEs10By9br2
LL8KsFwsNGG58Gs5hW+TTmiN/VJ5BWiNEF7QGhZGayC0BiitfuN9Wr2h1QtW
PWHVQ2l9EqClr85zN37tQNZ7YXU261KvOdrzvvIVezRJg+zuN8ifdIzsLyJ8
6O/DuRlj30+a+ymVbno4Msk65uKqNMZ3ZabknFKpTLdyWQZycm+/gmsulI82
FXq39TPNSlcMpRdj6NVmG3py5SZLHlWqEnfaEivUX3matVeW6tsrSfbsyWT7
Rn5tAT0xP9Hx8OUmtMcnP84AnuKTOyVeyJuiUoCXDLy3T318ifr0WsLDMHzA
i73r43t+WwGC7wnwHjPTPrrh9t6/du7TE+8x095BX0SB56zAKwi8rI+WXxSB
6Dt3or3Ak+g7gb7j6Dt60Bd4CIEHEXjAFYi+PejbTe1C4M4wgd/qpi6bt/gC
NyBwfahA+zzNL5wF9L359L15S7X30fdmad/7kr43g773OX1v+jzb+6bQ9ybT
9ybR9ybOMr0vyj5U85vOIEXXX/da7yvwQPdpGLruoOsGuk9GKrwgus5hL4Uy
6ORjA83264EbHIy8vubOQtj9yHuGxtALXG6RxaSye99M+pcdktO5Um/jdbzH
0WDWKYxZYAStsKWfaqQ5ZSqtVKXRwNtKTKNzWotted7Ma6qbjbcmvbG+EW+N
4q1BvNWbJ9HqxJtvzqnJ4k+T6V2QkXZXkW7LTqOpoqo0JSDure12RUyghWhz
xeWjLU/F5SS4Z2Z/5WSyeDTaYm2rS6PNpSItRBvSkh6HaXsQqu0l0mKR9sLV
dsvTpr/XnzsPmD5daXdRdgdlt1F2K1wayq6cCZV2AWnnUXYOZWeORZZ2DGVH
GT8P6yYOrrT9SNvnSkPZLpTtRNkOanuYtC1bvPeprKKlraSlraCW66aHy2hr
S2lpS2hpi5k0F1ELUbcgoG4O6majbpbufvwF6mag7nNVNxV1U1A3GXWTZll5
42mJ47QljqEljv480BZpicNpicNoiUMmm7ao99n/3GjsjcZeo1VkUOMIqzH0
BY6O/9KUj4Lvb9Sn2UI0Wow/DjzQpiDDMH7czYB8Twv8q+9qge0cdrKXNUPb
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
PRzN3UbREQ7HGHM4/tw7HB2GhndSDA5tUmSpZGprphM8KJ3mdCfssIzxDkt7
SNfKy3tr3shrZMwxmWiTtPK14x+T8f4xWUqKluhzLd4x+UKPSfmKv3LyOB5z
9Xj0jslH7zkm7waOSY7HNxyPSe4xyfGYcN0ek6/00RaOySj30fPnl5zgMRnt
PD4vp6UfcUg+5JB8wOF4/7TmKYfkHXtIRjs3j8veDSFH5OHvPiJPczSe4mg8
SZ0IHpHbvSPSNs1/ln9be47rN8xh11U7uynWd10ihOHHvZvCDzs51Lo36MMe
5pIEB160HHTycxx2H39ca06BRopEPfb+izfF/rX9XshxFhM6p9rjrFPIcWaT
T0KvTabTVplOW+Q2mWY5sJrSzC2p9OkGKY6teveFXh85daRdLWlXI5XkeEdY
1WtzhDGmJsgZR3OAvQocYHrfd3Gsf4DJj/+fxs40yJKsquNpVnUNMCOOM8CM
IzGDMaMEaEioXzTCUCMMN3SGEQKVAQIlEFFcUNAJhBAUhEAMXIMPRkiEChFM
ODPQ9lZd+/b2qvdqr66q7urqpXqp7q711dtfXc//nJM3b2bl6+4P2UvVy7zn
/P+/e+7Nm8u7TsP0NaJroyCEXQVhOYewjBB2Ue9gcwijFFbGgMZyQNhwjLAB
Jkwif8YWvSLBNUVwTdJWoIKXp4KXI7rihE3o81MgbJQK3ggVvGHCa4i2QUJs
gBDrJ7z6vp2A2DcTECO8XiW8XqHt5W8IS8/BP3m440FL0fMvHKUIQ6qQdC+K
ui1Fniym93QG6ZcSfvXjbhFLXhZwuOqJcMVbcAvzIdBqr2MRoXVR6ldzTepX
g+aBdWzEFzirrQpnfD6kQ6uChgWCJTzGt7fogEYlbBsbUbY1K6TdmQlJ29Sb
mW8qZTeIsuuTIWkbeYe0bEjaetohjSg7Py61bJXq2ApRtjzikDZkSfOC77ua
7dd6RpiVXNQIs8IpBzXCLPN/94Ha/x5F7Sxh1kvbGULttD7qfuJ/jqAmDr43
rFqvIa7uylQEqfckI6XF6S5I/fK9kNL7brui5xd+QpUymJoRTron8YTNY6h8
MIUXfCURFVSrR02VYKoQSAe6jlvWqrVPIAGovYUQqJ25BKCmBahbJTXZB0s0
ajNNBYemnENTxqEpFaHJB0re20KYhh2YdJI2T2VrjkCKwEQgFc/EYDoZg+l4
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
gfc9/w9ytMnw\
\>"]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Lurt", "=", 
  RowBox[{
   RowBox[{"Div", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"a", "[", 
           RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"b", "[", 
           RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "}"}]}], "}"}], ".", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"u", "[", 
         RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "\[Theta]"}], "}"}], ",", " ", "\"\<Polar\>\""}], 
       "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "\[Theta]"}], "}"}], ",", " ", "\"\<Polar\>\""}], 
    "]"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.5988459291338*^9, 3.5988459304348*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["b", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"b", "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "+", 
      RowBox[{"r", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"r", " ", 
          RowBox[{
           SuperscriptBox["a", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["u", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"a", "[", 
           RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["u", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"r", ",", "\[Theta]"}], "]"}], "+", 
            RowBox[{"r", " ", 
             RowBox[{
              SuperscriptBox["u", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"2", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"r", ",", "\[Theta]"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     SuperscriptBox["r", "2"]], "\[Equal]", 
    RowBox[{"f", "[", 
     RowBox[{"r", ",", "t"}], "]"}]}], ",", 
   RowBox[{
    SuperscriptBox["u", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5988459428138*^9, 3.5988459654938*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["u", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"2", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"r", ",", "\[Theta]"}], "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       RowBox[{"f", "[", 
        RowBox[{"r", ",", "t"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{
        SuperscriptBox["b", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"b", "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "-", 
      RowBox[{"r", " ", 
       RowBox[{"a", "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       RowBox[{
        SuperscriptBox["a", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}]}]}], 
     RowBox[{
      SuperscriptBox["r", "2"], " ", 
      RowBox[{"a", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.5988459663428*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{
      SuperscriptBox["r", "2"], " ", 
      RowBox[{"f", "[", 
       RowBox[{"r", ",", "t"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{
       SuperscriptBox["b", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"b", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "2"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "-", 
     RowBox[{"r", " ", 
      RowBox[{"a", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "-", 
     RowBox[{
      SuperscriptBox["r", "2"], " ", 
      RowBox[{
       SuperscriptBox["a", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}]}]}], 
    RowBox[{
     SuperscriptBox["r", "2"], " ", 
     RowBox[{"a", "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}]}]], "==", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"r", ",", "t"}], "]"}], "-", 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         SuperscriptBox["r", "2"], " "}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["b", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["u", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"b", "[", 
           RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["u", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "2"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "\[Theta]"}], "]"}]}]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{
        SuperscriptBox["a", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}]}]}], 
     RowBox[{"a", "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["u", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}], "r"]}]}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.5988459774667997`*^9, 3.5988460056868*^9}, {
  3.5988461237948*^9, 3.5988461663538*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.5988461334618*^9, 3.5988461672728*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5988460455488*^9, 3.5988461296878*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Div", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SuperscriptBox["r", "2"], "+", "1"}], " ", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            SuperscriptBox["r", "2"], "+", "1"}]}], "}"}]}], "}"}], ".", 
       RowBox[{"Grad", "[", 
        RowBox[{
         RowBox[{"u", "[", 
          RowBox[{"r", ",", "\[Theta]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "\[Theta]"}], "}"}], ",", " ", "\"\<Polar\>\""}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "\[Theta]"}], "}"}], ",", " ", "\"\<Polar\>\""}], 
     "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"8", " ", 
      SuperscriptBox["r", "2"]}], "+", "4"}]}], ",", 
   RowBox[{
    SuperscriptBox["u", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5988463059498*^9, 3.5988463140668*^9}, {
  3.5988463680028*^9, 3.5988465273278*^9}, {3.5988465585968*^9, 
  3.5988465882088003`*^9}, {3.5988466284068003`*^9, 3.5988466573808002`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["u", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"2", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"r", ",", "\[Theta]"}], "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"4", " ", 
       SuperscriptBox["r", "2"]}], "+", 
      RowBox[{"8", " ", 
       SuperscriptBox["r", "4"]}], "-", 
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "2"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}], "-", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "-", 
      RowBox[{"r", " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "-", 
      RowBox[{"3", " ", 
       SuperscriptBox["r", "3"], " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}]}]}], 
     RowBox[{
      SuperscriptBox["r", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["r", "2"]}], ")"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.5988463156518*^9, {3.5988463704328003`*^9, 3.5988463982047997`*^9}, 
   3.5988465288528*^9, 3.5988465888608*^9, {3.5988466319698*^9, 
   3.5988466581738*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"4", " ", 
       SuperscriptBox["r", "2"]}], "+", 
      RowBox[{"8", " ", 
       SuperscriptBox["r", "4"]}], "-", 
      RowBox[{
       SuperscriptBox["u", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "2"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}], "-", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "-", 
      RowBox[{"r", " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}]}], "-", 
      RowBox[{"3", " ", 
       SuperscriptBox["r", "3"], " ", 
       RowBox[{
        SuperscriptBox["u", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "\[Theta]"}], "]"}]}]}], 
     RowBox[{
      SuperscriptBox["r", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["r", "2"]}], ")"}]}]], "/.", 
    RowBox[{
     RowBox[{
      SuperscriptBox["u", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "2"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"r", ",", "\[Theta]"}], "]"}], "\[Rule]", "0"}]}], "/.", 
   RowBox[{
    RowBox[{
     SuperscriptBox["u", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"r", ",", "\[Theta]"}], "]"}], "\[Rule]", 
    RowBox[{"2", "r"}]}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.5988466890797997`*^9, 3.5988467297948*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.5988467226468*^9, 3.5988467303408003`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"8", " ", 
     SuperscriptBox["r", "2"]}], "+", "4"}], "/.", 
   RowBox[{"r", "\[Rule]", 
    RowBox[{"1", "/", "4"}]}]}], "//", "N"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["r", "2"], "+", "1"}], "/.", 
   RowBox[{"r", "\[Rule]", 
    RowBox[{"1", "/", "4"}]}]}], "//", "N"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"2", "r"}], "/.", 
   RowBox[{"r", "\[Rule]", 
    RowBox[{"1", "/", "4"}]}]}], "//", "N"}]}], "Input",
 CellChangeTimes->{{3.5988468636958*^9, 3.5988469161268*^9}}],

Cell[BoxData["4.5`"], "Output",
 CellChangeTimes->{{3.5988468674448*^9, 3.5988469165528*^9}}],

Cell[BoxData["1.0625`"], "Output",
 CellChangeTimes->{{3.5988468674448*^9, 3.5988469165587997`*^9}}],

Cell[BoxData["0.5`"], "Output",
 CellChangeTimes->{{3.5988468674448*^9, 3.5988469165628*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Div", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["b", "in"], " ", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         SubscriptBox["b", "in"]}], "}"}]}], "}"}], ".", 
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "2"], "-", 
        SuperscriptBox["y", "2"]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], ",", " ", "\"\<Cartesian\>\""}], 
      "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", " ", "\"\<Cartesian\>\""}], "]"}], "//",
   "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Div", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["b", "out"], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         SubscriptBox["b", "out"]}], "}"}]}], "}"}], ".", 
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", "x", "]"}], 
        RowBox[{"Cos", "[", "y", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], ",", " ", "\"\<Cartesian\>\""}], 
      "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", " ", "\"\<Cartesian\>\""}], "]"}], "//",
   "Simplify"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.601899893032*^9, 3.60189989983*^9}, {3.60189993169*^9, 
  3.601900005778*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.601899983451*^9, 3.601900009033*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], " ", 
  RowBox[{"Cos", "[", "y", "]"}], " ", 
  RowBox[{"Sin", "[", "x", "]"}], " ", 
  SubscriptBox["b", "out"]}]], "Output",
 CellChangeTimes->{{3.601899983451*^9, 3.601900009064*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sin", "[", 
   RowBox[{"f", " ", 
    RowBox[{"Cosh", "[", "\[Xi]", "]"}], 
    RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "]"}], "//", 
  "TrigExpand"}]], "Input",
 CellChangeTimes->{{3.601903645531*^9, 3.6019037037720003`*^9}}],

Cell[BoxData[{
 RowBox[{"F", "=", 
  RowBox[{
   RowBox[{"-", "2"}], "\[Beta]", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[FormalA]", "  ", 
     RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
     RowBox[{"Cosh", "[", "\[Xi]", "]"}]}], "]"}], 
   RowBox[{"Cos", "[", 
    RowBox[{"\[FormalA]", "  ", 
     RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
     RowBox[{"Sinh", "[", "\[Xi]", "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{"F", ",", "\[Xi]"}], "]"}], "//", 
  RowBox[{"FullSimplify", "/.", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[FormalA]", " ", 
      RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
      RowBox[{"Sinh", "[", "\[Xi]", "]"}]}], "}"}], "\[Rule]", 
    "x"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{"F", ",", "\[CurlyPhi]"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Grad", "[", 
     RowBox[{"F", ",", 
      RowBox[{"{", 
       RowBox[{"\[Xi]", ",", "\[CurlyPhi]"}], "}"}], ",", " ", 
      "\"\<Elliptic\>\""}], "]"}], "//", "FullSimplify"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.601903733466*^9, 3.601903735792*^9}, {
  3.6019037744700003`*^9, 3.601903851203*^9}, {3.601945498013*^9, 
  3.601945538576*^9}, {3.601945574587*^9, 3.601945577678*^9}, {
  3.6019456180290003`*^9, 3.60194562798*^9}, {3.601945701392*^9, 
  3.601945724315*^9}, {3.6019483811809998`*^9, 3.6019483971689997`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], " ", "\[Beta]", " ", 
  RowBox[{"Cos", "[", 
   RowBox[{"\[FormalA]", " ", 
    RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
    RowBox[{"Sinh", "[", "\[Xi]", "]"}]}], "]"}], " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"\[FormalA]", " ", 
    RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
    RowBox[{"Cosh", "[", "\[Xi]", "]"}]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.601903825025*^9, 3.6019038522539997`*^9}, {
   3.601945526604*^9, 3.601945539835*^9}, 3.6019455794040003`*^9, 
   3.6019456287939997`*^9, {3.6019457055889997`*^9, 3.601945725309*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "\[FormalA]", " ", "\[Beta]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Cosh", "[", "\[Xi]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[FormalA]", " ", 
       RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
       RowBox[{"Cosh", "[", "\[Xi]", "]"}]}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[FormalA]", " ", 
       RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
       RowBox[{"Sinh", "[", "\[Xi]", "]"}]}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[FormalA]", " ", 
       RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
       RowBox[{"Cosh", "[", "\[Xi]", "]"}]}], "]"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[FormalA]", " ", 
       RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
       RowBox[{"Sinh", "[", "\[Xi]", "]"}]}], "]"}], " ", 
     RowBox[{"Sinh", "[", "\[Xi]", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.601903825025*^9, 3.6019038522539997`*^9}, {
   3.601945526604*^9, 3.601945539835*^9}, 3.6019455794040003`*^9, 
   3.6019456287939997`*^9, {3.6019457055889997`*^9, 3.6019457253199997`*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "\[FormalA]", " ", "\[Beta]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"\[FormalA]", " ", 
       RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
       RowBox[{"Cosh", "[", "\[Xi]", "]"}]}], "]"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[FormalA]", " ", 
       RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
       RowBox[{"Sinh", "[", "\[Xi]", "]"}]}], "]"}], " ", 
     RowBox[{"Cosh", "[", "\[Xi]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[FormalA]", " ", 
       RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
       RowBox[{"Cosh", "[", "\[Xi]", "]"}]}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[FormalA]", " ", 
       RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
       RowBox[{"Sinh", "[", "\[Xi]", "]"}]}], "]"}], " ", 
     RowBox[{"Sinh", "[", "\[Xi]", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.601903825025*^9, 3.6019038522539997`*^9}, {
   3.601945526604*^9, 3.601945539835*^9}, 3.6019455794040003`*^9, 
   3.6019456287939997`*^9, {3.6019457055889997`*^9, 3.601945725328*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", 
     SqrtBox["2"], " ", "\[Beta]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cosh", "[", "\[Xi]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[FormalA]", " ", 
          RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
          RowBox[{"Cosh", "[", "\[Xi]", "]"}]}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[FormalA]", " ", 
          RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
          RowBox[{"Sinh", "[", "\[Xi]", "]"}]}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[FormalA]", " ", 
          RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
          RowBox[{"Cosh", "[", "\[Xi]", "]"}]}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[FormalA]", " ", 
          RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
          RowBox[{"Sinh", "[", "\[Xi]", "]"}]}], "]"}], " ", 
        RowBox[{"Sinh", "[", "\[Xi]", "]"}]}]}], ")"}]}], 
    SqrtBox[
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[CurlyPhi]"}], "]"}]}], "+", 
      RowBox[{"Cosh", "[", 
       RowBox[{"2", " ", "\[Xi]"}], "]"}]}]]], ",", 
   FractionBox[
    RowBox[{"2", " ", 
     SqrtBox["2"], " ", "\[Beta]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[FormalA]", " ", 
          RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
          RowBox[{"Cosh", "[", "\[Xi]", "]"}]}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[FormalA]", " ", 
          RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
          RowBox[{"Sinh", "[", "\[Xi]", "]"}]}], "]"}], " ", 
        RowBox[{"Cosh", "[", "\[Xi]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[FormalA]", " ", 
          RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
          RowBox[{"Cosh", "[", "\[Xi]", "]"}]}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[FormalA]", " ", 
          RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
          RowBox[{"Sinh", "[", "\[Xi]", "]"}]}], "]"}], " ", 
        RowBox[{"Sinh", "[", "\[Xi]", "]"}]}]}], ")"}]}], 
    SqrtBox[
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[CurlyPhi]"}], "]"}]}], "+", 
      RowBox[{"Cosh", "[", 
       RowBox[{"2", " ", "\[Xi]"}], "]"}]}]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.601903825025*^9, 3.6019038522539997`*^9}, {
   3.601945526604*^9, 3.601945539835*^9}, 3.6019455794040003`*^9, 
   3.6019456287939997`*^9, {3.6019457055889997`*^9, 3.601945725335*^9}}],

Cell[BoxData[{
 RowBox[{"2", "  ", "\[Beta]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"\[FormalA]", " ", 
     RowBox[{"Cosh", "[", "\[Xi]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], " ", 
     RowBox[{"Sin", "[", "x", "]"}], " ", 
     RowBox[{"Sin", "[", "y", "]"}]}], "-", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], " ", 
     RowBox[{"Cos", "[", "y", "]"}], " ", "\[FormalA]", " ", 
     RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], " ", 
     RowBox[{"Sinh", "[", "\[Xi]", "]"}]}]}], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"2", " ", "\[Beta]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], " ", 
     RowBox[{"Cos", "[", "y", "]"}], " ", "\[FormalA]", " ", 
     RowBox[{"Cosh", "[", "\[Xi]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], " ", 
     RowBox[{"Sin", "[", "y", "]"}], 
     RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}], "  ", 
     RowBox[{"Sinh", "[", "\[Xi]", "]"}]}]}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.601948464696*^9, 3.601948509395*^9}, {
   3.6019485482869997`*^9, 3.601948556703*^9}, {3.6019485958310003`*^9, 
   3.601948643102*^9}, 3.6019536032130003`*^9}]
},
WindowSize->{1084, 722},
WindowMargins->{{Automatic, 167}, {Automatic, 77}},
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (January 25, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 2911, 87, 173, "Input"],
Cell[3471, 109, 1667, 53, 86, "Input"],
Cell[CellGroupData[{
Cell[5163, 166, 2047, 61, 163, "Input"],
Cell[7213, 229, 2314, 66, 92, "Output"],
Cell[9530, 297, 367, 7, 46, "Output"],
Cell[9900, 306, 363, 7, 46, "Output"],
Cell[10266, 315, 361, 7, 46, "Output"],
Cell[10630, 324, 367, 7, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11034, 336, 961, 30, 103, "Input"],
Cell[11998, 368, 2003, 59, 92, "Output"],
Cell[14004, 429, 158, 3, 46, "Output"],
Cell[14165, 434, 159, 3, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14361, 442, 770, 23, 55, "Input"],
Cell[15134, 467, 21084, 393, 237, "Output"],
Cell[36221, 862, 4769, 86, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41027, 953, 774, 25, 52, "Input"],
Cell[41804, 980, 393, 10, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42234, 995, 143, 3, 31, "Input"],
Cell[42380, 1000, 344, 12, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42761, 1017, 4789, 149, 116, "Input"],
Cell[47553, 1168, 1669, 61, 31, "Output"],
Cell[49225, 1231, 2210, 76, 58, "Output"],
Cell[51438, 1309, 2345, 73, 56, "Output"],
Cell[53786, 1384, 253, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54076, 1393, 266, 5, 31, "Input"],
Cell[54345, 1400, 593, 11, 21, "Message"],
Cell[54941, 1413, 278, 5, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55256, 1423, 938, 26, 54, "Input"],
Cell[56197, 1451, 1292, 43, 59, "Output"],
Cell[57492, 1496, 189, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57718, 1504, 4220, 136, 208, "Input"],
Cell[61941, 1642, 137, 4, 31, "Output"],
Cell[62081, 1648, 195, 6, 31, "Output"],
Cell[62279, 1656, 137, 4, 31, "Output"],
Cell[62419, 1662, 194, 6, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62650, 1673, 621, 21, 50, "Input"],
Cell[63274, 1696, 252, 8, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63563, 1709, 649, 22, 50, "Input"],
Cell[64215, 1733, 141, 4, 31, "Output"]
}, Open  ]],
Cell[64371, 1740, 86, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[64482, 1745, 608, 17, 33, "Input"],
Cell[65093, 1764, 152049, 2483, 306, 76786, 1247, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[217157, 4250, 882, 26, 31, "Input"],
Cell[CellGroupData[{
Cell[218064, 4280, 2756, 87, 80, "Input"],
Cell[220823, 4369, 2384, 79, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[223244, 4453, 4182, 139, 102, "Input"],
Cell[227429, 4594, 91, 1, 31, "Output"]
}, Open  ]],
Cell[227535, 4598, 88, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[227648, 4603, 1339, 40, 33, "Input"],
Cell[228990, 4645, 1923, 63, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230950, 4713, 2110, 71, 55, "Input"],
Cell[233063, 4786, 94, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233194, 4792, 598, 19, 72, "Input"],
Cell[233795, 4813, 93, 1, 31, "Output"],
Cell[233891, 4816, 100, 1, 31, "Output"],
Cell[233994, 4819, 93, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234124, 4825, 1525, 48, 74, "Input"],
Cell[235652, 4875, 88, 1, 31, "Output"],
Cell[235743, 4878, 232, 6, 31, "Output"]
}, Open  ]],
Cell[235990, 4887, 260, 7, 31, "Input"],
Cell[236253, 4896, 1477, 38, 96, "Input"],
Cell[237733, 4936, 604, 13, 33, "Output"],
Cell[238340, 4951, 1251, 28, 33, "Output"],
Cell[239594, 4981, 1246, 28, 33, "Output"],
Cell[240843, 5011, 2915, 73, 109, "Output"],
Cell[243761, 5086, 1231, 29, 55, "Input"]
}
]
*)

(* End of internal cache information *)
